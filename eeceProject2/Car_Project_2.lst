0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1034 (Dec 12 2012) (MSVC)
0000              4   ; This file was generated Tue Apr 01 20:44:18 2014
0000              5   ;--------------------------------------------------------
                  5   $name Car_Project_2
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public _Fake_run
0000             28            public _Move_Car_Further
0000             29            public _Move_Car_Closer
0000             30            public _Parallel_Park_Wait_6
0000             31            public _Parallel_Park_Wait_5
0000             32            public _Parallel_Park_Wait_4
0000             33            public _Parallel_Park_Wait_3
0000             34            public _Parallel_Park_Wait_2
0000             35            public _Parallel_Park_Wait_1
0000             36            public _pwmcounter
0000             37            public __c51_external_startup
0000             38            public _reverse
0000             39            public _dist_index
0000             40            public _dist_table
0000             41            public _right_motor_pwm2
0000             42            public _right_motor_pwm1
0000             43            public _right_motor_pwmcount2
0000             44            public _right_motor_pwmcount1
0000             45            public _left_motor_pwm2
0000             46            public _left_motor_pwm1
0000             47            public _left_motor_pwmcount2
0000             48            public _left_motor_pwmcount1
0000             49            public _Move_Right_Motor_Backwards
0000             50            public _Move_Right_Motor_Forwards
0000             51            public _Move_Left_Motor_Backwards
0000             52            public _Move_Left_Motor_Forwards
0000             53            public _Stop_Right_Motor
0000             54            public _Stop_Left_Motor
0000             55            public _wait50ms
0000             56            public _wait1s
0000             57            public _Get_Right_Distance
0000             58            public _Get_Left_Distance
0000             59            public _Stop_Car
0000             60            public _Face_Transmitter
0000             61            public _Wait_X_Time
0000             62            public _Wait_1ms
0000             63            public _Move_Forwards
0000             64            public _Parallel_Park
0000             65            public _Undo_Parallel_Park
0000             66            public _Turn_Car_Left
0000             67            public _Turn_Car_Right
0000             68            public _Move_Backwards
0000             69            public _Rotate_Car_180_CW
0000             70            public _Rotate_Car_180_CCW
0000             71            public _rx_byte
0000             72            public _wait_bit_time
0000             73            public _wait_one_and_half_bit_time
0000             74            public _SPIWrite
0000             75            public _GetADC
0000             76            public _Testing_Code
0000             77            public _run
0000             78   ;--------------------------------------------------------
0000             79   ; Special Function Registers
0000             80   ;--------------------------------------------------------
0000             81   _ACC            DATA 0xe0
0000             82   _B              DATA 0xf0
0000             83   _PSW            DATA 0xd0
0000             84   _SP             DATA 0x81
0000             85   _SPX            DATA 0xef
0000             86   _DPL            DATA 0x82
0000             87   _DPH            DATA 0x83
0000             88   _DPLB           DATA 0xd4
0000             89   _DPHB           DATA 0xd5
0000             90   _PAGE           DATA 0xf6
0000             91   _AX             DATA 0xe1
0000             92   _BX             DATA 0xf7
0000             93   _DSPR           DATA 0xe2
0000             94   _FIRD           DATA 0xe3
0000             95   _MACL           DATA 0xe4
0000             96   _MACH           DATA 0xe5
0000             97   _PCON           DATA 0x87
0000             98   _AUXR           DATA 0x8e
0000             99   _AUXR1          DATA 0xa2
0000            100   _DPCF           DATA 0xa1
0000            101   _CKRL           DATA 0x97
0000            102   _CKCKON0        DATA 0x8f
0000            103   _CKCKON1        DATA 0xaf
0000            104   _CKSEL          DATA 0x85
0000            105   _CLKREG         DATA 0xae
0000            106   _OSCCON         DATA 0x85
0000            107   _IE             DATA 0xa8
0000            108   _IEN0           DATA 0xa8
0000            109   _IEN1           DATA 0xb1
0000            110   _IPH0           DATA 0xb7
0000            111   _IP             DATA 0xb8
0000            112   _IPL0           DATA 0xb8
0000            113   _IPH1           DATA 0xb3
0000            114   _IPL1           DATA 0xb2
0000            115   _P0             DATA 0x80
0000            116   _P1             DATA 0x90
0000            117   _P2             DATA 0xa0
0000            118   _P3             DATA 0xb0
0000            119   _P4             DATA 0xc0
0000            120   _P0M0           DATA 0xe6
0000            121   _P0M1           DATA 0xe7
0000            122   _P1M0           DATA 0xd6
0000            123   _P1M1           DATA 0xd7
0000            124   _P2M0           DATA 0xce
0000            125   _P2M1           DATA 0xcf
0000            126   _P3M0           DATA 0xc6
0000            127   _P3M1           DATA 0xc7
0000            128   _P4M0           DATA 0xbe
0000            129   _P4M1           DATA 0xbf
0000            130   _SCON           DATA 0x98
0000            131   _SBUF           DATA 0x99
0000            132   _SADEN          DATA 0xb9
0000            133   _SADDR          DATA 0xa9
0000            134   _BDRCON         DATA 0x9b
0000            135   _BRL            DATA 0x9a
0000            136   _TCON           DATA 0x88
0000            137   _TMOD           DATA 0x89
0000            138   _TCONB          DATA 0x91
0000            139   _TL0            DATA 0x8a
0000            140   _TH0            DATA 0x8c
0000            141   _TL1            DATA 0x8b
0000            142   _TH1            DATA 0x8d
0000            143   _RL0            DATA 0xf2
0000            144   _RH0            DATA 0xf4
0000            145   _RL1            DATA 0xf3
0000            146   _RH1            DATA 0xf5
0000            147   _WDTRST         DATA 0xa6
0000            148   _WDTPRG         DATA 0xa7
0000            149   _T2CON          DATA 0xc8
0000            150   _T2MOD          DATA 0xc9
0000            151   _RCAP2H         DATA 0xcb
0000            152   _RCAP2L         DATA 0xca
0000            153   _TH2            DATA 0xcd
0000            154   _TL2            DATA 0xcc
0000            155   _SPCON          DATA 0xc3
0000            156   _SPSTA          DATA 0xc4
0000            157   _SPDAT          DATA 0xc5
0000            158   _SSCON          DATA 0x93
0000            159   _SSCS           DATA 0x94
0000            160   _SSDAT          DATA 0x95
0000            161   _SSADR          DATA 0x96
0000            162   _KBLS           DATA 0x9c
0000            163   _KBE            DATA 0x9d
0000            164   _KBF            DATA 0x9e
0000            165   _KBMOD          DATA 0x9f
0000            166   _BMSEL          DATA 0x92
0000            167   _FCON           DATA 0xd2
0000            168   _EECON          DATA 0xd2
0000            169   _ACSRA          DATA 0xa3
0000            170   _ACSRB          DATA 0xab
0000            171   _AREF           DATA 0xbd
0000            172   _DADC           DATA 0xa4
0000            173   _DADI           DATA 0xa5
0000            174   _DADL           DATA 0xac
0000            175   _DADH           DATA 0xad
0000            176   _CCON           DATA 0xd8
0000            177   _CMOD           DATA 0xd9
0000            178   _CL             DATA 0xe9
0000            179   _CH             DATA 0xf9
0000            180   _CCAPM0         DATA 0xda
0000            181   _CCAPM1         DATA 0xdb
0000            182   _CCAPM2         DATA 0xdc
0000            183   _CCAPM3         DATA 0xdd
0000            184   _CCAPM4         DATA 0xde
0000            185   _CCAP0H         DATA 0xfa
0000            186   _CCAP1H         DATA 0xfb
0000            187   _CCAP2H         DATA 0xfc
0000            188   _CCAP3H         DATA 0xfd
0000            189   _CCAP4H         DATA 0xfe
0000            190   _CCAP0L         DATA 0xea
0000            191   _CCAP1L         DATA 0xeb
0000            192   _CCAP2L         DATA 0xec
0000            193   _CCAP3L         DATA 0xed
0000            194   _CCAP4L         DATA 0xee
0000            195   ;--------------------------------------------------------
0000            196   ; special function bits
0000            197   ;--------------------------------------------------------
0000            198   _ACC_0          BIT 0xe0
0000            199   _ACC_1          BIT 0xe1
0000            200   _ACC_2          BIT 0xe2
0000            201   _ACC_3          BIT 0xe3
0000            202   _ACC_4          BIT 0xe4
0000            203   _ACC_5          BIT 0xe5
0000            204   _ACC_6          BIT 0xe6
0000            205   _ACC_7          BIT 0xe7
0000            206   _B_0            BIT 0xf0
0000            207   _B_1            BIT 0xf1
0000            208   _B_2            BIT 0xf2
0000            209   _B_3            BIT 0xf3
0000            210   _B_4            BIT 0xf4
0000            211   _B_5            BIT 0xf5
0000            212   _B_6            BIT 0xf6
0000            213   _B_7            BIT 0xf7
0000            214   _P              BIT 0xd0
0000            215   _F1             BIT 0xd1
0000            216   _OV             BIT 0xd2
0000            217   _RS0            BIT 0xd3
0000            218   _RS1            BIT 0xd4
0000            219   _F0             BIT 0xd5
0000            220   _AC             BIT 0xd6
0000            221   _CY             BIT 0xd7
0000            222   _EX0            BIT 0xa8
0000            223   _ET0            BIT 0xa9
0000            224   _EX1            BIT 0xaa
0000            225   _ET1            BIT 0xab
0000            226   _ES             BIT 0xac
0000            227   _ET2            BIT 0xad
0000            228   _EC             BIT 0xae
0000            229   _EA             BIT 0xaf
0000            230   _PX0            BIT 0xb8
0000            231   _PT0            BIT 0xb9
0000            232   _PX1            BIT 0xba
0000            233   _PT1            BIT 0xbb
0000            234   _PS             BIT 0xbc
0000            235   _PT2            BIT 0xbd
0000            236   _IP0D           BIT 0xbf
0000            237   _PPCL           BIT 0xbe
0000            238   _PT2L           BIT 0xbd
0000            239   _PLS            BIT 0xbc
0000            240   _PT1L           BIT 0xbb
0000            241   _PX1L           BIT 0xba
0000            242   _PT0L           BIT 0xb9
0000            243   _PX0L           BIT 0xb8
0000            244   _P0_0           BIT 0x80
0000            245   _P0_1           BIT 0x81
0000            246   _P0_2           BIT 0x82
0000            247   _P0_3           BIT 0x83
0000            248   _P0_4           BIT 0x84
0000            249   _P0_5           BIT 0x85
0000            250   _P0_6           BIT 0x86
0000            251   _P0_7           BIT 0x87
0000            252   _P1_0           BIT 0x90
0000            253   _P1_1           BIT 0x91
0000            254   _P1_2           BIT 0x92
0000            255   _P1_3           BIT 0x93
0000            256   _P1_4           BIT 0x94
0000            257   _P1_5           BIT 0x95
0000            258   _P1_6           BIT 0x96
0000            259   _P1_7           BIT 0x97
0000            260   _P2_0           BIT 0xa0
0000            261   _P2_1           BIT 0xa1
0000            262   _P2_2           BIT 0xa2
0000            263   _P2_3           BIT 0xa3
0000            264   _P2_4           BIT 0xa4
0000            265   _P2_5           BIT 0xa5
0000            266   _P2_6           BIT 0xa6
0000            267   _P2_7           BIT 0xa7
0000            268   _P3_0           BIT 0xb0
0000            269   _P3_1           BIT 0xb1
0000            270   _P3_2           BIT 0xb2
0000            271   _P3_3           BIT 0xb3
0000            272   _P3_4           BIT 0xb4
0000            273   _P3_5           BIT 0xb5
0000            274   _P3_6           BIT 0xb6
0000            275   _P3_7           BIT 0xb7
0000            276   _RXD            BIT 0xb0
0000            277   _TXD            BIT 0xb1
0000            278   _INT0           BIT 0xb2
0000            279   _INT1           BIT 0xb3
0000            280   _T0             BIT 0xb4
0000            281   _T1             BIT 0xb5
0000            282   _WR             BIT 0xb6
0000            283   _RD             BIT 0xb7
0000            284   _P4_0           BIT 0xc0
0000            285   _P4_1           BIT 0xc1
0000            286   _P4_2           BIT 0xc2
0000            287   _P4_3           BIT 0xc3
0000            288   _P4_4           BIT 0xc4
0000            289   _P4_5           BIT 0xc5
0000            290   _P4_6           BIT 0xc6
0000            291   _P4_7           BIT 0xc7
0000            292   _RI             BIT 0x98
0000            293   _TI             BIT 0x99
0000            294   _RB8            BIT 0x9a
0000            295   _TB8            BIT 0x9b
0000            296   _REN            BIT 0x9c
0000            297   _SM2            BIT 0x9d
0000            298   _SM1            BIT 0x9e
0000            299   _SM0            BIT 0x9f
0000            300   _IT0            BIT 0x88
0000            301   _IE0            BIT 0x89
0000            302   _IT1            BIT 0x8a
0000            303   _IE1            BIT 0x8b
0000            304   _TR0            BIT 0x8c
0000            305   _TF0            BIT 0x8d
0000            306   _TR1            BIT 0x8e
0000            307   _TF1            BIT 0x8f
0000            308   _CP_RL2         BIT 0xc8
0000            309   _C_T2           BIT 0xc9
0000            310   _TR2            BIT 0xca
0000            311   _EXEN2          BIT 0xcb
0000            312   _TCLK           BIT 0xcc
0000            313   _RCLK           BIT 0xcd
0000            314   _EXF2           BIT 0xce
0000            315   _TF2            BIT 0xcf
0000            316   _CF             BIT 0xdf
0000            317   _CR             BIT 0xde
0000            318   _CCF4           BIT 0xdc
0000            319   _CCF3           BIT 0xdb
0000            320   _CCF2           BIT 0xda
0000            321   _CCF1           BIT 0xd9
0000            322   _CCF0           BIT 0xd8
0000            323   ;--------------------------------------------------------
0000            324   ; overlayable register banks
0000            325   ;--------------------------------------------------------
0000            326            rbank0 segment data overlay
0000            327   ;--------------------------------------------------------
0000            328   ; internal ram data
0000            329   ;--------------------------------------------------------
0000            330            rseg R_DSEG
0000            331   _left_motor_pwmcount1:
0000            332            ds 1
0001            333   _left_motor_pwmcount2:
0001            334            ds 1
0002            335   _left_motor_pwm1:
0002            336            ds 1
0003            337   _left_motor_pwm2:
0003            338            ds 1
0004            339   _right_motor_pwmcount1:
0004            340            ds 1
0005            341   _right_motor_pwmcount2:
0005            342            ds 1
0006            343   _right_motor_pwm1:
0006            344            ds 1
0007            345   _right_motor_pwm2:
0007            346            ds 1
0008            347   _dist_table:
0008            348            ds 8
0010            349   _dist_index:
0010            350            ds 2
0012            351   _reverse:
0012            352            ds 1
0013            353   ;--------------------------------------------------------
0013            354   ; overlayable items in internal ram 
0013            355   ;--------------------------------------------------------
0000            356            rseg    R_OSEG
0000            357   ;--------------------------------------------------------
0000            358   ; indirectly addressable internal ram data
0000            359   ;--------------------------------------------------------
0000            360            rseg R_ISEG
0000            361   ;--------------------------------------------------------
0000            362   ; absolute internal ram data
0000            363   ;--------------------------------------------------------
0000            364            DSEG
0000            365   ;--------------------------------------------------------
0000            366   ; bit data
0000            367   ;--------------------------------------------------------
0000            368            rseg R_BSEG
0000            369   ;--------------------------------------------------------
0000            370   ; paged external ram data
0000            371   ;--------------------------------------------------------
0000            372            rseg R_PSEG
0000            373   ;--------------------------------------------------------
0000            374   ; external ram data
0000            375   ;--------------------------------------------------------
0000            376            rseg R_XSEG
0000            377   ;--------------------------------------------------------
0000            378   ; absolute external ram data
0000            379   ;--------------------------------------------------------
0000            380            XSEG
0000            381   ;--------------------------------------------------------
0000            382   ; external initialized ram data
0000            383   ;--------------------------------------------------------
0000            384            rseg R_IXSEG
0000            385            rseg R_HOME
0000            386            rseg R_GSINIT
0000            387            rseg R_CSEG
0000            388   ;--------------------------------------------------------
0000            389   ; Reset entry point and interrupt vectors
0000            390   ;--------------------------------------------------------
0000            391            CSEG at 0x0000
0000 020100     392            ljmp    _crt0
000B            393            CSEG at 0x000b
000B 020100     394            ljmp    _pwmcounter
000E            395   ;--------------------------------------------------------
000E            396   ; global & static initialisations
000E            397   ;--------------------------------------------------------
0000            398            rseg R_HOME
0000            399            rseg R_GSINIT
0000            400            rseg R_GSINIT
0000            401   ;--------------------------------------------------------
0000            402   ; data variables initialization
0000            403   ;--------------------------------------------------------
0000            404            rseg R_DINIT
0000            405   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:34: unsigned int dist_table[4] = {350, 150, 75, 30};
0000 75405E     406            mov     _dist_table,#0x5E
0003 754101     407            mov     (_dist_table + 1),#0x01
0006 754296     408            mov     (_dist_table + 0x0002),#0x96
0009 754300     409            mov     ((_dist_table + 0x0002) + 1),#0x00
000C 75444B     410            mov     (_dist_table + 0x0004),#0x4B
000F 754500     411            mov     ((_dist_table + 0x0004) + 1),#0x00
0012 75461E     412            mov     (_dist_table + 0x0006),#0x1E
0015 754700     413            mov     ((_dist_table + 0x0006) + 1),#0x00
0018            414            ; The linker places a 'ret' at the end of segment R_DINIT.
0018            415   ;--------------------------------------------------------
0018            416   ; code
0018            417   ;--------------------------------------------------------
0000            418            rseg R_CSEG
0000            419   ;------------------------------------------------------------
0000            420   ;Allocation info for local variables in function '_c51_external_startup'
0000            421   ;------------------------------------------------------------
0000            422   ;------------------------------------------------------------
0000            423   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:76: unsigned char _c51_external_startup(void)
0000            424   ;        -----------------------------------------
0000            425   ;         function _c51_external_startup
0000            426   ;        -----------------------------------------
0000            427   __c51_external_startup:
0000            428            using   0
0000            429   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:79: P0M0=0;  P0M1=0;
0000 75E600     430            mov     _P0M0,#0x00
0003 75E700     431            mov     _P0M1,#0x00
0006            432   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:80: P1M0=0;  P1M1=0;
0006 75D600     433            mov     _P1M0,#0x00
0009 75D700     434            mov     _P1M1,#0x00
000C            435   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:81: P2M0=0;  P2M1=0;
000C 75CE00     436            mov     _P2M0,#0x00
000F 75CF00     437            mov     _P2M1,#0x00
0012            438   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:82: P3M0=0;  P3M1=0;
0012 75C600     439            mov     _P3M0,#0x00
0015 75C700     440            mov     _P3M1,#0x00
0018            441   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:83: AUXR=0B_0001_0001; // 1152 bytes of internal XDATA, P4.4 is a general purpose I/O
0018 758E11     442            mov     _AUXR,#0x11
001B            443   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:84: P4M0=0;  P4M1=0;
001B 75BE00     444            mov     _P4M0,#0x00
001E 75BF00     445            mov     _P4M1,#0x00
0021            446   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:87: PCON|=0x80;
0021 438780     447            orl     _PCON,#0x80
0024            448   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:88: SCON = 0x52;
0024 759852     449            mov     _SCON,#0x52
0027            450   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:89: BDRCON=0;
0027 759B00     451            mov     _BDRCON,#0x00
002A            452   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:90: BRL=BRG_VAL;
002A 759AFA     453            mov     _BRL,#0xFA
002D            454   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:91: BDRCON=BRR|TBCK|RBCK|SPD;
002D 759B1E     455            mov     _BDRCON,#0x1E
0030            456   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:94: TR0=0; // Stop timer 0
0030 C28C       457            clr     _TR0
0032            458   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:95: TMOD=0x01; // 16-bit timer
0032 758901     459            mov     _TMOD,#0x01
0035            460   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:100: TH0=RH0=TIMER0_RELOAD_VALUE/0x100;
0035 75F4FF     461            mov     _RH0,#0xFF
0038 758CFF     462            mov     _TH0,#0xFF
003B            463   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:101: TL0=RL0=TIMER0_RELOAD_VALUE%0x100;
003B 75F248     464            mov     _RL0,#0x48
003E 758A48     465            mov     _TL0,#0x48
0041            466   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:102: TR0=1; // Start timer 0 (bit 4 in TCON)
0041 D28C       467            setb    _TR0
0043            468   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:103: ET0=1; // Enable timer 0 interrupt
0043 D2A9       469            setb    _ET0
0045            470   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:104: EA=1;  // Enable global interrupts
0045 D2AF       471            setb    _EA
0047            472   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:106: left_motor_pwmcount1 = 0;    
0047 75C000     473            mov     _left_motor_pwmcount1,#0x00
004A            474   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:107: left_motor_pwmcount2 = 0;
004A 757000     475            mov     _left_motor_pwmcount2,#0x00
004D            476   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:108: right_motor_pwmcount1 = 0;
004D 758000     477            mov     _right_motor_pwmcount1,#0x00
0050            478   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:109: right_motor_pwmcount2 = 0;
0050 753000     479            mov     _right_motor_pwmcount2,#0x00
0053            480   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:111: return 0;
0053 758200     481            mov     dpl,#0x00
0056 22         482            ret
0057            483   ;------------------------------------------------------------
0057            484   ;Allocation info for local variables in function 'pwmcounter'
0057            485   ;------------------------------------------------------------
0057            486   ;------------------------------------------------------------
0057            487   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:116: void pwmcounter (void) interrupt 1
0057            488   ;        -----------------------------------------
0057            489   ;         function pwmcounter
0057            490   ;        -----------------------------------------
0057            491   _pwmcounter:
0057 C0E0       492            push    acc
0059 C0D0       493            push    psw
005B 75D000     494            mov     psw,#0x00
005E            495   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:118: if(++left_motor_pwmcount1>99) left_motor_pwmcount1=0;
005E 05C0       496            inc     _left_motor_pwmcount1
0060 E5C0       497            mov     a,_left_motor_pwmcount1
0062 249C       498            add     a,#0xff - 0x63
0064 5001       499            jnc     L003002?
0066 75C000     500            mov     _left_motor_pwmcount1,#0x00
0069            501   L003002?:
0069            502   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:119: P1_2=(left_motor_pwm1>left_motor_pwmcount1)?1:0;
0069 C3         503            clr     c
006A E5C0       504            mov     a,_left_motor_pwmcount1
006C 9520       505            subb    a,_left_motor_pwm1
006E 9292       506            mov     _P1_2,c
0070            507   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:121: if(++left_motor_pwmcount2>99) left_motor_pwmcount2=0;
0070 0570       508            inc     _left_motor_pwmcount2
0072 E570       509            mov     a,_left_motor_pwmcount2
0074 249C       510            add     a,#0xff - 0x63
0076 5001       511            jnc     L003004?
0078 757000     512            mov     _left_motor_pwmcount2,#0x00
007B            513   L003004?:
007B            514   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:122: P1_4=(left_motor_pwm2>left_motor_pwmcount2)?1:0;
007B C3         515            clr     c
007C E570       516            mov     a,_left_motor_pwmcount2
007E 95D0       517            subb    a,_left_motor_pwm2
0080 9294       518            mov     _P1_4,c
0082            519   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:124: if(++right_motor_pwmcount1>99) right_motor_pwmcount1=0;
0082 0580       520            inc     _right_motor_pwmcount1
0084 E580       521            mov     a,_right_motor_pwmcount1
0086 249C       522            add     a,#0xff - 0x63
0088 5001       523            jnc     L003006?
008A 758000     524            mov     _right_motor_pwmcount1,#0x00
008D            525   L003006?:
008D            526   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:125: P1_0=(right_motor_pwm1>right_motor_pwmcount1)?1:0;
008D C3         527            clr     c
008E E580       528            mov     a,_right_motor_pwmcount1
0090 95E0       529            subb    a,_right_motor_pwm1
0092 9290       530            mov     _P1_0,c
0094            531   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:127: if(++right_motor_pwmcount2>99) right_motor_pwmcount2=0;
0094 0530       532            inc     _right_motor_pwmcount2
0096 E530       533            mov     a,_right_motor_pwmcount2
0098 249C       534            add     a,#0xff - 0x63
009A 5001       535            jnc     L003008?
009C 753000     536            mov     _right_motor_pwmcount2,#0x00
009F            537   L003008?:
009F            538   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:128: P1_1=(right_motor_pwm2>right_motor_pwmcount2)?1:0;
009F C3         539            clr     c
00A0 E530       540            mov     a,_right_motor_pwmcount2
00A2 9590       541            subb    a,_right_motor_pwm2
00A4 9291       542            mov     _P1_1,c
00A6 D0D0       543            pop     psw
00A8 D0E0       544            pop     acc
00AA 32         545            reti
00AB            546   ;        eliminated unneeded push/pop dpl
00AB            547   ;        eliminated unneeded push/pop dph
00AB            548   ;        eliminated unneeded push/pop b
00AB            549   ;------------------------------------------------------------
00AB            550   ;Allocation info for local variables in function 'Move_Right_Motor_Backwards'
00AB            551   ;------------------------------------------------------------
00AB            552   ;------------------------------------------------------------
00AB            553   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:133: void Move_Right_Motor_Backwards(){
00AB            554   ;        -----------------------------------------
00AB            555   ;         function Move_Right_Motor_Backwards
00AB            556   ;        -----------------------------------------
00AB            557   _Move_Right_Motor_Backwards:
00AB            558   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:134: right_motor_pwm1 = 37;
00AB 75E025     559            mov     _right_motor_pwm1,#0x25
00AE            560   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:135: right_motor_pwm2 = 0;
00AE 759000     561            mov     _right_motor_pwm2,#0x00
00B1 22         562            ret
00B2            563   ;------------------------------------------------------------
00B2            564   ;Allocation info for local variables in function 'Move_Right_Motor_Forwards'
00B2            565   ;------------------------------------------------------------
00B2            566   ;------------------------------------------------------------
00B2            567   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:141: void Move_Right_Motor_Forwards (void){
00B2            568   ;        -----------------------------------------
00B2            569   ;         function Move_Right_Motor_Forwards
00B2            570   ;        -----------------------------------------
00B2            571   _Move_Right_Motor_Forwards:
00B2            572   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:142: right_motor_pwm1 = 0;
00B2 75E000     573            mov     _right_motor_pwm1,#0x00
00B5            574   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:143: right_motor_pwm2 = 48;
00B5 759030     575            mov     _right_motor_pwm2,#0x30
00B8 22         576            ret
00B9            577   ;------------------------------------------------------------
00B9            578   ;Allocation info for local variables in function 'Move_Left_Motor_Backwards'
00B9            579   ;------------------------------------------------------------
00B9            580   ;------------------------------------------------------------
00B9            581   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:149: void Move_Left_Motor_Backwards (void){
00B9            582   ;        -----------------------------------------
00B9            583   ;         function Move_Left_Motor_Backwards
00B9            584   ;        -----------------------------------------
00B9            585   _Move_Left_Motor_Backwards:
00B9            586   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:150: left_motor_pwm1 = 43;
00B9 75202B     587            mov     _left_motor_pwm1,#0x2B
00BC            588   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:151: left_motor_pwm2 = 0;
00BC 75D000     589            mov     _left_motor_pwm2,#0x00
00BF 22         590            ret
00C0            591   ;------------------------------------------------------------
00C0            592   ;Allocation info for local variables in function 'Move_Left_Motor_Forwards'
00C0            593   ;------------------------------------------------------------
00C0            594   ;------------------------------------------------------------
00C0            595   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:156: void Move_Left_Motor_Forwards (void){
00C0            596   ;        -----------------------------------------
00C0            597   ;         function Move_Left_Motor_Forwards
00C0            598   ;        -----------------------------------------
00C0            599   _Move_Left_Motor_Forwards:
00C0            600   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:157: left_motor_pwm1 = 0;
00C0 752000     601            mov     _left_motor_pwm1,#0x00
00C3            602   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:158: left_motor_pwm2 = 47;
00C3 75D02F     603            mov     _left_motor_pwm2,#0x2F
00C6 22         604            ret
00C7            605   ;------------------------------------------------------------
00C7            606   ;Allocation info for local variables in function 'Stop_Right_Motor'
00C7            607   ;------------------------------------------------------------
00C7            608   ;------------------------------------------------------------
00C7            609   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:162: void Stop_Right_Motor (void){
00C7            610   ;        -----------------------------------------
00C7            611   ;         function Stop_Right_Motor
00C7            612   ;        -----------------------------------------
00C7            613   _Stop_Right_Motor:
00C7            614   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:163: right_motor_pwm1 = 0;
00C7 75E000     615            mov     _right_motor_pwm1,#0x00
00CA            616   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:164: right_motor_pwm2 = 0;
00CA 759000     617            mov     _right_motor_pwm2,#0x00
00CD 22         618            ret
00CE            619   ;------------------------------------------------------------
00CE            620   ;Allocation info for local variables in function 'Stop_Left_Motor'
00CE            621   ;------------------------------------------------------------
00CE            622   ;------------------------------------------------------------
00CE            623   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:168: void Stop_Left_Motor (void){
00CE            624   ;        -----------------------------------------
00CE            625   ;         function Stop_Left_Motor
00CE            626   ;        -----------------------------------------
00CE            627   _Stop_Left_Motor:
00CE            628   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:169: left_motor_pwm1 = 0;
00CE 752000     629            mov     _left_motor_pwm1,#0x00
00D1            630   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:170: left_motor_pwm2 = 0;
00D1 75D000     631            mov     _left_motor_pwm2,#0x00
00D4 22         632            ret
00D5            633   ;------------------------------------------------------------
00D5            634   ;Allocation info for local variables in function 'wait50ms'
00D5            635   ;------------------------------------------------------------
00D5            636   ;------------------------------------------------------------
00D5            637   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:173: void wait50ms(){
00D5            638   ;        -----------------------------------------
00D5            639   ;         function wait50ms
00D5            640   ;        -----------------------------------------
00D5            641   _wait50ms:
00D5            642   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:184: _endasm;
00D5            643            
00D5            644      ;For a 22.1184MHz crystal one machine cycle
00D5            645      ;takes 12/22.1184MHz=0.5425347us
00D5 7A01       646                  mov R2, #1
00D7            647             Lg3:
00D7 79F8       648            mov R1, #248
00D9            649             Lg2:
00D9 78B8       650            mov R0, #184
00DB            651             Lg1:
00DB D8F0       652            djnz R0, Lg1 ; 2 machine cycles-> 2*0.5425347us*184=200us
00DD D9B0       653                  djnz R1, Lg2 ; 200us*250=0.05s
00DF DA70       654                  djnz R2, Lg3 ; 0.05s*20=50ms
00E1 22         655                  ret
00E2            656                
00E2 22         657            ret
00E3            658   ;------------------------------------------------------------
00E3            659   ;Allocation info for local variables in function 'wait1s'
00E3            660   ;------------------------------------------------------------
00E3            661   ;i                         Allocated to registers r2 r3 
00E3            662   ;------------------------------------------------------------
00E3            663   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:187: void wait1s(){
00E3            664   ;        -----------------------------------------
00E3            665   ;         function wait1s
00E3            666   ;        -----------------------------------------
00E3            667   _wait1s:
00E3            668   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:189: for (i = 0; i < 20; ++i){
00E3 7A14       669            mov     r2,#0x14
00E5 7B00       670            mov     r3,#0x00
00E7            671   L011003?:
00E7            672   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:190: wait50ms();
00E7 C002       673            push    ar2
00E9 C003       674            push    ar3
00EB 120100     675            lcall   _wait50ms
00EE D003       676            pop     ar3
00F0 D002       677            pop     ar2
00F2 1A         678            dec     r2
00F3 BAFF70     679            cjne    r2,#0xff,L011009?
00F6 1B         680            dec     r3
00F7            681   L011009?:
00F7            682   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:189: for (i = 0; i < 20; ++i){
00F7 EA         683            mov     a,r2
00F8 4B         684            orl     a,r3
00F9 7001       685            jnz     L011003?
00FB 22         686            ret
00FC            687   ;------------------------------------------------------------
00FC            688   ;Allocation info for local variables in function 'Get_Right_Distance'
00FC            689   ;------------------------------------------------------------
00FC            690   ;------------------------------------------------------------
00FC            691   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:198: unsigned int Get_Right_Distance(void){
00FC            692   ;        -----------------------------------------
00FC            693   ;         function Get_Right_Distance
00FC            694   ;        -----------------------------------------
00FC            695   _Get_Right_Distance:
00FC            696   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:201: return GetADC(2); //for now channel 1 is right motor
00FC 758202     697            mov     dpl,#0x02
00FF 020100     698            ljmp    _GetADC
0102            699   ;------------------------------------------------------------
0102            700   ;Allocation info for local variables in function 'Get_Left_Distance'
0102            701   ;------------------------------------------------------------
0102            702   ;------------------------------------------------------------
0102            703   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:206: unsigned int Get_Left_Distance(void){
0102            704   ;        -----------------------------------------
0102            705   ;         function Get_Left_Distance
0102            706   ;        -----------------------------------------
0102            707   _Get_Left_Distance:
0102            708   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:208: return GetADC(3); //for now channel 0 is left motor
0102 758203     709            mov     dpl,#0x03
0105 020100     710            ljmp    _GetADC
0108            711   ;------------------------------------------------------------
0108            712   ;Allocation info for local variables in function 'Stop_Car'
0108            713   ;------------------------------------------------------------
0108            714   ;------------------------------------------------------------
0108            715   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:212: void Stop_Car (void){
0108            716   ;        -----------------------------------------
0108            717   ;         function Stop_Car
0108            718   ;        -----------------------------------------
0108            719   _Stop_Car:
0108            720   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:213: Stop_Right_Motor();
0108 120100     721            lcall   _Stop_Right_Motor
010B            722   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:214: Stop_Left_Motor();
010B 020100     723            ljmp    _Stop_Left_Motor
010E            724   ;------------------------------------------------------------
010E            725   ;Allocation info for local variables in function 'Face_Transmitter'
010E            726   ;------------------------------------------------------------
010E            727   ;right_distance            Allocated to registers r2 r3 
010E            728   ;left_distance             Allocated to registers r4 r5 
010E            729   ;------------------------------------------------------------
010E            730   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:218: void Face_Transmitter(void){
010E            731   ;        -----------------------------------------
010E            732   ;         function Face_Transmitter
010E            733   ;        -----------------------------------------
010E            734   _Face_Transmitter:
010E            735   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:222: right_distance = Get_Right_Distance();
010E 120100     736            lcall   _Get_Right_Distance
0111 AA82       737            mov     r2,dpl
0113 AB83       738            mov     r3,dph
0115            739   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:223: left_distance = Get_Left_Distance();
0115 C002       740            push    ar2
0117 C003       741            push    ar3
0119 120100     742            lcall   _Get_Left_Distance
011C AC82       743            mov     r4,dpl
011E AD83       744            mov     r5,dph
0120 D003       745            pop     ar3
0122 D002       746            pop     ar2
0124            747   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:228: printf(" \n Before Turning!!!!!!!!! Right Voltage Reading: %u, Left Voltage Reading: %u", right_distance, left_distance);
0124 C002       748            push    ar2
0126 C003       749            push    ar3
0128 C004       750            push    ar4
012A C005       751            push    ar5
012C C004       752            push    ar4
012E C005       753            push    ar5
0130 C002       754            push    ar2
0132 C003       755            push    ar3
0134 74F0       756            mov     a,#__str_0
0136 C0E0       757            push    acc
0138 7490       758            mov     a,#(__str_0 >> 8)
013A C0E0       759            push    acc
013C 7480       760            mov     a,#0x80
013E C0E0       761            push    acc
0140 120100     762            lcall   _printf
0143 E581       763            mov     a,sp
0145 24F9       764            add     a,#0xf9
0147 F581       765            mov     sp,a
0149 D005       766            pop     ar5
014B D004       767            pop     ar4
014D D003       768            pop     ar3
014F D002       769            pop     ar2
0151            770   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:229: if (right_distance - left_distance > 50){
0151 EA         771            mov     a,r2
0152 C3         772            clr     c
0153 9C         773            subb    a,r4
0154 FE         774            mov     r6,a
0155 EB         775            mov     a,r3
0156 9D         776            subb    a,r5
0157 FF         777            mov     r7,a
0158 C3         778            clr     c
0159 7432       779            mov     a,#0x32
015B 9E         780            subb    a,r6
015C E4         781            clr     a
015D 9F         782            subb    a,r7
015E 5001       783            jnc     L015010?
0160            784   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:231: while(right_distance > left_distance ){
0160            785   L015001?:
0160 C3         786            clr     c
0161 EC         787            mov     a,r4
0162 9A         788            subb    a,r2
0163 ED         789            mov     a,r5
0164 9B         790            subb    a,r3
0165 5001       791            jnc     L015003?
0167            792   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:232: Turn_Car_Right();
0167 120100     793            lcall   _Turn_Car_Right
016A            794   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:233: right_distance = Get_Right_Distance();
016A 120100     795            lcall   _Get_Right_Distance
016D AA82       796            mov     r2,dpl
016F AB83       797            mov     r3,dph
0171            798   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:234: left_distance = Get_Left_Distance();
0171 C002       799            push    ar2
0173 C003       800            push    ar3
0175 120100     801            lcall   _Get_Left_Distance
0178 AC82       802            mov     r4,dpl
017A AD83       803            mov     r5,dph
017C D003       804            pop     ar3
017E D002       805            pop     ar2
0180            806   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:235: printf(" \n First Loop Right Voltage Reading: %u, Left Voltage Reading: %u", right_distance, left_distance);
0180 C002       807            push    ar2
0182 C003       808            push    ar3
0184 C004       809            push    ar4
0186 C005       810            push    ar5
0188 C004       811            push    ar4
018A C005       812            push    ar5
018C C002       813            push    ar2
018E C003       814            push    ar3
0190 7470       815            mov     a,#__str_1
0192 C0E0       816            push    acc
0194 7492       817            mov     a,#(__str_1 >> 8)
0196 C0E0       818            push    acc
0198 7480       819            mov     a,#0x80
019A C0E0       820            push    acc
019C 120100     821            lcall   _printf
019F E581       822            mov     a,sp
01A1 24F9       823            add     a,#0xf9
01A3 F581       824            mov     sp,a
01A5            825   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:236: printf("\r");
01A5 74B0       826            mov     a,#__str_2
01A7 C0E0       827            push    acc
01A9 7492       828            mov     a,#(__str_2 >> 8)
01AB C0E0       829            push    acc
01AD 7480       830            mov     a,#0x80
01AF C0E0       831            push    acc
01B1 120100     832            lcall   _printf
01B4 1581       833            dec     sp
01B6 1581       834            dec     sp
01B8 1581       835            dec     sp
01BA D005       836            pop     ar5
01BC D004       837            pop     ar4
01BE D003       838            pop     ar3
01C0 D002       839            pop     ar2
01C2 8001       840            sjmp    L015001?
01C4            841   L015003?:
01C4            842   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:238: Stop_Car();
01C4 120100     843            lcall   _Stop_Car
01C7 8001       844            sjmp    L015011?
01C9            845   L015010?:
01C9            846   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:240: else if (left_distance - right_distance > 30){
01C9 EC         847            mov     a,r4
01CA C3         848            clr     c
01CB 9A         849            subb    a,r2
01CC FE         850            mov     r6,a
01CD ED         851            mov     a,r5
01CE 9B         852            subb    a,r3
01CF FF         853            mov     r7,a
01D0 C3         854            clr     c
01D1 741E       855            mov     a,#0x1E
01D3 9E         856            subb    a,r6
01D4 E4         857            clr     a
01D5 9F         858            subb    a,r7
01D6 5001       859            jnc     L015011?
01D8            860   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:242: while(left_distance > right_distance ){
01D8            861   L015004?:
01D8 C3         862            clr     c
01D9 EA         863            mov     a,r2
01DA 9C         864            subb    a,r4
01DB EB         865            mov     a,r3
01DC 9D         866            subb    a,r5
01DD 5001       867            jnc     L015006?
01DF            868   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:243: Turn_Car_Left();
01DF 120100     869            lcall   _Turn_Car_Left
01E2            870   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:244: right_distance = Get_Right_Distance();
01E2 120100     871            lcall   _Get_Right_Distance
01E5 AA82       872            mov     r2,dpl
01E7 AB83       873            mov     r3,dph
01E9            874   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:245: left_distance = Get_Left_Distance();
01E9 C002       875            push    ar2
01EB C003       876            push    ar3
01ED 120100     877            lcall   _Get_Left_Distance
01F0 AC82       878            mov     r4,dpl
01F2 AD83       879            mov     r5,dph
01F4 D003       880            pop     ar3
01F6 D002       881            pop     ar2
01F8            882   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:246: printf(" \n Second Loop Right Voltage Reading: %u, Left Voltage Reading: %u", right_distance, left_distance);
01F8 C002       883            push    ar2
01FA C003       884            push    ar3
01FC C004       885            push    ar4
01FE C005       886            push    ar5
0200 C004       887            push    ar4
0202 C005       888            push    ar5
0204 C002       889            push    ar2
0206 C003       890            push    ar3
0208 74B0       891            mov     a,#__str_3
020A C0E0       892            push    acc
020C 7493       893            mov     a,#(__str_3 >> 8)
020E C0E0       894            push    acc
0210 7480       895            mov     a,#0x80
0212 C0E0       896            push    acc
0214 120100     897            lcall   _printf
0217 E581       898            mov     a,sp
0219 24F9       899            add     a,#0xf9
021B F581       900            mov     sp,a
021D            901   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:247: printf("\r");
021D 74B0       902            mov     a,#__str_2
021F C0E0       903            push    acc
0221 7492       904            mov     a,#(__str_2 >> 8)
0223 C0E0       905            push    acc
0225 7480       906            mov     a,#0x80
0227 C0E0       907            push    acc
0229 120100     908            lcall   _printf
022C 1581       909            dec     sp
022E 1581       910            dec     sp
0230 1581       911            dec     sp
0232 D005       912            pop     ar5
0234 D004       913            pop     ar4
0236 D003       914            pop     ar3
0238 D002       915            pop     ar2
023A 8001       916            sjmp    L015004?
023C            917   L015006?:
023C            918   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:249: Stop_Car();
023C 120100     919            lcall   _Stop_Car
023F            920   L015011?:
023F            921   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:251: printf("made through both loops");
023F 74F0       922            mov     a,#__str_4
0241 C0E0       923            push    acc
0243 7493       924            mov     a,#(__str_4 >> 8)
0245 C0E0       925            push    acc
0247 7480       926            mov     a,#0x80
0249 C0E0       927            push    acc
024B 120100     928            lcall   _printf
024E 1581       929            dec     sp
0250 1581       930            dec     sp
0252 1581       931            dec     sp
0254            932   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:253: return;
0254 22         933            ret
0255            934   ;------------------------------------------------------------
0255            935   ;Allocation info for local variables in function 'Wait_X_Time'
0255            936   ;------------------------------------------------------------
0255            937   ;time                      Allocated to registers r2 r3 
0255            938   ;i                         Allocated to registers r4 r5 
0255            939   ;------------------------------------------------------------
0255            940   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:257: void Wait_X_Time(int time){
0255            941   ;        -----------------------------------------
0255            942   ;         function Wait_X_Time
0255            943   ;        -----------------------------------------
0255            944   _Wait_X_Time:
0255 AA82       945            mov     r2,dpl
0257 AB83       946            mov     r3,dph
0259            947   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:259: for (i = 0; i < time; ++i){
0259 7C00       948            mov     r4,#0x00
025B 7D00       949            mov     r5,#0x00
025D            950   L016001?:
025D C3         951            clr     c
025E EC         952            mov     a,r4
025F 9A         953            subb    a,r2
0260 ED         954            mov     a,r5
0261 6480       955            xrl     a,#0x80
0263 8BF0       956            mov     b,r3
0265 63F080     957            xrl     b,#0x80
0268 95F0       958            subb    a,b
026A 5001       959            jnc     L016005?
026C            960   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:260: Wait_1ms();
026C C002       961            push    ar2
026E C003       962            push    ar3
0270 C004       963            push    ar4
0272 C005       964            push    ar5
0274 120100     965            lcall   _Wait_1ms
0277 D005       966            pop     ar5
0279 D004       967            pop     ar4
027B D003       968            pop     ar3
027D D002       969            pop     ar2
027F            970   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:259: for (i = 0; i < time; ++i){
027F 0C         971            inc     r4
0280 BC0030     972            cjne    r4,#0x00,L016001?
0283 0D         973            inc     r5
0284 8001       974            sjmp    L016001?
0286            975   L016005?:
0286 22         976            ret
0287            977   ;------------------------------------------------------------
0287            978   ;Allocation info for local variables in function 'Wait_1ms'
0287            979   ;------------------------------------------------------------
0287            980   ;------------------------------------------------------------
0287            981   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:264: void Wait_1ms(void){
0287            982   ;        -----------------------------------------
0287            983   ;         function Wait_1ms
0287            984   ;        -----------------------------------------
0287            985   _Wait_1ms:
0287            986   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:275: _endasm;
0287            987            
0287            988      ;For a 22.1184MHz crystal one machine cycle
0287            989      ;takes 12/22.1184MHz=0.5425347us
0287 7A02       990                  mov R2, #2
0289            991             Lz3:
0289 7905       992            mov R1, #5
028B            993             Lz2:
028B 785C       994            mov R0, #92
028D            995             Lz1:
028D D870       996            djnz R0, Lz1 ; 2 machine cycles-> 2*0.5425347us*184=200us
028F D930       997                  djnz R1, Lz2 ; 200us*250=0.05s
0291 DAF0       998                  djnz R2, Lz3 ; 0.05s*20=50ms
0293 22         999                  ret
0294           1000                
0294 22        1001            ret
0295           1002   ;------------------------------------------------------------
0295           1003   ;Allocation info for local variables in function 'Parallel_Park_Wait_1'
0295           1004   ;------------------------------------------------------------
0295           1005   ;------------------------------------------------------------
0295           1006   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:279: void Parallel_Park_Wait_1(void){
0295           1007   ;        -----------------------------------------
0295           1008   ;         function Parallel_Park_Wait_1
0295           1009   ;        -----------------------------------------
0295           1010   _Parallel_Park_Wait_1:
0295           1011   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:290: _endasm;
0295           1012            
0295           1013      ;For a 22.1184MHz crystal one machine cycle
0295           1014      ;takes 12/22.1184MHz=0.5425347us
0295 7A14      1015                  mov R2, #20 ;25
0297           1016             La3:
0297 79F8      1017            mov R1, #248
0299           1018             La2:
0299 78B8      1019            mov R0, #184
029B           1020             La1:
029B D830      1021            djnz R0, La1 ; 2 machine cycles-> 2*0.5425347us*184=200us
029D D9F0      1022                  djnz R1, La2 ; 200us*250=0.05s
029F DAB0      1023                  djnz R2, La3 ; 0.05s*20=50ms
02A1 22        1024                  ret
02A2           1025                
02A2 22        1026            ret
02A3           1027   ;------------------------------------------------------------
02A3           1028   ;Allocation info for local variables in function 'Parallel_Park_Wait_2'
02A3           1029   ;------------------------------------------------------------
02A3           1030   ;------------------------------------------------------------
02A3           1031   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:294: void Parallel_Park_Wait_2(void){
02A3           1032   ;        -----------------------------------------
02A3           1033   ;         function Parallel_Park_Wait_2
02A3           1034   ;        -----------------------------------------
02A3           1035   _Parallel_Park_Wait_2:
02A3           1036   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:305: _endasm;
02A3           1037            
02A3           1038      ;For a 22.1184MHz crystal one machine cycle
02A3           1039      ;takes 12/22.1184MHz=0.5425347us
02A3 7A01      1040                  mov R2, #1
02A5           1041             Lb3:
02A5 79F8      1042            mov R1, #248
02A7           1043             Lb2:
02A7 78B8      1044            mov R0, #184
02A9           1045             Lb1:
02A9 D8F0      1046            djnz R0, Lb1 ; 2 machine cycles-> 2*0.5425347us*184=200us
02AB D9B0      1047                  djnz R1, Lb2 ; 200us*250=0.05s
02AD DA70      1048                  djnz R2, Lb3 ; 0.05s*20=50ms
02AF 22        1049                  ret
02B0           1050                
02B0 22        1051            ret
02B1           1052   ;------------------------------------------------------------
02B1           1053   ;Allocation info for local variables in function 'Parallel_Park_Wait_3'
02B1           1054   ;------------------------------------------------------------
02B1           1055   ;------------------------------------------------------------
02B1           1056   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:309: void Parallel_Park_Wait_3(void){
02B1           1057   ;        -----------------------------------------
02B1           1058   ;         function Parallel_Park_Wait_3
02B1           1059   ;        -----------------------------------------
02B1           1060   _Parallel_Park_Wait_3:
02B1           1061   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:320: _endasm;
02B1           1062            
02B1           1063      ;For a 22.1184MHz crystal one machine cycle
02B1           1064      ;takes 12/22.1184MHz=0.5425347us
02B1 7A0C      1065                  mov R2, #12
02B3           1066             Lc3:
02B3 79F8      1067            mov R1, #248
02B5           1068             Lc2:
02B5 78B8      1069            mov R0, #184
02B7           1070             Lc1:
02B7 D8B0      1071            djnz R0, Lc1 ; 2 machine cycles-> 2*0.5425347us*184=200us
02B9 D970      1072                  djnz R1, Lc2 ; 200us*250=0.05s
02BB DA30      1073                  djnz R2, Lc3 ; 0.05s*20=50ms
02BD 22        1074                  ret
02BE           1075                
02BE 22        1076            ret
02BF           1077   ;------------------------------------------------------------
02BF           1078   ;Allocation info for local variables in function 'Parallel_Park_Wait_4'
02BF           1079   ;------------------------------------------------------------
02BF           1080   ;------------------------------------------------------------
02BF           1081   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:324: void Parallel_Park_Wait_4(void){
02BF           1082   ;        -----------------------------------------
02BF           1083   ;         function Parallel_Park_Wait_4
02BF           1084   ;        -----------------------------------------
02BF           1085   _Parallel_Park_Wait_4:
02BF           1086   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:335: _endasm;
02BF           1087            
02BF           1088      ;For a 22.1184MHz crystal one machine cycle
02BF           1089      ;takes 12/22.1184MHz=0.5425347us
02BF 7A15      1090                  mov R2, #21
02C1           1091             Ld3:
02C1 79F8      1092            mov R1, #248
02C3           1093             Ld2:
02C3 78B8      1094            mov R0, #184
02C5           1095             Ld1:
02C5 D870      1096            djnz R0, Ld1 ; 2 machine cycles-> 2*0.5425347us*184=200us
02C7 D930      1097                  djnz R1, Ld2 ; 200us*250=0.05s
02C9 DAF0      1098                  djnz R2, Ld3 ; 0.05s*20=50ms
02CB 22        1099                  ret
02CC           1100                
02CC 22        1101            ret
02CD           1102   ;------------------------------------------------------------
02CD           1103   ;Allocation info for local variables in function 'Parallel_Park_Wait_5'
02CD           1104   ;------------------------------------------------------------
02CD           1105   ;------------------------------------------------------------
02CD           1106   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:339: void Parallel_Park_Wait_5(void){
02CD           1107   ;        -----------------------------------------
02CD           1108   ;         function Parallel_Park_Wait_5
02CD           1109   ;        -----------------------------------------
02CD           1110   _Parallel_Park_Wait_5:
02CD           1111   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:350: _endasm;
02CD           1112            
02CD           1113      ;For a 22.1184MHz crystal one machine cycle
02CD           1114      ;takes 12/22.1184MHz=0.5425347us
02CD 7A0D      1115                  mov R2, #13
02CF           1116             Le3:
02CF 79F8      1117            mov R1, #248
02D1           1118             Le2:
02D1 78B8      1119            mov R0, #184
02D3           1120             Le1:
02D3 D830      1121            djnz R0, Le1 ; 2 machine cycles-> 2*0.5425347us*184=200us
02D5 D9F0      1122                  djnz R1, Le2 ; 200us*250=0.05s
02D7 DAB0      1123                  djnz R2, Le3 ; 0.05s*20=50ms
02D9 22        1124                  ret
02DA           1125                
02DA 22        1126            ret
02DB           1127   ;------------------------------------------------------------
02DB           1128   ;Allocation info for local variables in function 'Parallel_Park_Wait_6'
02DB           1129   ;------------------------------------------------------------
02DB           1130   ;------------------------------------------------------------
02DB           1131   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:354: void Parallel_Park_Wait_6(void){
02DB           1132   ;        -----------------------------------------
02DB           1133   ;         function Parallel_Park_Wait_6
02DB           1134   ;        -----------------------------------------
02DB           1135   _Parallel_Park_Wait_6:
02DB           1136   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:365: _endasm;
02DB           1137            
02DB           1138      ;For a 22.1184MHz crystal one machine cycle
02DB           1139      ;takes 12/22.1184MHz=0.5425347us
02DB 7A01      1140                  mov R2, #1
02DD           1141             Lf3:
02DD 79F8      1142            mov R1, #248
02DF           1143             Lf2:
02DF 78B8      1144            mov R0, #184
02E1           1145             Lf1:
02E1 D8F0      1146            djnz R0, Lf1 ; 2 machine cycles-> 2*0.5425347us*184=200us
02E3 D9B0      1147                  djnz R1, Lf2 ; 200us*250=0.05s
02E5 DA70      1148                  djnz R2, Lf3 ; 0.05s*20=50ms
02E7 22        1149                  ret
02E8           1150                
02E8 22        1151            ret
02E9           1152   ;------------------------------------------------------------
02E9           1153   ;Allocation info for local variables in function 'Move_Forwards'
02E9           1154   ;------------------------------------------------------------
02E9           1155   ;------------------------------------------------------------
02E9           1156   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:370: void Move_Forwards(void){
02E9           1157   ;        -----------------------------------------
02E9           1158   ;         function Move_Forwards
02E9           1159   ;        -----------------------------------------
02E9           1160   _Move_Forwards:
02E9           1161   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:371: Move_Right_Motor_Forwards();
02E9 120100    1162            lcall   _Move_Right_Motor_Forwards
02EC           1163   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:372: Move_Left_Motor_Forwards();
02EC 020100    1164            ljmp    _Move_Left_Motor_Forwards
02EF           1165   ;------------------------------------------------------------
02EF           1166   ;Allocation info for local variables in function 'Parallel_Park'
02EF           1167   ;------------------------------------------------------------
02EF           1168   ;------------------------------------------------------------
02EF           1169   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:376: void Parallel_Park(void){
02EF           1170   ;        -----------------------------------------
02EF           1171   ;         function Parallel_Park
02EF           1172   ;        -----------------------------------------
02EF           1173   _Parallel_Park:
02EF           1174   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:377: Move_Forwards();
02EF 120100    1175            lcall   _Move_Forwards
02F2           1176   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:378: Parallel_Park_Wait_1();
02F2 120100    1177            lcall   _Parallel_Park_Wait_1
02F5           1178   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:380: Stop_Car();
02F5 120100    1179            lcall   _Stop_Car
02F8           1180   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:381: Parallel_Park_Wait_2();
02F8 120100    1181            lcall   _Parallel_Park_Wait_2
02FB           1182   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:383: Turn_Car_Left();
02FB 120100    1183            lcall   _Turn_Car_Left
02FE           1184   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:384: Parallel_Park_Wait_3();
02FE 120100    1185            lcall   _Parallel_Park_Wait_3
0301           1186   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:386: Move_Forwards();
0301 120100    1187            lcall   _Move_Forwards
0304           1188   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:387: Parallel_Park_Wait_4();
0304 120100    1189            lcall   _Parallel_Park_Wait_4
0307           1190   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:389: Stop_Car();
0307 120100    1191            lcall   _Stop_Car
030A           1192   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:390: Turn_Car_Right();
030A 120100    1193            lcall   _Turn_Car_Right
030D           1194   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:391: Parallel_Park_Wait_5();
030D 120100    1195            lcall   _Parallel_Park_Wait_5
0310           1196   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:393: Stop_Car();
0310 120100    1197            lcall   _Stop_Car
0313           1198   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:394: Parallel_Park_Wait_6();
0313 020100    1199            ljmp    _Parallel_Park_Wait_6
0316           1200   ;------------------------------------------------------------
0316           1201   ;Allocation info for local variables in function 'Undo_Parallel_Park'
0316           1202   ;------------------------------------------------------------
0316           1203   ;------------------------------------------------------------
0316           1204   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:398: void Undo_Parallel_Park (void){
0316           1205   ;        -----------------------------------------
0316           1206   ;         function Undo_Parallel_Park
0316           1207   ;        -----------------------------------------
0316           1208   _Undo_Parallel_Park:
0316           1209   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:399: Turn_Car_Left();
0316 120100    1210            lcall   _Turn_Car_Left
0319           1211   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:400: Parallel_Park_Wait_3();
0319 120100    1212            lcall   _Parallel_Park_Wait_3
031C           1213   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:402: Move_Backwards();
031C 120100    1214            lcall   _Move_Backwards
031F           1215   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:403: Parallel_Park_Wait_4();
031F 120100    1216            lcall   _Parallel_Park_Wait_4
0322           1217   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:405: Stop_Car();
0322 120100    1218            lcall   _Stop_Car
0325           1219   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:406: Turn_Car_Right();
0325 120100    1220            lcall   _Turn_Car_Right
0328           1221   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:407: Parallel_Park_Wait_3();
0328 120100    1222            lcall   _Parallel_Park_Wait_3
032B           1223   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:409: Move_Backwards();
032B 120100    1224            lcall   _Move_Backwards
032E           1225   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:410: Parallel_Park_Wait_1();
032E 120100    1226            lcall   _Parallel_Park_Wait_1
0331           1227   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:412: Stop_Car();
0331 120100    1228            lcall   _Stop_Car
0334           1229   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:413: Parallel_Park_Wait_5();
0334 120100    1230            lcall   _Parallel_Park_Wait_5
0337           1231   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:415: Stop_Car();
0337 120100    1232            lcall   _Stop_Car
033A           1233   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:416: Parallel_Park_Wait_6();
033A 020100    1234            ljmp    _Parallel_Park_Wait_6
033D           1235   ;------------------------------------------------------------
033D           1236   ;Allocation info for local variables in function 'Turn_Car_Left'
033D           1237   ;------------------------------------------------------------
033D           1238   ;------------------------------------------------------------
033D           1239   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:422: void Turn_Car_Left(void){
033D           1240   ;        -----------------------------------------
033D           1241   ;         function Turn_Car_Left
033D           1242   ;        -----------------------------------------
033D           1243   _Turn_Car_Left:
033D           1244   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:423: Move_Right_Motor_Backwards();
033D 020100    1245            ljmp    _Move_Right_Motor_Backwards
0340           1246   ;------------------------------------------------------------
0340           1247   ;Allocation info for local variables in function 'Turn_Car_Right'
0340           1248   ;------------------------------------------------------------
0340           1249   ;------------------------------------------------------------
0340           1250   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:429: void Turn_Car_Right(void){
0340           1251   ;        -----------------------------------------
0340           1252   ;         function Turn_Car_Right
0340           1253   ;        -----------------------------------------
0340           1254   _Turn_Car_Right:
0340           1255   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:430: Move_Left_Motor_Backwards(); //Same thoughts as above, (in Turn_Car_Left)
0340 020100    1256            ljmp    _Move_Left_Motor_Backwards
0343           1257   ;------------------------------------------------------------
0343           1258   ;Allocation info for local variables in function 'Move_Backwards'
0343           1259   ;------------------------------------------------------------
0343           1260   ;------------------------------------------------------------
0343           1261   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:435: void Move_Backwards(void){
0343           1262   ;        -----------------------------------------
0343           1263   ;         function Move_Backwards
0343           1264   ;        -----------------------------------------
0343           1265   _Move_Backwards:
0343           1266   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:436: Move_Right_Motor_Backwards();
0343 120100    1267            lcall   _Move_Right_Motor_Backwards
0346           1268   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:437: Move_Left_Motor_Backwards();
0346 020100    1269            ljmp    _Move_Left_Motor_Backwards
0349           1270   ;------------------------------------------------------------
0349           1271   ;Allocation info for local variables in function 'Move_Car_Closer'
0349           1272   ;------------------------------------------------------------
0349           1273   ;------------------------------------------------------------
0349           1274   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:443: void Move_Car_Closer(void){
0349           1275   ;        -----------------------------------------
0349           1276   ;         function Move_Car_Closer
0349           1277   ;        -----------------------------------------
0349           1278   _Move_Car_Closer:
0349           1279   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:446: if(dist_index > 0) dist_index--;
0349 C3        1280            clr     c
034A E4        1281            clr     a
034B 9500      1282            subb    a,_dist_index
034D E4        1283            clr     a
034E 6480      1284            xrl     a,#0x80
0350 8501F0    1285            mov     b,(_dist_index + 1)
0353 63F080    1286            xrl     b,#0x80
0356 95F0      1287            subb    a,b
0358 5001      1288            jnc     L030003?
035A 1500      1289            dec     _dist_index
035C 74FF      1290            mov     a,#0xff
035E B50070    1291            cjne    a,_dist_index,L030007?
0361 1501      1292            dec     (_dist_index + 1)
0363           1293   L030007?:
0363           1294   L030003?:
0363 22        1295            ret
0364           1296   ;------------------------------------------------------------
0364           1297   ;Allocation info for local variables in function 'Move_Car_Further'
0364           1298   ;------------------------------------------------------------
0364           1299   ;------------------------------------------------------------
0364           1300   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:452: void Move_Car_Further(void){
0364           1301   ;        -----------------------------------------
0364           1302   ;         function Move_Car_Further
0364           1303   ;        -----------------------------------------
0364           1304   _Move_Car_Further:
0364           1305   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:455: if(dist_index < 3) dist_index++;
0364 C3        1306            clr     c
0365 E500      1307            mov     a,_dist_index
0367 9403      1308            subb    a,#0x03
0369 E501      1309            mov     a,(_dist_index + 1)
036B 6480      1310            xrl     a,#0x80
036D 9480      1311            subb    a,#0x80
036F 5001      1312            jnc     L031003?
0371 0500      1313            inc     _dist_index
0373 E4        1314            clr     a
0374 B500F0    1315            cjne    a,_dist_index,L031007?
0377 0501      1316            inc     (_dist_index + 1)
0379           1317   L031007?:
0379           1318   L031003?:
0379 22        1319            ret
037A           1320   ;------------------------------------------------------------
037A           1321   ;Allocation info for local variables in function 'Rotate_Car_180_CW'
037A           1322   ;------------------------------------------------------------
037A           1323   ;------------------------------------------------------------
037A           1324   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:459: void Rotate_Car_180_CW(void){
037A           1325   ;        -----------------------------------------
037A           1326   ;         function Rotate_Car_180_CW
037A           1327   ;        -----------------------------------------
037A           1328   _Rotate_Car_180_CW:
037A           1329   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:460: Turn_Car_Right();
037A 120100    1330            lcall   _Turn_Car_Right
037D           1331   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:461: Wait_X_Time(2000); //wait 2000 ms
037D 9007D0    1332            mov     dptr,#0x07D0
0380 120100    1333            lcall   _Wait_X_Time
0383           1334   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:462: Stop_Car();
0383 120100    1335            lcall   _Stop_Car
0386           1336   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:464: if(reverse == 0){
0386 E5C0      1337            mov     a,_reverse
0388 7001      1338            jnz     L032002?
038A           1339   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:465: reverse = 1;
038A 75C001    1340            mov     _reverse,#0x01
038D           1341   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:467: reverse = 0;
038D 22        1342            ret
038E           1343   L032002?:
038E 75C000    1344            mov     _reverse,#0x00
0391 22        1345            ret
0392           1346   ;------------------------------------------------------------
0392           1347   ;Allocation info for local variables in function 'Rotate_Car_180_CCW'
0392           1348   ;------------------------------------------------------------
0392           1349   ;------------------------------------------------------------
0392           1350   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:474: void Rotate_Car_180_CCW(void){
0392           1351   ;        -----------------------------------------
0392           1352   ;         function Rotate_Car_180_CCW
0392           1353   ;        -----------------------------------------
0392           1354   _Rotate_Car_180_CCW:
0392           1355   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:475: Turn_Car_Left(); // changed turn left logic make rotate car easily reverseable
0392 120100    1356            lcall   _Turn_Car_Left
0395           1357   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:476: Wait_X_Time(2000); //wait 2000 ms
0395 9007D0    1358            mov     dptr,#0x07D0
0398 120100    1359            lcall   _Wait_X_Time
039B           1360   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:477: Stop_Car();
039B 120100    1361            lcall   _Stop_Car
039E           1362   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:479: if(reverse == 0){
039E E5C0      1363            mov     a,_reverse
03A0 7001      1364            jnz     L033002?
03A2           1365   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:480: reverse = 1;
03A2 75C001    1366            mov     _reverse,#0x01
03A5           1367   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:482: reverse = 0;
03A5 22        1368            ret
03A6           1369   L033002?:
03A6 75C000    1370            mov     _reverse,#0x00
03A9 22        1371            ret
03AA           1372   ;------------------------------------------------------------
03AA           1373   ;Allocation info for local variables in function 'rx_byte'
03AA           1374   ;------------------------------------------------------------
03AA           1375   ;min                       Allocated to registers r2 r3 
03AA           1376   ;j                         Allocated to registers r5 
03AA           1377   ;val                       Allocated to registers r4 
03AA           1378   ;v                         Allocated to registers r6 r7 
03AA           1379   ;------------------------------------------------------------
03AA           1380   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:490: unsigned char rx_byte (int min){
03AA           1381   ;        -----------------------------------------
03AA           1382   ;         function rx_byte
03AA           1383   ;        -----------------------------------------
03AA           1384   _rx_byte:
03AA AA82      1385            mov     r2,dpl
03AC AB83      1386            mov     r3,dph
03AE           1387   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:495: EA = 0;
03AE C2AF      1388            clr     _EA
03B0           1389   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:496: P1_0 = 0;
03B0 C290      1390            clr     _P1_0
03B2           1391   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:497: P1_1 = 0;
03B2 C291      1392            clr     _P1_1
03B4           1393   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:498: P1_2 = 0;
03B4 C292      1394            clr     _P1_2
03B6           1395   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:499: P1_4 = 0;
03B6 C294      1396            clr     _P1_4
03B8           1397   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:502: val=0;
03B8 7C00      1398            mov     r4,#0x00
03BA           1399   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:503: wait_one_and_half_bit_time();
03BA C002      1400            push    ar2
03BC C003      1401            push    ar3
03BE C004      1402            push    ar4
03C0 120100    1403            lcall   _wait_one_and_half_bit_time
03C3 D004      1404            pop     ar4
03C5 D003      1405            pop     ar3
03C7 D002      1406            pop     ar2
03C9           1407   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:504: for(j=0; j<8; j++)
03C9 7D00      1408            mov     r5,#0x00
03CB           1409   L034001?:
03CB BD08F0    1410            cjne    r5,#0x08,L034013?
03CE           1411   L034013?:
03CE 5001      1412            jnc     L034004?
03D0           1413   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:506: v=GetADC(2);
03D0 758202    1414            mov     dpl,#0x02
03D3 C002      1415            push    ar2
03D5 C003      1416            push    ar3
03D7 C004      1417            push    ar4
03D9 C005      1418            push    ar5
03DB 120100    1419            lcall   _GetADC
03DE AE82      1420            mov     r6,dpl
03E0 AF83      1421            mov     r7,dph
03E2 D005      1422            pop     ar5
03E4 D004      1423            pop     ar4
03E6 D003      1424            pop     ar3
03E8 D002      1425            pop     ar2
03EA           1426   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:507: val|=(v>min)?(0x01<<j):0x00; // min is threshold voltage but in our case it is 1023
03EA C3        1427            clr     c
03EB EA        1428            mov     a,r2
03EC 9E        1429            subb    a,r6
03ED EB        1430            mov     a,r3
03EE 6480      1431            xrl     a,#0x80
03F0 8FF0      1432            mov     b,r7
03F2 63F080    1433            xrl     b,#0x80
03F5 95F0      1434            subb    a,b
03F7 5001      1435            jnc     L034007?
03F9 8DF0      1436            mov     b,r5
03FB 05F0      1437            inc     b
03FD 7401      1438            mov     a,#0x01
03FF 8001      1439            sjmp    L034018?
0401           1440   L034016?:
0401 25E0      1441            add     a,acc
0403           1442   L034018?:
0403 D5F0F0    1443            djnz    b,L034016?
0406 FE        1444            mov     r6,a
0407 8001      1445            sjmp    L034008?
0409           1446   L034007?:
0409 7E00      1447            mov     r6,#0x00
040B           1448   L034008?:
040B EE        1449            mov     a,r6
040C 4204      1450            orl     ar4,a
040E           1451   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:508: wait_bit_time();
040E C002      1452            push    ar2
0410 C003      1453            push    ar3
0412 C004      1454            push    ar4
0414 C005      1455            push    ar5
0416 120100    1456            lcall   _wait_bit_time
0419 D005      1457            pop     ar5
041B D004      1458            pop     ar4
041D D003      1459            pop     ar3
041F D002      1460            pop     ar2
0421           1461   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:504: for(j=0; j<8; j++)
0421 0D        1462            inc     r5
0422 8001      1463            sjmp    L034001?
0424           1464   L034004?:
0424           1465   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:511: wait_one_and_half_bit_time();
0424 C004      1466            push    ar4
0426 120100    1467            lcall   _wait_one_and_half_bit_time
0429 D004      1468            pop     ar4
042B           1469   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:512: EA = 1;
042B D2AF      1470            setb    _EA
042D           1471   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:513: return val;
042D 8C82      1472            mov     dpl,r4
042F 22        1473            ret
0430           1474   ;------------------------------------------------------------
0430           1475   ;Allocation info for local variables in function 'wait_bit_time'
0430           1476   ;------------------------------------------------------------
0430           1477   ;------------------------------------------------------------
0430           1478   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:518: void wait_bit_time(void){
0430           1479   ;        -----------------------------------------
0430           1480   ;         function wait_bit_time
0430           1481   ;        -----------------------------------------
0430           1482   _wait_bit_time:
0430           1483   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:529: _endasm;
0430           1484            
0430           1485     ;For a 22.1184MHz crystal one machine cycle
0430           1486     ;takes 12/22.1184MHz=0.5425347us
0430 7A02      1487                 mov R2, #2
0432           1488             L3:
0432 7978      1489            mov R1, #120
0434           1490             L2:
0434 7896      1491            mov R0, #150
0436           1492             L1:
0436 D8F0      1493            djnz R0, L1
0438 D9B0      1494                 djnz R1, L2
043A DA70      1495                 djnz R2, L3
043C 22        1496                 ret
043D           1497                
043D 22        1498            ret
043E           1499   ;------------------------------------------------------------
043E           1500   ;Allocation info for local variables in function 'wait_one_and_half_bit_time'
043E           1501   ;------------------------------------------------------------
043E           1502   ;------------------------------------------------------------
043E           1503   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:533: void wait_one_and_half_bit_time(void){
043E           1504   ;        -----------------------------------------
043E           1505   ;         function wait_one_and_half_bit_time
043E           1506   ;        -----------------------------------------
043E           1507   _wait_one_and_half_bit_time:
043E           1508   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:544: _endasm;
043E           1509            
043E           1510     ;For a 22.1184MHz crystal one machine cycle
043E           1511     ;takes 12/22.1184MHz=0.5425347us
043E 7A03      1512                 mov R2, #3
0440           1513             L6:
0440 7978      1514            mov R1, #120
0442           1515             L5:
0442 7896      1516            mov R0, #150
0444           1517             L4:
0444 D8B0      1518            djnz R0, L4
0446 D970      1519                 djnz R1, L5
0448 DA30      1520                 djnz R2, L6
044A 22        1521                 ret
044B           1522                
044B 22        1523            ret
044C           1524   ;------------------------------------------------------------
044C           1525   ;Allocation info for local variables in function 'SPIWrite'
044C           1526   ;------------------------------------------------------------
044C           1527   ;value                     Allocated to registers r2 
044C           1528   ;------------------------------------------------------------
044C           1529   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:548: void SPIWrite(unsigned char value){
044C           1530   ;        -----------------------------------------
044C           1531   ;         function SPIWrite
044C           1532   ;        -----------------------------------------
044C           1533   _SPIWrite:
044C AA82      1534            mov     r2,dpl
044E           1535   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:549: SPSTA&=(~SPIF); // Clear the SPIF flag in SPSTA
044E 53C47F    1536            anl     _SPSTA,#0x7F
0451           1537   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:550: SPDAT=value;
0451 8AC5      1538            mov     _SPDAT,r2
0453           1539   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:551: while((SPSTA & SPIF)!=SPIF); //Wait for transmission to end
0453           1540   L037001?:
0453 7480      1541            mov     a,#0x80
0455 55C4      1542            anl     a,_SPSTA
0457 FA        1543            mov     r2,a
0458 BA80F0    1544            cjne    r2,#0x80,L037001?
045B 22        1545            ret
045C           1546   ;------------------------------------------------------------
045C           1547   ;Allocation info for local variables in function 'GetADC'
045C           1548   ;------------------------------------------------------------
045C           1549   ;channel                   Allocated to registers r2 
045C           1550   ;adc                       Allocated to registers r2 r3 
045C           1551   ;------------------------------------------------------------
045C           1552   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:555: unsigned int GetADC(unsigned char channel){
045C           1553   ;        -----------------------------------------
045C           1554   ;         function GetADC
045C           1555   ;        -----------------------------------------
045C           1556   _GetADC:
045C AA82      1557            mov     r2,dpl
045E           1558   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:559: SPCON&=(~SPEN); // Disable SPI
045E 53C3BF    1559            anl     _SPCON,#0xBF
0461           1560   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:560: SPCON=MSTR|CPOL|CPHA|SPR1|SPR0|SSDIS;
0461 75C33F    1561            mov     _SPCON,#0x3F
0464           1562   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:561: SPCON|=SPEN; // Enable SPI
0464 43C340    1563            orl     _SPCON,#0x40
0467           1564   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:563: P4_1=0; // Activate the MCP3004 ADC.
0467 C2C1      1565            clr     _P4_1
0469           1566   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:564: SPIWrite(channel|0x18);         // Send start bit, single/diff* bit, D2, D1, and D0 bits.
0469 7418      1567            mov     a,#0x18
046B 4A        1568            orl     a,r2
046C F582      1569            mov     dpl,a
046E 120100    1570            lcall   _SPIWrite
0471           1571   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:565: for(adc=0; adc<10; adc++); // Wait for S/H to setup
0471 7A0A      1572            mov     r2,#0x0A
0473 7B00      1573            mov     r3,#0x00
0475           1574   L038003?:
0475 1A        1575            dec     r2
0476 BAFF70    1576            cjne    r2,#0xff,L038009?
0479 1B        1577            dec     r3
047A           1578   L038009?:
047A EA        1579            mov     a,r2
047B 4B        1580            orl     a,r3
047C 7001      1581            jnz     L038003?
047E           1582   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:566: SPIWrite(0x55); // Read bits 9 down to 4
047E 758255    1583            mov     dpl,#0x55
0481 120100    1584            lcall   _SPIWrite
0484           1585   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:567: adc=((SPDAT&0x3f)*0x100);
0484 743F      1586            mov     a,#0x3F
0486 55C5      1587            anl     a,_SPDAT
0488 FB        1588            mov     r3,a
0489 7A00      1589            mov     r2,#0x00
048B           1590   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:568: SPIWrite(0x55);// Read bits 3 down to 0
048B 758255    1591            mov     dpl,#0x55
048E C002      1592            push    ar2
0490 C003      1593            push    ar3
0492 120100    1594            lcall   _SPIWrite
0495 D003      1595            pop     ar3
0497 D002      1596            pop     ar2
0499           1597   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:569: P4_1=1; // Deactivate the MCP3004 ADC.
0499 D2C1      1598            setb    _P4_1
049B           1599   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:570: adc+=(SPDAT&0xf0); // SPDR contains the low part of the result. 
049B 74F0      1600            mov     a,#0xF0
049D 55C5      1601            anl     a,_SPDAT
049F FC        1602            mov     r4,a
04A0 7D00      1603            mov     r5,#0x00
04A2 EC        1604            mov     a,r4
04A3 2A        1605            add     a,r2
04A4 FA        1606            mov     r2,a
04A5 ED        1607            mov     a,r5
04A6 3B        1608            addc    a,r3
04A7           1609   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:571: adc>>=4;
04A7 C4        1610            swap    a
04A8 CA        1611            xch     a,r2
04A9 C4        1612            swap    a
04AA 540F      1613            anl     a,#0x0f
04AC 6A        1614            xrl     a,r2
04AD CA        1615            xch     a,r2
04AE 540F      1616            anl     a,#0x0f
04B0 CA        1617            xch     a,r2
04B1 6A        1618            xrl     a,r2
04B2 CA        1619            xch     a,r2
04B3           1620   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:573: return adc;
04B3 8A82      1621            mov     dpl,r2
04B5 F583      1622            mov     dph,a
04B7 22        1623            ret
04B8           1624   ;------------------------------------------------------------
04B8           1625   ;Allocation info for local variables in function 'Testing_Code'
04B8           1626   ;------------------------------------------------------------
04B8           1627   ;right                     Allocated to registers r3 r4 
04B8           1628   ;left                      Allocated to registers r5 r6 
04B8           1629   ;cmd                       Allocated to registers r2 
04B8           1630   ;------------------------------------------------------------
04B8           1631   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:594: void Testing_Code(void){
04B8           1632   ;        -----------------------------------------
04B8           1633   ;         function Testing_Code
04B8           1634   ;        -----------------------------------------
04B8           1635   _Testing_Code:
04B8           1636   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:597: unsigned char cmd = 0;
04B8 7A00      1637            mov     r2,#0x00
04BA           1638   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:599: while(1){
04BA           1639   L039012?:
04BA           1640   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:613: run();
04BA C002      1641            push    ar2
04BC 120100    1642            lcall   _run
04BF           1643   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:614: right = Get_Right_Distance();
04BF 120100    1644            lcall   _Get_Right_Distance
04C2 AB82      1645            mov     r3,dpl
04C4 AC83      1646            mov     r4,dph
04C6           1647   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:615: left = Get_Left_Distance();
04C6 C003      1648            push    ar3
04C8 C004      1649            push    ar4
04CA 120100    1650            lcall   _Get_Left_Distance
04CD AD82      1651            mov     r5,dpl
04CF AE83      1652            mov     r6,dph
04D1 D004      1653            pop     ar4
04D3 D003      1654            pop     ar3
04D5 D002      1655            pop     ar2
04D7           1656   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:617: if(left < 20){
04D7 C3        1657            clr     c
04D8 ED        1658            mov     a,r5
04D9 9414      1659            subb    a,#0x14
04DB EE        1660            mov     a,r6
04DC 9400      1661            subb    a,#0x00
04DE 4001      1662            jc      L039022?
04E0 020100    1663            ljmp    L039010?
04E3           1664   L039022?:
04E3           1665   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:618: cmd = rx_byte (20);             
04E3 900014    1666            mov     dptr,#0x0014
04E6 C003      1667            push    ar3
04E8 C004      1668            push    ar4
04EA C005      1669            push    ar5
04EC C006      1670            push    ar6
04EE 120100    1671            lcall   _rx_byte
04F1 AA82      1672            mov     r2,dpl
04F3 D006      1673            pop     ar6
04F5 D005      1674            pop     ar5
04F7 D004      1675            pop     ar4
04F9 D003      1676            pop     ar3
04FB           1677   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:619: if(cmd == MOVE_FURTHER) Move_Car_Further();
04FB BAFD70    1678            cjne    r2,#0xFD,L039002?
04FE C002      1679            push    ar2
0500 C003      1680            push    ar3
0502 C004      1681            push    ar4
0504 C005      1682            push    ar5
0506 C006      1683            push    ar6
0508 120100    1684            lcall   _Move_Car_Further
050B D006      1685            pop     ar6
050D D005      1686            pop     ar5
050F D004      1687            pop     ar4
0511 D003      1688            pop     ar3
0513 D002      1689            pop     ar2
0515           1690   L039002?:
0515           1691   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:620: if(cmd == MOVE_CLOSER) Move_Car_Closer();
0515 BAF5B0    1692            cjne    r2,#0xF5,L039004?
0518 C002      1693            push    ar2
051A C003      1694            push    ar3
051C C004      1695            push    ar4
051E C005      1696            push    ar5
0520 C006      1697            push    ar6
0522 120100    1698            lcall   _Move_Car_Closer
0525 D006      1699            pop     ar6
0527 D005      1700            pop     ar5
0529 D004      1701            pop     ar4
052B D003      1702            pop     ar3
052D D002      1703            pop     ar2
052F           1704   L039004?:
052F           1705   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:621: if(cmd == ROTATE_180) Rotate_Car_180_CW();
052F BAD5F0    1706            cjne    r2,#0xD5,L039006?
0532 C002      1707            push    ar2
0534 C003      1708            push    ar3
0536 C004      1709            push    ar4
0538 C005      1710            push    ar5
053A C006      1711            push    ar6
053C 120100    1712            lcall   _Rotate_Car_180_CW
053F D006      1713            pop     ar6
0541 D005      1714            pop     ar5
0543 D004      1715            pop     ar4
0545 D003      1716            pop     ar3
0547 D002      1717            pop     ar2
0549           1718   L039006?:
0549           1719   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:622: if(cmd == PRL_PARK) Parallel_Park();
0549 BA8030    1720            cjne    r2,#0x80,L039010?
054C C002      1721            push    ar2
054E C003      1722            push    ar3
0550 C004      1723            push    ar4
0552 C005      1724            push    ar5
0554 C006      1725            push    ar6
0556 120100    1726            lcall   _Parallel_Park
0559 D006      1727            pop     ar6
055B D005      1728            pop     ar5
055D D004      1729            pop     ar4
055F D003      1730            pop     ar3
0561 D002      1731            pop     ar2
0563           1732   L039010?:
0563           1733   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:625: printf("right = %u, left = %u, cmd = %u \n", right, left, cmd);         
0563 8A07      1734            mov     ar7,r2
0565 7800      1735            mov     r0,#0x00
0567 C002      1736            push    ar2
0569 C007      1737            push    ar7
056B C000      1738            push    ar0
056D C005      1739            push    ar5
056F C006      1740            push    ar6
0571 C003      1741            push    ar3
0573 C004      1742            push    ar4
0575 7430      1743            mov     a,#__str_5
0577 C0E0      1744            push    acc
0579 74A1      1745            mov     a,#(__str_5 >> 8)
057B C0E0      1746            push    acc
057D 7480      1747            mov     a,#0x80
057F C0E0      1748            push    acc
0581 120100    1749            lcall   _printf
0584 E581      1750            mov     a,sp
0586 24F7      1751            add     a,#0xf7
0588 F581      1752            mov     sp,a
058A D002      1753            pop     ar2
058C 020100    1754            ljmp    L039012?
058F           1755   ;------------------------------------------------------------
058F           1756   ;Allocation info for local variables in function 'run'
058F           1757   ;------------------------------------------------------------
058F           1758   ;right_distance            Allocated to registers r2 r3 
058F           1759   ;left_distance             Allocated to registers r4 r5 
058F           1760   ;------------------------------------------------------------
058F           1761   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:629: void run(void){
058F           1762   ;        -----------------------------------------
058F           1763   ;         function run
058F           1764   ;        -----------------------------------------
058F           1765   _run:
058F           1766   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:630: unsigned int right_distance = Get_Right_Distance();
058F 120100    1767            lcall   _Get_Right_Distance
0592 AA82      1768            mov     r2,dpl
0594 AB83      1769            mov     r3,dph
0596           1770   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:631: unsigned int left_distance = Get_Left_Distance();
0596 C002      1771            push    ar2
0598 C003      1772            push    ar3
059A 120100    1773            lcall   _Get_Left_Distance
059D AC82      1774            mov     r4,dpl
059F AD83      1775            mov     r5,dph
05A1 D003      1776            pop     ar3
05A3 D002      1777            pop     ar2
05A5           1778   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:633: if(!reverse) {
05A5 E5C0      1779            mov     a,_reverse
05A7 6001      1780            jz      L040047?
05A9 020100    1781            ljmp    L040030?
05AC           1782   L040047?:
05AC           1783   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:634: if (abs(right_distance - dist_table[dist_index]) >= ERROR_BOUND){
05AC E500      1784            mov     a,_dist_index
05AE 2500      1785            add     a,_dist_index
05B0 FE        1786            mov     r6,a
05B1 E501      1787            mov     a,(_dist_index + 1)
05B3 33        1788            rlc     a
05B4 EE        1789            mov     a,r6
05B5 2440      1790            add     a,#_dist_table
05B7 F8        1791            mov     r0,a
05B8 8606      1792            mov     ar6,@r0
05BA 08        1793            inc     r0
05BB 8607      1794            mov     ar7,@r0
05BD EA        1795            mov     a,r2
05BE C3        1796            clr     c
05BF 9E        1797            subb    a,r6
05C0 F582      1798            mov     dpl,a
05C2 EB        1799            mov     a,r3
05C3 9F        1800            subb    a,r7
05C4 F583      1801            mov     dph,a
05C6 C002      1802            push    ar2
05C8 C003      1803            push    ar3
05CA C004      1804            push    ar4
05CC C005      1805            push    ar5
05CE 120100    1806            lcall   _abs
05D1 AE82      1807            mov     r6,dpl
05D3 AF83      1808            mov     r7,dph
05D5 D005      1809            pop     ar5
05D7 D004      1810            pop     ar4
05D9 D003      1811            pop     ar3
05DB D002      1812            pop     ar2
05DD C3        1813            clr     c
05DE EE        1814            mov     a,r6
05DF 9414      1815            subb    a,#0x14
05E1 EF        1816            mov     a,r7
05E2 6480      1817            xrl     a,#0x80
05E4 9480      1818            subb    a,#0x80
05E6 4001      1819            jc      L040006?
05E8           1820   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:635: if (right_distance > dist_table[dist_index]){
05E8 E500      1821            mov     a,_dist_index
05EA 2500      1822            add     a,_dist_index
05EC FE        1823            mov     r6,a
05ED E501      1824            mov     a,(_dist_index + 1)
05EF 33        1825            rlc     a
05F0 EE        1826            mov     a,r6
05F1 2440      1827            add     a,#_dist_table
05F3 F8        1828            mov     r0,a
05F4 8606      1829            mov     ar6,@r0
05F6 08        1830            inc     r0
05F7 8607      1831            mov     ar7,@r0
05F9 C3        1832            clr     c
05FA EE        1833            mov     a,r6
05FB 9A        1834            subb    a,r2
05FC EF        1835            mov     a,r7
05FD 9B        1836            subb    a,r3
05FE 5001      1837            jnc     L040002?
0600           1838   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:636: Move_Right_Motor_Forwards();
0600 C002      1839            push    ar2
0602 C003      1840            push    ar3
0604 C004      1841            push    ar4
0606 C005      1842            push    ar5
0608 120100    1843            lcall   _Move_Right_Motor_Forwards
060B D005      1844            pop     ar5
060D D004      1845            pop     ar4
060F D003      1846            pop     ar3
0611 D002      1847            pop     ar2
0613           1848   L040002?:
0613           1849   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:638: if (right_distance < dist_table[dist_index]){
0613 E500      1850            mov     a,_dist_index
0615 2500      1851            add     a,_dist_index
0617 FE        1852            mov     r6,a
0618 E501      1853            mov     a,(_dist_index + 1)
061A 33        1854            rlc     a
061B EE        1855            mov     a,r6
061C 2440      1856            add     a,#_dist_table
061E F8        1857            mov     r0,a
061F 8606      1858            mov     ar6,@r0
0621 08        1859            inc     r0
0622 8607      1860            mov     ar7,@r0
0624 C3        1861            clr     c
0625 EA        1862            mov     a,r2
0626 9E        1863            subb    a,r6
0627 EB        1864            mov     a,r3
0628 9F        1865            subb    a,r7
0629 5001      1866            jnc     L040007?
062B           1867   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:639: Move_Right_Motor_Backwards();
062B C004      1868            push    ar4
062D C005      1869            push    ar5
062F 120100    1870            lcall   _Move_Right_Motor_Backwards
0632 D005      1871            pop     ar5
0634 D004      1872            pop     ar4
0636 8001      1873            sjmp    L040007?
0638           1874   L040006?:
0638           1875   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:643: Stop_Car();
0638 C004      1876            push    ar4
063A C005      1877            push    ar5
063C 120100    1878            lcall   _Stop_Car
063F D005      1879            pop     ar5
0641 D004      1880            pop     ar4
0643           1881   L040007?:
0643           1882   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:645: if (abs(left_distance - dist_table[dist_index]) >= ERROR_BOUND){
0643 E500      1883            mov     a,_dist_index
0645 2500      1884            add     a,_dist_index
0647 FE        1885            mov     r6,a
0648 E501      1886            mov     a,(_dist_index + 1)
064A 33        1887            rlc     a
064B EE        1888            mov     a,r6
064C 2440      1889            add     a,#_dist_table
064E F8        1890            mov     r0,a
064F 8606      1891            mov     ar6,@r0
0651 08        1892            inc     r0
0652 8607      1893            mov     ar7,@r0
0654 EC        1894            mov     a,r4
0655 C3        1895            clr     c
0656 9E        1896            subb    a,r6
0657 F582      1897            mov     dpl,a
0659 ED        1898            mov     a,r5
065A 9F        1899            subb    a,r7
065B F583      1900            mov     dph,a
065D C004      1901            push    ar4
065F C005      1902            push    ar5
0661 120100    1903            lcall   _abs
0664 AE82      1904            mov     r6,dpl
0666 AF83      1905            mov     r7,dph
0668 D005      1906            pop     ar5
066A D004      1907            pop     ar4
066C C3        1908            clr     c
066D EE        1909            mov     a,r6
066E 9414      1910            subb    a,#0x14
0670 EF        1911            mov     a,r7
0671 6480      1912            xrl     a,#0x80
0673 9480      1913            subb    a,#0x80
0675 4001      1914            jc      L040013?
0677           1915   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:646: if (left_distance > dist_table[dist_index]){
0677 E500      1916            mov     a,_dist_index
0679 2500      1917            add     a,_dist_index
067B FE        1918            mov     r6,a
067C E501      1919            mov     a,(_dist_index + 1)
067E 33        1920            rlc     a
067F EE        1921            mov     a,r6
0680 2440      1922            add     a,#_dist_table
0682 F8        1923            mov     r0,a
0683 8606      1924            mov     ar6,@r0
0685 08        1925            inc     r0
0686 8607      1926            mov     ar7,@r0
0688 C3        1927            clr     c
0689 EE        1928            mov     a,r6
068A 9C        1929            subb    a,r4
068B EF        1930            mov     a,r7
068C 9D        1931            subb    a,r5
068D 5001      1932            jnc     L040009?
068F           1933   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:647: Move_Left_Motor_Forwards();
068F C004      1934            push    ar4
0691 C005      1935            push    ar5
0693 120100    1936            lcall   _Move_Left_Motor_Forwards
0696 D005      1937            pop     ar5
0698 D004      1938            pop     ar4
069A           1939   L040009?:
069A           1940   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:649: if (left_distance < dist_table[dist_index]){
069A E500      1941            mov     a,_dist_index
069C 2500      1942            add     a,_dist_index
069E FE        1943            mov     r6,a
069F E501      1944            mov     a,(_dist_index + 1)
06A1 33        1945            rlc     a
06A2 EE        1946            mov     a,r6
06A3 2440      1947            add     a,#_dist_table
06A5 F8        1948            mov     r0,a
06A6 8606      1949            mov     ar6,@r0
06A8 08        1950            inc     r0
06A9 8607      1951            mov     ar7,@r0
06AB C3        1952            clr     c
06AC EC        1953            mov     a,r4
06AD 9E        1954            subb    a,r6
06AE ED        1955            mov     a,r5
06AF 9F        1956            subb    a,r7
06B0 4001      1957            jc      L040053?
06B2 22        1958            ret
06B3           1959   L040053?:
06B3           1960   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:650: Move_Left_Motor_Backwards();
06B3 020100    1961            ljmp    _Move_Left_Motor_Backwards
06B6           1962   L040013?:
06B6           1963   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:654: Stop_Car();
06B6 020100    1964            ljmp    _Stop_Car
06B9           1965   L040030?:
06B9           1966   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:657: if (abs(right_distance - dist_table[dist_index]) >= ERROR_BOUND){
06B9 E500      1967            mov     a,_dist_index
06BB 2500      1968            add     a,_dist_index
06BD FE        1969            mov     r6,a
06BE E501      1970            mov     a,(_dist_index + 1)
06C0 33        1971            rlc     a
06C1 EE        1972            mov     a,r6
06C2 2440      1973            add     a,#_dist_table
06C4 F8        1974            mov     r0,a
06C5 8606      1975            mov     ar6,@r0
06C7 08        1976            inc     r0
06C8 8607      1977            mov     ar7,@r0
06CA EA        1978            mov     a,r2
06CB C3        1979            clr     c
06CC 9E        1980            subb    a,r6
06CD F582      1981            mov     dpl,a
06CF EB        1982            mov     a,r3
06D0 9F        1983            subb    a,r7
06D1 F583      1984            mov     dph,a
06D3 C002      1985            push    ar2
06D5 C003      1986            push    ar3
06D7 C004      1987            push    ar4
06D9 C005      1988            push    ar5
06DB 120100    1989            lcall   _abs
06DE AE82      1990            mov     r6,dpl
06E0 AF83      1991            mov     r7,dph
06E2 D005      1992            pop     ar5
06E4 D004      1993            pop     ar4
06E6 D003      1994            pop     ar3
06E8 D002      1995            pop     ar2
06EA C3        1996            clr     c
06EB EE        1997            mov     a,r6
06EC 9414      1998            subb    a,#0x14
06EE EF        1999            mov     a,r7
06EF 6480      2000            xrl     a,#0x80
06F1 9480      2001            subb    a,#0x80
06F3 4001      2002            jc      L040020?
06F5           2003   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:658: if (right_distance < dist_table[dist_index]){
06F5 E500      2004            mov     a,_dist_index
06F7 2500      2005            add     a,_dist_index
06F9 FE        2006            mov     r6,a
06FA E501      2007            mov     a,(_dist_index + 1)
06FC 33        2008            rlc     a
06FD EE        2009            mov     a,r6
06FE 2440      2010            add     a,#_dist_table
0700 F8        2011            mov     r0,a
0701 8606      2012            mov     ar6,@r0
0703 08        2013            inc     r0
0704 8607      2014            mov     ar7,@r0
0706 C3        2015            clr     c
0707 EA        2016            mov     a,r2
0708 9E        2017            subb    a,r6
0709 EB        2018            mov     a,r3
070A 9F        2019            subb    a,r7
070B 5001      2020            jnc     L040016?
070D           2021   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:659: Move_Right_Motor_Forwards();
070D C002      2022            push    ar2
070F C003      2023            push    ar3
0711 C004      2024            push    ar4
0713 C005      2025            push    ar5
0715 120100    2026            lcall   _Move_Right_Motor_Forwards
0718 D005      2027            pop     ar5
071A D004      2028            pop     ar4
071C D003      2029            pop     ar3
071E D002      2030            pop     ar2
0720           2031   L040016?:
0720           2032   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:661: if (right_distance > dist_table[dist_index]){
0720 E500      2033            mov     a,_dist_index
0722 2500      2034            add     a,_dist_index
0724 FE        2035            mov     r6,a
0725 E501      2036            mov     a,(_dist_index + 1)
0727 33        2037            rlc     a
0728 EE        2038            mov     a,r6
0729 2440      2039            add     a,#_dist_table
072B F8        2040            mov     r0,a
072C 8606      2041            mov     ar6,@r0
072E 08        2042            inc     r0
072F 8607      2043            mov     ar7,@r0
0731 C3        2044            clr     c
0732 EE        2045            mov     a,r6
0733 9A        2046            subb    a,r2
0734 EF        2047            mov     a,r7
0735 9B        2048            subb    a,r3
0736 5001      2049            jnc     L040021?
0738           2050   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:662: Move_Right_Motor_Backwards();
0738 C004      2051            push    ar4
073A C005      2052            push    ar5
073C 120100    2053            lcall   _Move_Right_Motor_Backwards
073F D005      2054            pop     ar5
0741 D004      2055            pop     ar4
0743 8001      2056            sjmp    L040021?
0745           2057   L040020?:
0745           2058   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:666: Stop_Car();
0745 C004      2059            push    ar4
0747 C005      2060            push    ar5
0749 120100    2061            lcall   _Stop_Car
074C D005      2062            pop     ar5
074E D004      2063            pop     ar4
0750           2064   L040021?:
0750           2065   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:668: if (abs(left_distance - dist_table[dist_index]) >= ERROR_BOUND){
0750 E500      2066            mov     a,_dist_index
0752 2500      2067            add     a,_dist_index
0754 FA        2068            mov     r2,a
0755 E501      2069            mov     a,(_dist_index + 1)
0757 33        2070            rlc     a
0758 EA        2071            mov     a,r2
0759 2440      2072            add     a,#_dist_table
075B F8        2073            mov     r0,a
075C 8602      2074            mov     ar2,@r0
075E 08        2075            inc     r0
075F 8603      2076            mov     ar3,@r0
0761 EC        2077            mov     a,r4
0762 C3        2078            clr     c
0763 9A        2079            subb    a,r2
0764 F582      2080            mov     dpl,a
0766 ED        2081            mov     a,r5
0767 9B        2082            subb    a,r3
0768 F583      2083            mov     dph,a
076A C004      2084            push    ar4
076C C005      2085            push    ar5
076E 120100    2086            lcall   _abs
0771 AA82      2087            mov     r2,dpl
0773 AB83      2088            mov     r3,dph
0775 D005      2089            pop     ar5
0777 D004      2090            pop     ar4
0779 C3        2091            clr     c
077A EA        2092            mov     a,r2
077B 9414      2093            subb    a,#0x14
077D EB        2094            mov     a,r3
077E 6480      2095            xrl     a,#0x80
0780 9480      2096            subb    a,#0x80
0782 4001      2097            jc      L040027?
0784           2098   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:669: if (left_distance < dist_table[dist_index]){
0784 E500      2099            mov     a,_dist_index
0786 2500      2100            add     a,_dist_index
0788 FA        2101            mov     r2,a
0789 E501      2102            mov     a,(_dist_index + 1)
078B 33        2103            rlc     a
078C EA        2104            mov     a,r2
078D 2440      2105            add     a,#_dist_table
078F F8        2106            mov     r0,a
0790 8602      2107            mov     ar2,@r0
0792 08        2108            inc     r0
0793 8603      2109            mov     ar3,@r0
0795 C3        2110            clr     c
0796 EC        2111            mov     a,r4
0797 9A        2112            subb    a,r2
0798 ED        2113            mov     a,r5
0799 9B        2114            subb    a,r3
079A 5001      2115            jnc     L040023?
079C           2116   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:670: Move_Left_Motor_Forwards();
079C C004      2117            push    ar4
079E C005      2118            push    ar5
07A0 120100    2119            lcall   _Move_Left_Motor_Forwards
07A3 D005      2120            pop     ar5
07A5 D004      2121            pop     ar4
07A7           2122   L040023?:
07A7           2123   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:672: if (left_distance > dist_table[dist_index]){
07A7 E500      2124            mov     a,_dist_index
07A9 2500      2125            add     a,_dist_index
07AB FA        2126            mov     r2,a
07AC E501      2127            mov     a,(_dist_index + 1)
07AE 33        2128            rlc     a
07AF EA        2129            mov     a,r2
07B0 2440      2130            add     a,#_dist_table
07B2 F8        2131            mov     r0,a
07B3 8602      2132            mov     ar2,@r0
07B5 08        2133            inc     r0
07B6 8603      2134            mov     ar3,@r0
07B8 C3        2135            clr     c
07B9 EA        2136            mov     a,r2
07BA 9C        2137            subb    a,r4
07BB EB        2138            mov     a,r3
07BC 9D        2139            subb    a,r5
07BD 5001      2140            jnc     L040032?
07BF           2141   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:673: Move_Left_Motor_Backwards();
07BF 020100    2142            ljmp    _Move_Left_Motor_Backwards
07C2           2143   L040027?:
07C2           2144   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:677: Stop_Car();
07C2 020100    2145            ljmp    _Stop_Car
07C5           2146   L040032?:
07C5 22        2147            ret
07C6           2148   ;------------------------------------------------------------
07C6           2149   ;Allocation info for local variables in function 'Fake_run'
07C6           2150   ;------------------------------------------------------------
07C6           2151   ;------------------------------------------------------------
07C6           2152   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:681: void Fake_run(void) {
07C6           2153   ;        -----------------------------------------
07C6           2154   ;         function Fake_run
07C6           2155   ;        -----------------------------------------
07C6           2156   _Fake_run:
07C6           2157   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:682: Rotate_Car_180_CW();
07C6 120100    2158            lcall   _Rotate_Car_180_CW
07C9           2159   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:683: wait1s();
07C9 120100    2160            lcall   _wait1s
07CC           2161   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:684: wait1s();
07CC 120100    2162            lcall   _wait1s
07CF           2163   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:685: wait1s();
07CF 120100    2164            lcall   _wait1s
07D2           2165   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:686: Rotate_Car_180_CCW();
07D2 120100    2166            lcall   _Rotate_Car_180_CCW
07D5           2167   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:687: wait1s();
07D5 120100    2168            lcall   _wait1s
07D8           2169   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:688: wait1s();
07D8 120100    2170            lcall   _wait1s
07DB           2171   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:689: wait1s();
07DB 020100    2172            ljmp    _wait1s
07DE           2173   ;------------------------------------------------------------
07DE           2174   ;Allocation info for local variables in function 'main'
07DE           2175   ;------------------------------------------------------------
07DE           2176   ;logic_0_thresh            Allocated to registers 
07DE           2177   ;cmd                       Allocated to registers r2 
07DE           2178   ;------------------------------------------------------------
07DE           2179   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:692: void main (void)
07DE           2180   ;        -----------------------------------------
07DE           2181   ;         function main
07DE           2182   ;        -----------------------------------------
07DE           2183   _main:
07DE           2184   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:696: dist_index = 1;
07DE 750001    2185            mov     _dist_index,#0x01
07E1 E4        2186            clr     a
07E2 F501      2187            mov     (_dist_index + 1),a
07E4           2188   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:697: reverse = 0;    
07E4 75C000    2189            mov     _reverse,#0x00
07E7           2190   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:699: printf("\n");
07E7 7430      2191            mov     a,#__str_6
07E9 C0E0      2192            push    acc
07EB 74A5      2193            mov     a,#(__str_6 >> 8)
07ED C0E0      2194            push    acc
07EF 7480      2195            mov     a,#0x80
07F1 C0E0      2196            push    acc
07F3 120100    2197            lcall   _printf
07F6 1581      2198            dec     sp
07F8 1581      2199            dec     sp
07FA 1581      2200            dec     sp
07FC           2201   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:700: Testing_Code();
07FC 120100    2202            lcall   _Testing_Code
07FF           2203   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:701: while(1){
07FF           2204   L042012?:
07FF           2205   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:703: run();
07FF 120100    2206            lcall   _run
0802           2207   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:706: if(Get_Right_Distance() < logic_0_thresh){
0802 120100    2208            lcall   _Get_Right_Distance
0805 AA82      2209            mov     r2,dpl
0807 AB83      2210            mov     r3,dph
0809 C3        2211            clr     c
080A EA        2212            mov     a,r2
080B 940A      2213            subb    a,#0x0A
080D EB        2214            mov     a,r3
080E 9400      2215            subb    a,#0x00
0810 5001      2216            jnc     L042012?
0812           2217   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:707: Stop_Car();
0812 120100    2218            lcall   _Stop_Car
0815           2219   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:708: cmd = rx_byte (logic_0_thresh);         
0815 90000A    2220            mov     dptr,#0x000A
0818 120100    2221            lcall   _rx_byte
081B AA82      2222            mov     r2,dpl
081D           2223   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:709: if(cmd == MOVE_FURTHER) Move_Car_Further();
081D BAFDB0    2224            cjne    r2,#0xFD,L042002?
0820 C002      2225            push    ar2
0822 120100    2226            lcall   _Move_Car_Further
0825 D002      2227            pop     ar2
0827           2228   L042002?:
0827           2229   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:710: if(cmd == MOVE_CLOSER) Move_Car_Closer();
0827 BAF5F0    2230            cjne    r2,#0xF5,L042004?
082A C002      2231            push    ar2
082C 120100    2232            lcall   _Move_Car_Closer
082F D002      2233            pop     ar2
0831           2234   L042004?:
0831           2235   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:711: if(cmd == ROTATE_180) Rotate_Car_180_CW();
0831 BAD530    2236            cjne    r2,#0xD5,L042006?
0834 C002      2237            push    ar2
0836 120100    2238            lcall   _Rotate_Car_180_CW
0839 D002      2239            pop     ar2
083B           2240   L042006?:
083B           2241   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:712: if(cmd == PRL_PARK) Parallel_Park();
083B BA8070    2242            cjne    r2,#0x80,L042012?
083E 120100    2243            lcall   _Parallel_Park
0841 8001      2244            sjmp    L042012?
0843           2245            rseg R_CSEG
0843           2246   
0000           2247            rseg R_XINIT
0000           2248   
0000           2249            rseg R_CONST
0000           2250   __str_0:
0000 20        2251            db ' '
0001 0A        2252            db 0x0A
0002 20426566  2253            db ' Before Turning!!!!!!!!! Right Voltage Reading: %u, Left V'
     6F726520
     5475726E
     696E6721
     21212121
     21212121
     20526967
     68742056
     6F6C7461
     67652052
     65616469
     6E673A20
     25752C20
     4C656674
     2056
003C 6F6C7461  2254            db 'oltage Reading: %u'
     67652052
     65616469
     6E673A20
     2575
004E 00        2255            db 0x00
004F           2256   __str_1:
004F 20        2257            db ' '
0050 0A        2258            db 0x0A
0051 20466972  2259            db ' First Loop Right Voltage Reading: %u, Left Voltage Readin'
     7374204C
     6F6F7020
     52696768
     7420566F
     6C746167
     65205265
     6164696E
     673A2025
     752C204C
     65667420
     566F6C74
     61676520
     52656164
     696E
008B 673A2025  2260            db 'g: %u'
     75
0090 00        2261            db 0x00
0091           2262   __str_2:
0091 0D        2263            db 0x0D
0092 00        2264            db 0x00
0093           2265   __str_3:
0093 20        2266            db ' '
0094 0A        2267            db 0x0A
0095 20536563  2268            db ' Second Loop Right Voltage Reading: %u, Left Voltage Readi'
     6F6E6420
     4C6F6F70
     20526967
     68742056
     6F6C7461
     67652052
     65616469
     6E673A20
     25752C20
     4C656674
     20566F6C
     74616765
     20526561
     6469
00CF 6E673A20  2269            db 'ng: %u'
     2575
00D5 00        2270            db 0x00
00D6           2271   __str_4:
00D6 6D616465  2272            db 'made through both loops'
     20746872
     6F756768
     20626F74
     68206C6F
     6F7073
00ED 00        2273            db 0x00
00EE           2274   __str_5:
00EE 72696768  2275            db 'right = %u, left = %u, cmd = %u '
     74203D20
     25752C20
     6C656674
     203D2025
     752C2063
     6D64203D
     20257520
010E 0A        2276            db 0x0A
010F 00        2277            db 0x00
0110           2278   __str_6:
0110 0A        2279            db 0x0A
0111 00        2280            db 0x00
0112           2281   
000E           2282            CSEG
000E           2283   
000E           2284   end
