0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1034 (Dec 12 2012) (MSVC)
0000              4   ; This file was generated Tue Apr 01 20:08:45 2014
0000              5   ;--------------------------------------------------------
                  5   $name Car_Project_2
                  6   $optc51 --model-small
0000              8            R_DSEG    segment data
0000              9            R_CSEG    segment code
0000             10            R_BSEG    segment bit
0000             11            R_XSEG    segment xdata
0000             12            R_PSEG    segment xdata
0000             13            R_ISEG    segment idata
0000             14            R_OSEG    segment data overlay
0000             15            BIT_BANK  segment data overlay
0000             16            R_HOME    segment code
0000             17            R_GSINIT  segment code
0000             18            R_IXSEG   segment xdata
0000             19            R_CONST   segment code
0000             20            R_XINIT   segment code
0000             21            R_DINIT   segment code
0000             22   
0000             23   ;--------------------------------------------------------
0000             24   ; Public variables in this module
0000             25   ;--------------------------------------------------------
0000             26            public _main
0000             27            public _Fake_run
0000             28            public _Move_Car_Further
0000             29            public _Move_Car_Closer
0000             30            public _Parallel_Park_Wait_6
0000             31            public _Parallel_Park_Wait_5
0000             32            public _Parallel_Park_Wait_4
0000             33            public _Parallel_Park_Wait_3
0000             34            public _Parallel_Park_Wait_2
0000             35            public _Parallel_Park_Wait_1
0000             36            public _pwmcounter
0000             37            public __c51_external_startup
0000             38            public _reverse
0000             39            public _dist_index
0000             40            public _dist_table
0000             41            public _right_motor_pwm2
0000             42            public _right_motor_pwm1
0000             43            public _right_motor_pwmcount2
0000             44            public _right_motor_pwmcount1
0000             45            public _left_motor_pwm2
0000             46            public _left_motor_pwm1
0000             47            public _left_motor_pwmcount2
0000             48            public _left_motor_pwmcount1
0000             49            public _Move_Right_Motor_Backwards
0000             50            public _Move_Right_Motor_Forwards
0000             51            public _Move_Left_Motor_Backwards
0000             52            public _Move_Left_Motor_Forwards
0000             53            public _Stop_Right_Motor
0000             54            public _Stop_Left_Motor
0000             55            public _wait50ms
0000             56            public _wait1s
0000             57            public _Get_Right_Distance
0000             58            public _Get_Left_Distance
0000             59            public _Stop_Car
0000             60            public _Face_Transmitter
0000             61            public _Wait_X_Time
0000             62            public _Wait_1ms
0000             63            public _Move_Forwards
0000             64            public _Parallel_Park
0000             65            public _Undo_Parallel_Park
0000             66            public _Turn_Car_Left
0000             67            public _Turn_Car_Right
0000             68            public _Move_Backwards
0000             69            public _Rotate_Car_180_CW
0000             70            public _Rotate_Car_180_CCW
0000             71            public _rx_byte
0000             72            public _wait_bit_time
0000             73            public _wait_one_and_half_bit_time
0000             74            public _SPIWrite
0000             75            public _GetADC
0000             76            public _Testing_Code
0000             77            public _run
0000             78   ;--------------------------------------------------------
0000             79   ; Special Function Registers
0000             80   ;--------------------------------------------------------
0000             81   _ACC            DATA 0xe0
0000             82   _B              DATA 0xf0
0000             83   _PSW            DATA 0xd0
0000             84   _SP             DATA 0x81
0000             85   _SPX            DATA 0xef
0000             86   _DPL            DATA 0x82
0000             87   _DPH            DATA 0x83
0000             88   _DPLB           DATA 0xd4
0000             89   _DPHB           DATA 0xd5
0000             90   _PAGE           DATA 0xf6
0000             91   _AX             DATA 0xe1
0000             92   _BX             DATA 0xf7
0000             93   _DSPR           DATA 0xe2
0000             94   _FIRD           DATA 0xe3
0000             95   _MACL           DATA 0xe4
0000             96   _MACH           DATA 0xe5
0000             97   _PCON           DATA 0x87
0000             98   _AUXR           DATA 0x8e
0000             99   _AUXR1          DATA 0xa2
0000            100   _DPCF           DATA 0xa1
0000            101   _CKRL           DATA 0x97
0000            102   _CKCKON0        DATA 0x8f
0000            103   _CKCKON1        DATA 0xaf
0000            104   _CKSEL          DATA 0x85
0000            105   _CLKREG         DATA 0xae
0000            106   _OSCCON         DATA 0x85
0000            107   _IE             DATA 0xa8
0000            108   _IEN0           DATA 0xa8
0000            109   _IEN1           DATA 0xb1
0000            110   _IPH0           DATA 0xb7
0000            111   _IP             DATA 0xb8
0000            112   _IPL0           DATA 0xb8
0000            113   _IPH1           DATA 0xb3
0000            114   _IPL1           DATA 0xb2
0000            115   _P0             DATA 0x80
0000            116   _P1             DATA 0x90
0000            117   _P2             DATA 0xa0
0000            118   _P3             DATA 0xb0
0000            119   _P4             DATA 0xc0
0000            120   _P0M0           DATA 0xe6
0000            121   _P0M1           DATA 0xe7
0000            122   _P1M0           DATA 0xd6
0000            123   _P1M1           DATA 0xd7
0000            124   _P2M0           DATA 0xce
0000            125   _P2M1           DATA 0xcf
0000            126   _P3M0           DATA 0xc6
0000            127   _P3M1           DATA 0xc7
0000            128   _P4M0           DATA 0xbe
0000            129   _P4M1           DATA 0xbf
0000            130   _SCON           DATA 0x98
0000            131   _SBUF           DATA 0x99
0000            132   _SADEN          DATA 0xb9
0000            133   _SADDR          DATA 0xa9
0000            134   _BDRCON         DATA 0x9b
0000            135   _BRL            DATA 0x9a
0000            136   _TCON           DATA 0x88
0000            137   _TMOD           DATA 0x89
0000            138   _TCONB          DATA 0x91
0000            139   _TL0            DATA 0x8a
0000            140   _TH0            DATA 0x8c
0000            141   _TL1            DATA 0x8b
0000            142   _TH1            DATA 0x8d
0000            143   _RL0            DATA 0xf2
0000            144   _RH0            DATA 0xf4
0000            145   _RL1            DATA 0xf3
0000            146   _RH1            DATA 0xf5
0000            147   _WDTRST         DATA 0xa6
0000            148   _WDTPRG         DATA 0xa7
0000            149   _T2CON          DATA 0xc8
0000            150   _T2MOD          DATA 0xc9
0000            151   _RCAP2H         DATA 0xcb
0000            152   _RCAP2L         DATA 0xca
0000            153   _TH2            DATA 0xcd
0000            154   _TL2            DATA 0xcc
0000            155   _SPCON          DATA 0xc3
0000            156   _SPSTA          DATA 0xc4
0000            157   _SPDAT          DATA 0xc5
0000            158   _SSCON          DATA 0x93
0000            159   _SSCS           DATA 0x94
0000            160   _SSDAT          DATA 0x95
0000            161   _SSADR          DATA 0x96
0000            162   _KBLS           DATA 0x9c
0000            163   _KBE            DATA 0x9d
0000            164   _KBF            DATA 0x9e
0000            165   _KBMOD          DATA 0x9f
0000            166   _BMSEL          DATA 0x92
0000            167   _FCON           DATA 0xd2
0000            168   _EECON          DATA 0xd2
0000            169   _ACSRA          DATA 0xa3
0000            170   _ACSRB          DATA 0xab
0000            171   _AREF           DATA 0xbd
0000            172   _DADC           DATA 0xa4
0000            173   _DADI           DATA 0xa5
0000            174   _DADL           DATA 0xac
0000            175   _DADH           DATA 0xad
0000            176   _CCON           DATA 0xd8
0000            177   _CMOD           DATA 0xd9
0000            178   _CL             DATA 0xe9
0000            179   _CH             DATA 0xf9
0000            180   _CCAPM0         DATA 0xda
0000            181   _CCAPM1         DATA 0xdb
0000            182   _CCAPM2         DATA 0xdc
0000            183   _CCAPM3         DATA 0xdd
0000            184   _CCAPM4         DATA 0xde
0000            185   _CCAP0H         DATA 0xfa
0000            186   _CCAP1H         DATA 0xfb
0000            187   _CCAP2H         DATA 0xfc
0000            188   _CCAP3H         DATA 0xfd
0000            189   _CCAP4H         DATA 0xfe
0000            190   _CCAP0L         DATA 0xea
0000            191   _CCAP1L         DATA 0xeb
0000            192   _CCAP2L         DATA 0xec
0000            193   _CCAP3L         DATA 0xed
0000            194   _CCAP4L         DATA 0xee
0000            195   ;--------------------------------------------------------
0000            196   ; special function bits
0000            197   ;--------------------------------------------------------
0000            198   _ACC_0          BIT 0xe0
0000            199   _ACC_1          BIT 0xe1
0000            200   _ACC_2          BIT 0xe2
0000            201   _ACC_3          BIT 0xe3
0000            202   _ACC_4          BIT 0xe4
0000            203   _ACC_5          BIT 0xe5
0000            204   _ACC_6          BIT 0xe6
0000            205   _ACC_7          BIT 0xe7
0000            206   _B_0            BIT 0xf0
0000            207   _B_1            BIT 0xf1
0000            208   _B_2            BIT 0xf2
0000            209   _B_3            BIT 0xf3
0000            210   _B_4            BIT 0xf4
0000            211   _B_5            BIT 0xf5
0000            212   _B_6            BIT 0xf6
0000            213   _B_7            BIT 0xf7
0000            214   _P              BIT 0xd0
0000            215   _F1             BIT 0xd1
0000            216   _OV             BIT 0xd2
0000            217   _RS0            BIT 0xd3
0000            218   _RS1            BIT 0xd4
0000            219   _F0             BIT 0xd5
0000            220   _AC             BIT 0xd6
0000            221   _CY             BIT 0xd7
0000            222   _EX0            BIT 0xa8
0000            223   _ET0            BIT 0xa9
0000            224   _EX1            BIT 0xaa
0000            225   _ET1            BIT 0xab
0000            226   _ES             BIT 0xac
0000            227   _ET2            BIT 0xad
0000            228   _EC             BIT 0xae
0000            229   _EA             BIT 0xaf
0000            230   _PX0            BIT 0xb8
0000            231   _PT0            BIT 0xb9
0000            232   _PX1            BIT 0xba
0000            233   _PT1            BIT 0xbb
0000            234   _PS             BIT 0xbc
0000            235   _PT2            BIT 0xbd
0000            236   _IP0D           BIT 0xbf
0000            237   _PPCL           BIT 0xbe
0000            238   _PT2L           BIT 0xbd
0000            239   _PLS            BIT 0xbc
0000            240   _PT1L           BIT 0xbb
0000            241   _PX1L           BIT 0xba
0000            242   _PT0L           BIT 0xb9
0000            243   _PX0L           BIT 0xb8
0000            244   _P0_0           BIT 0x80
0000            245   _P0_1           BIT 0x81
0000            246   _P0_2           BIT 0x82
0000            247   _P0_3           BIT 0x83
0000            248   _P0_4           BIT 0x84
0000            249   _P0_5           BIT 0x85
0000            250   _P0_6           BIT 0x86
0000            251   _P0_7           BIT 0x87
0000            252   _P1_0           BIT 0x90
0000            253   _P1_1           BIT 0x91
0000            254   _P1_2           BIT 0x92
0000            255   _P1_3           BIT 0x93
0000            256   _P1_4           BIT 0x94
0000            257   _P1_5           BIT 0x95
0000            258   _P1_6           BIT 0x96
0000            259   _P1_7           BIT 0x97
0000            260   _P2_0           BIT 0xa0
0000            261   _P2_1           BIT 0xa1
0000            262   _P2_2           BIT 0xa2
0000            263   _P2_3           BIT 0xa3
0000            264   _P2_4           BIT 0xa4
0000            265   _P2_5           BIT 0xa5
0000            266   _P2_6           BIT 0xa6
0000            267   _P2_7           BIT 0xa7
0000            268   _P3_0           BIT 0xb0
0000            269   _P3_1           BIT 0xb1
0000            270   _P3_2           BIT 0xb2
0000            271   _P3_3           BIT 0xb3
0000            272   _P3_4           BIT 0xb4
0000            273   _P3_5           BIT 0xb5
0000            274   _P3_6           BIT 0xb6
0000            275   _P3_7           BIT 0xb7
0000            276   _RXD            BIT 0xb0
0000            277   _TXD            BIT 0xb1
0000            278   _INT0           BIT 0xb2
0000            279   _INT1           BIT 0xb3
0000            280   _T0             BIT 0xb4
0000            281   _T1             BIT 0xb5
0000            282   _WR             BIT 0xb6
0000            283   _RD             BIT 0xb7
0000            284   _P4_0           BIT 0xc0
0000            285   _P4_1           BIT 0xc1
0000            286   _P4_2           BIT 0xc2
0000            287   _P4_3           BIT 0xc3
0000            288   _P4_4           BIT 0xc4
0000            289   _P4_5           BIT 0xc5
0000            290   _P4_6           BIT 0xc6
0000            291   _P4_7           BIT 0xc7
0000            292   _RI             BIT 0x98
0000            293   _TI             BIT 0x99
0000            294   _RB8            BIT 0x9a
0000            295   _TB8            BIT 0x9b
0000            296   _REN            BIT 0x9c
0000            297   _SM2            BIT 0x9d
0000            298   _SM1            BIT 0x9e
0000            299   _SM0            BIT 0x9f
0000            300   _IT0            BIT 0x88
0000            301   _IE0            BIT 0x89
0000            302   _IT1            BIT 0x8a
0000            303   _IE1            BIT 0x8b
0000            304   _TR0            BIT 0x8c
0000            305   _TF0            BIT 0x8d
0000            306   _TR1            BIT 0x8e
0000            307   _TF1            BIT 0x8f
0000            308   _CP_RL2         BIT 0xc8
0000            309   _C_T2           BIT 0xc9
0000            310   _TR2            BIT 0xca
0000            311   _EXEN2          BIT 0xcb
0000            312   _TCLK           BIT 0xcc
0000            313   _RCLK           BIT 0xcd
0000            314   _EXF2           BIT 0xce
0000            315   _TF2            BIT 0xcf
0000            316   _CF             BIT 0xdf
0000            317   _CR             BIT 0xde
0000            318   _CCF4           BIT 0xdc
0000            319   _CCF3           BIT 0xdb
0000            320   _CCF2           BIT 0xda
0000            321   _CCF1           BIT 0xd9
0000            322   _CCF0           BIT 0xd8
0000            323   ;--------------------------------------------------------
0000            324   ; overlayable register banks
0000            325   ;--------------------------------------------------------
0000            326            rbank0 segment data overlay
0000            327   ;--------------------------------------------------------
0000            328   ; internal ram data
0000            329   ;--------------------------------------------------------
0000            330            rseg R_DSEG
0000            331   _left_motor_pwmcount1:
0000            332            ds 1
0001            333   _left_motor_pwmcount2:
0001            334            ds 1
0002            335   _left_motor_pwm1:
0002            336            ds 1
0003            337   _left_motor_pwm2:
0003            338            ds 1
0004            339   _right_motor_pwmcount1:
0004            340            ds 1
0005            341   _right_motor_pwmcount2:
0005            342            ds 1
0006            343   _right_motor_pwm1:
0006            344            ds 1
0007            345   _right_motor_pwm2:
0007            346            ds 1
0008            347   _dist_table:
0008            348            ds 8
0010            349   _dist_index:
0010            350            ds 2
0012            351   _reverse:
0012            352            ds 1
0013            353   ;--------------------------------------------------------
0013            354   ; overlayable items in internal ram 
0013            355   ;--------------------------------------------------------
0000            356            rseg    R_OSEG
0000            357   ;--------------------------------------------------------
0000            358   ; indirectly addressable internal ram data
0000            359   ;--------------------------------------------------------
0000            360            rseg R_ISEG
0000            361   ;--------------------------------------------------------
0000            362   ; absolute internal ram data
0000            363   ;--------------------------------------------------------
0000            364            DSEG
0000            365   ;--------------------------------------------------------
0000            366   ; bit data
0000            367   ;--------------------------------------------------------
0000            368            rseg R_BSEG
0000            369   ;--------------------------------------------------------
0000            370   ; paged external ram data
0000            371   ;--------------------------------------------------------
0000            372            rseg R_PSEG
0000            373   ;--------------------------------------------------------
0000            374   ; external ram data
0000            375   ;--------------------------------------------------------
0000            376            rseg R_XSEG
0000            377   ;--------------------------------------------------------
0000            378   ; absolute external ram data
0000            379   ;--------------------------------------------------------
0000            380            XSEG
0000            381   ;--------------------------------------------------------
0000            382   ; external initialized ram data
0000            383   ;--------------------------------------------------------
0000            384            rseg R_IXSEG
0000            385            rseg R_HOME
0000            386            rseg R_GSINIT
0000            387            rseg R_CSEG
0000            388   ;--------------------------------------------------------
0000            389   ; Reset entry point and interrupt vectors
0000            390   ;--------------------------------------------------------
0000            391            CSEG at 0x0000
0000 020100     392            ljmp    _crt0
000B            393            CSEG at 0x000b
000B 020100     394            ljmp    _pwmcounter
000E            395   ;--------------------------------------------------------
000E            396   ; global & static initialisations
000E            397   ;--------------------------------------------------------
0000            398            rseg R_HOME
0000            399            rseg R_GSINIT
0000            400            rseg R_GSINIT
0000            401   ;--------------------------------------------------------
0000            402   ; data variables initialization
0000            403   ;--------------------------------------------------------
0000            404            rseg R_DINIT
0000            405   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:34: unsigned int dist_table[4] = {350, 150, 75, 30};
0000 75405E     406            mov     _dist_table,#0x5E
0003 754101     407            mov     (_dist_table + 1),#0x01
0006 754296     408            mov     (_dist_table + 0x0002),#0x96
0009 754300     409            mov     ((_dist_table + 0x0002) + 1),#0x00
000C 75444B     410            mov     (_dist_table + 0x0004),#0x4B
000F 754500     411            mov     ((_dist_table + 0x0004) + 1),#0x00
0012 75461E     412            mov     (_dist_table + 0x0006),#0x1E
0015 754700     413            mov     ((_dist_table + 0x0006) + 1),#0x00
0018            414            ; The linker places a 'ret' at the end of segment R_DINIT.
0018            415   ;--------------------------------------------------------
0018            416   ; code
0018            417   ;--------------------------------------------------------
0000            418            rseg R_CSEG
0000            419   ;------------------------------------------------------------
0000            420   ;Allocation info for local variables in function '_c51_external_startup'
0000            421   ;------------------------------------------------------------
0000            422   ;------------------------------------------------------------
0000            423   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:76: unsigned char _c51_external_startup(void)
0000            424   ;        -----------------------------------------
0000            425   ;         function _c51_external_startup
0000            426   ;        -----------------------------------------
0000            427   __c51_external_startup:
0000            428            using   0
0000            429   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:79: P0M0=0;  P0M1=0;
0000 75E600     430            mov     _P0M0,#0x00
0003 75E700     431            mov     _P0M1,#0x00
0006            432   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:80: P1M0=0;  P1M1=0;
0006 75D600     433            mov     _P1M0,#0x00
0009 75D700     434            mov     _P1M1,#0x00
000C            435   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:81: P2M0=0;  P2M1=0;
000C 75CE00     436            mov     _P2M0,#0x00
000F 75CF00     437            mov     _P2M1,#0x00
0012            438   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:82: P3M0=0;  P3M1=0;
0012 75C600     439            mov     _P3M0,#0x00
0015 75C700     440            mov     _P3M1,#0x00
0018            441   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:83: AUXR=0B_0001_0001; // 1152 bytes of internal XDATA, P4.4 is a general purpose I/O
0018 758E11     442            mov     _AUXR,#0x11
001B            443   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:84: P4M0=0;  P4M1=0;
001B 75BE00     444            mov     _P4M0,#0x00
001E 75BF00     445            mov     _P4M1,#0x00
0021            446   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:87: PCON|=0x80;
0021 438780     447            orl     _PCON,#0x80
0024            448   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:88: SCON = 0x52;
0024 759852     449            mov     _SCON,#0x52
0027            450   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:89: BDRCON=0;
0027 759B00     451            mov     _BDRCON,#0x00
002A            452   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:90: BRL=BRG_VAL;
002A 759AFA     453            mov     _BRL,#0xFA
002D            454   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:91: BDRCON=BRR|TBCK|RBCK|SPD;
002D 759B1E     455            mov     _BDRCON,#0x1E
0030            456   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:94: TR0=0; // Stop timer 0
0030 C28C       457            clr     _TR0
0032            458   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:95: TMOD=0x01; // 16-bit timer
0032 758901     459            mov     _TMOD,#0x01
0035            460   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:100: TH0=RH0=TIMER0_RELOAD_VALUE/0x100;
0035 75F4FF     461            mov     _RH0,#0xFF
0038 758CFF     462            mov     _TH0,#0xFF
003B            463   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:101: TL0=RL0=TIMER0_RELOAD_VALUE%0x100;
003B 75F248     464            mov     _RL0,#0x48
003E 758A48     465            mov     _TL0,#0x48
0041            466   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:102: TR0=1; // Start timer 0 (bit 4 in TCON)
0041 D28C       467            setb    _TR0
0043            468   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:103: ET0=1; // Enable timer 0 interrupt
0043 D2A9       469            setb    _ET0
0045            470   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:104: EA=1;  // Enable global interrupts
0045 D2AF       471            setb    _EA
0047            472   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:106: left_motor_pwmcount1 = 0;    
0047 75C000     473            mov     _left_motor_pwmcount1,#0x00
004A            474   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:107: left_motor_pwmcount2 = 0;
004A 757000     475            mov     _left_motor_pwmcount2,#0x00
004D            476   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:108: right_motor_pwmcount1 = 0;
004D 758000     477            mov     _right_motor_pwmcount1,#0x00
0050            478   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:109: right_motor_pwmcount2 = 0;
0050 753000     479            mov     _right_motor_pwmcount2,#0x00
0053            480   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:111: return 0;
0053 758200     481            mov     dpl,#0x00
0056 22         482            ret
0057            483   ;------------------------------------------------------------
0057            484   ;Allocation info for local variables in function 'pwmcounter'
0057            485   ;------------------------------------------------------------
0057            486   ;------------------------------------------------------------
0057            487   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:116: void pwmcounter (void) interrupt 1
0057            488   ;        -----------------------------------------
0057            489   ;         function pwmcounter
0057            490   ;        -----------------------------------------
0057            491   _pwmcounter:
0057 C0E0       492            push    acc
0059 C0D0       493            push    psw
005B 75D000     494            mov     psw,#0x00
005E            495   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:118: if(++left_motor_pwmcount1>99) left_motor_pwmcount1=0;
005E 05C0       496            inc     _left_motor_pwmcount1
0060 E5C0       497            mov     a,_left_motor_pwmcount1
0062 249C       498            add     a,#0xff - 0x63
0064 5001       499            jnc     L003002?
0066 75C000     500            mov     _left_motor_pwmcount1,#0x00
0069            501   L003002?:
0069            502   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:119: P1_2=(left_motor_pwm1>left_motor_pwmcount1)?1:0;
0069 C3         503            clr     c
006A E5C0       504            mov     a,_left_motor_pwmcount1
006C 9520       505            subb    a,_left_motor_pwm1
006E 9292       506            mov     _P1_2,c
0070            507   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:121: if(++left_motor_pwmcount2>99) left_motor_pwmcount2=0;
0070 0570       508            inc     _left_motor_pwmcount2
0072 E570       509            mov     a,_left_motor_pwmcount2
0074 249C       510            add     a,#0xff - 0x63
0076 5001       511            jnc     L003004?
0078 757000     512            mov     _left_motor_pwmcount2,#0x00
007B            513   L003004?:
007B            514   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:122: P1_4=(left_motor_pwm2>left_motor_pwmcount2)?1:0;
007B C3         515            clr     c
007C E570       516            mov     a,_left_motor_pwmcount2
007E 95D0       517            subb    a,_left_motor_pwm2
0080 9294       518            mov     _P1_4,c
0082            519   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:124: if(++right_motor_pwmcount1>99) right_motor_pwmcount1=0;
0082 0580       520            inc     _right_motor_pwmcount1
0084 E580       521            mov     a,_right_motor_pwmcount1
0086 249C       522            add     a,#0xff - 0x63
0088 5001       523            jnc     L003006?
008A 758000     524            mov     _right_motor_pwmcount1,#0x00
008D            525   L003006?:
008D            526   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:125: P1_0=(right_motor_pwm1>right_motor_pwmcount1)?1:0;
008D C3         527            clr     c
008E E580       528            mov     a,_right_motor_pwmcount1
0090 95E0       529            subb    a,_right_motor_pwm1
0092 9290       530            mov     _P1_0,c
0094            531   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:127: if(++right_motor_pwmcount2>99) right_motor_pwmcount2=0;
0094 0530       532            inc     _right_motor_pwmcount2
0096 E530       533            mov     a,_right_motor_pwmcount2
0098 249C       534            add     a,#0xff - 0x63
009A 5001       535            jnc     L003008?
009C 753000     536            mov     _right_motor_pwmcount2,#0x00
009F            537   L003008?:
009F            538   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:128: P1_1=(right_motor_pwm2>right_motor_pwmcount2)?1:0;
009F C3         539            clr     c
00A0 E530       540            mov     a,_right_motor_pwmcount2
00A2 9590       541            subb    a,_right_motor_pwm2
00A4 9291       542            mov     _P1_1,c
00A6 D0D0       543            pop     psw
00A8 D0E0       544            pop     acc
00AA 32         545            reti
00AB            546   ;        eliminated unneeded push/pop dpl
00AB            547   ;        eliminated unneeded push/pop dph
00AB            548   ;        eliminated unneeded push/pop b
00AB            549   ;------------------------------------------------------------
00AB            550   ;Allocation info for local variables in function 'Move_Right_Motor_Backwards'
00AB            551   ;------------------------------------------------------------
00AB            552   ;------------------------------------------------------------
00AB            553   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:133: void Move_Right_Motor_Backwards(){
00AB            554   ;        -----------------------------------------
00AB            555   ;         function Move_Right_Motor_Backwards
00AB            556   ;        -----------------------------------------
00AB            557   _Move_Right_Motor_Backwards:
00AB            558   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:134: right_motor_pwm1 = 37;
00AB 75E025     559            mov     _right_motor_pwm1,#0x25
00AE            560   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:135: right_motor_pwm2 = 0;
00AE 759000     561            mov     _right_motor_pwm2,#0x00
00B1 22         562            ret
00B2            563   ;------------------------------------------------------------
00B2            564   ;Allocation info for local variables in function 'Move_Right_Motor_Forwards'
00B2            565   ;------------------------------------------------------------
00B2            566   ;------------------------------------------------------------
00B2            567   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:141: void Move_Right_Motor_Forwards (void){
00B2            568   ;        -----------------------------------------
00B2            569   ;         function Move_Right_Motor_Forwards
00B2            570   ;        -----------------------------------------
00B2            571   _Move_Right_Motor_Forwards:
00B2            572   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:142: right_motor_pwm1 = 0;
00B2 75E000     573            mov     _right_motor_pwm1,#0x00
00B5            574   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:143: right_motor_pwm2 = 45;
00B5 75902D     575            mov     _right_motor_pwm2,#0x2D
00B8 22         576            ret
00B9            577   ;------------------------------------------------------------
00B9            578   ;Allocation info for local variables in function 'Move_Left_Motor_Backwards'
00B9            579   ;------------------------------------------------------------
00B9            580   ;------------------------------------------------------------
00B9            581   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:149: void Move_Left_Motor_Backwards (void){
00B9            582   ;        -----------------------------------------
00B9            583   ;         function Move_Left_Motor_Backwards
00B9            584   ;        -----------------------------------------
00B9            585   _Move_Left_Motor_Backwards:
00B9            586   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:150: left_motor_pwm1 = 41;
00B9 752029     587            mov     _left_motor_pwm1,#0x29
00BC            588   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:151: left_motor_pwm2 = 0;
00BC 75D000     589            mov     _left_motor_pwm2,#0x00
00BF 22         590            ret
00C0            591   ;------------------------------------------------------------
00C0            592   ;Allocation info for local variables in function 'Move_Left_Motor_Forwards'
00C0            593   ;------------------------------------------------------------
00C0            594   ;------------------------------------------------------------
00C0            595   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:156: void Move_Left_Motor_Forwards (void){
00C0            596   ;        -----------------------------------------
00C0            597   ;         function Move_Left_Motor_Forwards
00C0            598   ;        -----------------------------------------
00C0            599   _Move_Left_Motor_Forwards:
00C0            600   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:157: left_motor_pwm1 = 0;
00C0 752000     601            mov     _left_motor_pwm1,#0x00
00C3            602   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:158: left_motor_pwm2 = 47;
00C3 75D02F     603            mov     _left_motor_pwm2,#0x2F
00C6 22         604            ret
00C7            605   ;------------------------------------------------------------
00C7            606   ;Allocation info for local variables in function 'Stop_Right_Motor'
00C7            607   ;------------------------------------------------------------
00C7            608   ;------------------------------------------------------------
00C7            609   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:162: void Stop_Right_Motor (void){
00C7            610   ;        -----------------------------------------
00C7            611   ;         function Stop_Right_Motor
00C7            612   ;        -----------------------------------------
00C7            613   _Stop_Right_Motor:
00C7            614   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:163: right_motor_pwm1 = 0;
00C7 75E000     615            mov     _right_motor_pwm1,#0x00
00CA            616   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:164: right_motor_pwm2 = 0;
00CA 759000     617            mov     _right_motor_pwm2,#0x00
00CD 22         618            ret
00CE            619   ;------------------------------------------------------------
00CE            620   ;Allocation info for local variables in function 'Stop_Left_Motor'
00CE            621   ;------------------------------------------------------------
00CE            622   ;------------------------------------------------------------
00CE            623   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:168: void Stop_Left_Motor (void){
00CE            624   ;        -----------------------------------------
00CE            625   ;         function Stop_Left_Motor
00CE            626   ;        -----------------------------------------
00CE            627   _Stop_Left_Motor:
00CE            628   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:169: left_motor_pwm1 = 0;
00CE 752000     629            mov     _left_motor_pwm1,#0x00
00D1            630   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:170: left_motor_pwm2 = 0;
00D1 75D000     631            mov     _left_motor_pwm2,#0x00
00D4 22         632            ret
00D5            633   ;------------------------------------------------------------
00D5            634   ;Allocation info for local variables in function 'wait50ms'
00D5            635   ;------------------------------------------------------------
00D5            636   ;------------------------------------------------------------
00D5            637   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:173: void wait50ms(){
00D5            638   ;        -----------------------------------------
00D5            639   ;         function wait50ms
00D5            640   ;        -----------------------------------------
00D5            641   _wait50ms:
00D5            642   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:184: _endasm;
00D5            643            
00D5            644      ;For a 22.1184MHz crystal one machine cycle
00D5            645      ;takes 12/22.1184MHz=0.5425347us
00D5 7A01       646                  mov R2, #1
00D7            647             Lg3:
00D7 79F8       648            mov R1, #248
00D9            649             Lg2:
00D9 78B8       650            mov R0, #184
00DB            651             Lg1:
00DB D8F0       652            djnz R0, Lg1 ; 2 machine cycles-> 2*0.5425347us*184=200us
00DD D9B0       653                  djnz R1, Lg2 ; 200us*250=0.05s
00DF DA70       654                  djnz R2, Lg3 ; 0.05s*20=50ms
00E1 22         655                  ret
00E2            656                
00E2 22         657            ret
00E3            658   ;------------------------------------------------------------
00E3            659   ;Allocation info for local variables in function 'wait1s'
00E3            660   ;------------------------------------------------------------
00E3            661   ;i                         Allocated to registers r2 r3 
00E3            662   ;------------------------------------------------------------
00E3            663   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:187: void wait1s(){
00E3            664   ;        -----------------------------------------
00E3            665   ;         function wait1s
00E3            666   ;        -----------------------------------------
00E3            667   _wait1s:
00E3            668   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:189: for (i = 0; i < 20; ++i){
00E3 7A14       669            mov     r2,#0x14
00E5 7B00       670            mov     r3,#0x00
00E7            671   L011003?:
00E7            672   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:190: wait50ms();
00E7 C002       673            push    ar2
00E9 C003       674            push    ar3
00EB 120100     675            lcall   _wait50ms
00EE D003       676            pop     ar3
00F0 D002       677            pop     ar2
00F2 1A         678            dec     r2
00F3 BAFF70     679            cjne    r2,#0xff,L011009?
00F6 1B         680            dec     r3
00F7            681   L011009?:
00F7            682   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:189: for (i = 0; i < 20; ++i){
00F7 EA         683            mov     a,r2
00F8 4B         684            orl     a,r3
00F9 7001       685            jnz     L011003?
00FB 22         686            ret
00FC            687   ;------------------------------------------------------------
00FC            688   ;Allocation info for local variables in function 'Get_Right_Distance'
00FC            689   ;------------------------------------------------------------
00FC            690   ;------------------------------------------------------------
00FC            691   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:198: unsigned int Get_Right_Distance(void){
00FC            692   ;        -----------------------------------------
00FC            693   ;         function Get_Right_Distance
00FC            694   ;        -----------------------------------------
00FC            695   _Get_Right_Distance:
00FC            696   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:201: return GetADC(2); //for now channel 1 is right motor
00FC 758202     697            mov     dpl,#0x02
00FF 020100     698            ljmp    _GetADC
0102            699   ;------------------------------------------------------------
0102            700   ;Allocation info for local variables in function 'Get_Left_Distance'
0102            701   ;------------------------------------------------------------
0102            702   ;------------------------------------------------------------
0102            703   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:206: unsigned int Get_Left_Distance(void){
0102            704   ;        -----------------------------------------
0102            705   ;         function Get_Left_Distance
0102            706   ;        -----------------------------------------
0102            707   _Get_Left_Distance:
0102            708   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:208: return GetADC(3); //for now channel 0 is left motor
0102 758203     709            mov     dpl,#0x03
0105 020100     710            ljmp    _GetADC
0108            711   ;------------------------------------------------------------
0108            712   ;Allocation info for local variables in function 'Stop_Car'
0108            713   ;------------------------------------------------------------
0108            714   ;------------------------------------------------------------
0108            715   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:212: void Stop_Car (void){
0108            716   ;        -----------------------------------------
0108            717   ;         function Stop_Car
0108            718   ;        -----------------------------------------
0108            719   _Stop_Car:
0108            720   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:213: Stop_Right_Motor();
0108 120100     721            lcall   _Stop_Right_Motor
010B            722   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:214: Stop_Left_Motor();
010B 020100     723            ljmp    _Stop_Left_Motor
010E            724   ;------------------------------------------------------------
010E            725   ;Allocation info for local variables in function 'Face_Transmitter'
010E            726   ;------------------------------------------------------------
010E            727   ;right_distance            Allocated to registers r2 r3 
010E            728   ;left_distance             Allocated to registers r4 r5 
010E            729   ;------------------------------------------------------------
010E            730   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:218: void Face_Transmitter(void){
010E            731   ;        -----------------------------------------
010E            732   ;         function Face_Transmitter
010E            733   ;        -----------------------------------------
010E            734   _Face_Transmitter:
010E            735   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:222: right_distance = Get_Right_Distance();
010E 120100     736            lcall   _Get_Right_Distance
0111 AA82       737            mov     r2,dpl
0113 AB83       738            mov     r3,dph
0115            739   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:223: left_distance = Get_Left_Distance();
0115 C002       740            push    ar2
0117 C003       741            push    ar3
0119 120100     742            lcall   _Get_Left_Distance
011C AC82       743            mov     r4,dpl
011E AD83       744            mov     r5,dph
0120 D003       745            pop     ar3
0122 D002       746            pop     ar2
0124            747   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:228: printf(" \n Before Turning!!!!!!!!! Right Voltage Reading: %u, Left Voltage Reading: %u", right_distance, left_distance);
0124 C002       748            push    ar2
0126 C003       749            push    ar3
0128 C004       750            push    ar4
012A C005       751            push    ar5
012C C004       752            push    ar4
012E C005       753            push    ar5
0130 C002       754            push    ar2
0132 C003       755            push    ar3
0134 74F0       756            mov     a,#__str_0
0136 C0E0       757            push    acc
0138 7490       758            mov     a,#(__str_0 >> 8)
013A C0E0       759            push    acc
013C 7480       760            mov     a,#0x80
013E C0E0       761            push    acc
0140 120100     762            lcall   _printf
0143 E581       763            mov     a,sp
0145 24F9       764            add     a,#0xf9
0147 F581       765            mov     sp,a
0149 D005       766            pop     ar5
014B D004       767            pop     ar4
014D D003       768            pop     ar3
014F D002       769            pop     ar2
0151            770   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:229: if (right_distance - left_distance > 50){
0151 EA         771            mov     a,r2
0152 C3         772            clr     c
0153 9C         773            subb    a,r4
0154 FE         774            mov     r6,a
0155 EB         775            mov     a,r3
0156 9D         776            subb    a,r5
0157 FF         777            mov     r7,a
0158 C3         778            clr     c
0159 7432       779            mov     a,#0x32
015B 9E         780            subb    a,r6
015C E4         781            clr     a
015D 9F         782            subb    a,r7
015E 5001       783            jnc     L015010?
0160            784   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:231: while(right_distance > left_distance ){
0160            785   L015001?:
0160 C3         786            clr     c
0161 EC         787            mov     a,r4
0162 9A         788            subb    a,r2
0163 ED         789            mov     a,r5
0164 9B         790            subb    a,r3
0165 5001       791            jnc     L015003?
0167            792   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:232: Turn_Car_Right();
0167 120100     793            lcall   _Turn_Car_Right
016A            794   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:233: right_distance = Get_Right_Distance();
016A 120100     795            lcall   _Get_Right_Distance
016D AA82       796            mov     r2,dpl
016F AB83       797            mov     r3,dph
0171            798   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:234: left_distance = Get_Left_Distance();
0171 C002       799            push    ar2
0173 C003       800            push    ar3
0175 120100     801            lcall   _Get_Left_Distance
0178 AC82       802            mov     r4,dpl
017A AD83       803            mov     r5,dph
017C D003       804            pop     ar3
017E D002       805            pop     ar2
0180            806   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:235: printf(" \n First Loop Right Voltage Reading: %u, Left Voltage Reading: %u", right_distance, left_distance);
0180 C002       807            push    ar2
0182 C003       808            push    ar3
0184 C004       809            push    ar4
0186 C005       810            push    ar5
0188 C004       811            push    ar4
018A C005       812            push    ar5
018C C002       813            push    ar2
018E C003       814            push    ar3
0190 7470       815            mov     a,#__str_1
0192 C0E0       816            push    acc
0194 7492       817            mov     a,#(__str_1 >> 8)
0196 C0E0       818            push    acc
0198 7480       819            mov     a,#0x80
019A C0E0       820            push    acc
019C 120100     821            lcall   _printf
019F E581       822            mov     a,sp
01A1 24F9       823            add     a,#0xf9
01A3 F581       824            mov     sp,a
01A5            825   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:236: printf("\r");
01A5 74B0       826            mov     a,#__str_2
01A7 C0E0       827            push    acc
01A9 7492       828            mov     a,#(__str_2 >> 8)
01AB C0E0       829            push    acc
01AD 7480       830            mov     a,#0x80
01AF C0E0       831            push    acc
01B1 120100     832            lcall   _printf
01B4 1581       833            dec     sp
01B6 1581       834            dec     sp
01B8 1581       835            dec     sp
01BA D005       836            pop     ar5
01BC D004       837            pop     ar4
01BE D003       838            pop     ar3
01C0 D002       839            pop     ar2
01C2 8001       840            sjmp    L015001?
01C4            841   L015003?:
01C4            842   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:238: Stop_Car();
01C4 120100     843            lcall   _Stop_Car
01C7 8001       844            sjmp    L015011?
01C9            845   L015010?:
01C9            846   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:240: else if (left_distance - right_distance > 30){
01C9 EC         847            mov     a,r4
01CA C3         848            clr     c
01CB 9A         849            subb    a,r2
01CC FE         850            mov     r6,a
01CD ED         851            mov     a,r5
01CE 9B         852            subb    a,r3
01CF FF         853            mov     r7,a
01D0 C3         854            clr     c
01D1 741E       855            mov     a,#0x1E
01D3 9E         856            subb    a,r6
01D4 E4         857            clr     a
01D5 9F         858            subb    a,r7
01D6 5001       859            jnc     L015011?
01D8            860   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:242: while(left_distance > right_distance ){
01D8            861   L015004?:
01D8 C3         862            clr     c
01D9 EA         863            mov     a,r2
01DA 9C         864            subb    a,r4
01DB EB         865            mov     a,r3
01DC 9D         866            subb    a,r5
01DD 5001       867            jnc     L015006?
01DF            868   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:243: Turn_Car_Left();
01DF 120100     869            lcall   _Turn_Car_Left
01E2            870   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:244: right_distance = Get_Right_Distance();
01E2 120100     871            lcall   _Get_Right_Distance
01E5 AA82       872            mov     r2,dpl
01E7 AB83       873            mov     r3,dph
01E9            874   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:245: left_distance = Get_Left_Distance();
01E9 C002       875            push    ar2
01EB C003       876            push    ar3
01ED 120100     877            lcall   _Get_Left_Distance
01F0 AC82       878            mov     r4,dpl
01F2 AD83       879            mov     r5,dph
01F4 D003       880            pop     ar3
01F6 D002       881            pop     ar2
01F8            882   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:246: printf(" \n Second Loop Right Voltage Reading: %u, Left Voltage Reading: %u", right_distance, left_distance);
01F8 C002       883            push    ar2
01FA C003       884            push    ar3
01FC C004       885            push    ar4
01FE C005       886            push    ar5
0200 C004       887            push    ar4
0202 C005       888            push    ar5
0204 C002       889            push    ar2
0206 C003       890            push    ar3
0208 74B0       891            mov     a,#__str_3
020A C0E0       892            push    acc
020C 7493       893            mov     a,#(__str_3 >> 8)
020E C0E0       894            push    acc
0210 7480       895            mov     a,#0x80
0212 C0E0       896            push    acc
0214 120100     897            lcall   _printf
0217 E581       898            mov     a,sp
0219 24F9       899            add     a,#0xf9
021B F581       900            mov     sp,a
021D            901   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:247: printf("\r");
021D 74B0       902            mov     a,#__str_2
021F C0E0       903            push    acc
0221 7492       904            mov     a,#(__str_2 >> 8)
0223 C0E0       905            push    acc
0225 7480       906            mov     a,#0x80
0227 C0E0       907            push    acc
0229 120100     908            lcall   _printf
022C 1581       909            dec     sp
022E 1581       910            dec     sp
0230 1581       911            dec     sp
0232 D005       912            pop     ar5
0234 D004       913            pop     ar4
0236 D003       914            pop     ar3
0238 D002       915            pop     ar2
023A 8001       916            sjmp    L015004?
023C            917   L015006?:
023C            918   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:249: Stop_Car();
023C 120100     919            lcall   _Stop_Car
023F            920   L015011?:
023F            921   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:251: printf("made through both loops");
023F 74F0       922            mov     a,#__str_4
0241 C0E0       923            push    acc
0243 7493       924            mov     a,#(__str_4 >> 8)
0245 C0E0       925            push    acc
0247 7480       926            mov     a,#0x80
0249 C0E0       927            push    acc
024B 120100     928            lcall   _printf
024E 1581       929            dec     sp
0250 1581       930            dec     sp
0252 1581       931            dec     sp
0254            932   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:253: return;
0254 22         933            ret
0255            934   ;------------------------------------------------------------
0255            935   ;Allocation info for local variables in function 'Wait_X_Time'
0255            936   ;------------------------------------------------------------
0255            937   ;time                      Allocated to registers r2 r3 
0255            938   ;i                         Allocated to registers r4 r5 
0255            939   ;------------------------------------------------------------
0255            940   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:257: void Wait_X_Time(int time){
0255            941   ;        -----------------------------------------
0255            942   ;         function Wait_X_Time
0255            943   ;        -----------------------------------------
0255            944   _Wait_X_Time:
0255 AA82       945            mov     r2,dpl
0257 AB83       946            mov     r3,dph
0259            947   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:259: for (i = 0; i < time; ++i){
0259 7C00       948            mov     r4,#0x00
025B 7D00       949            mov     r5,#0x00
025D            950   L016001?:
025D C3         951            clr     c
025E EC         952            mov     a,r4
025F 9A         953            subb    a,r2
0260 ED         954            mov     a,r5
0261 6480       955            xrl     a,#0x80
0263 8BF0       956            mov     b,r3
0265 63F080     957            xrl     b,#0x80
0268 95F0       958            subb    a,b
026A 5001       959            jnc     L016005?
026C            960   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:260: Wait_1ms();
026C C002       961            push    ar2
026E C003       962            push    ar3
0270 C004       963            push    ar4
0272 C005       964            push    ar5
0274 120100     965            lcall   _Wait_1ms
0277 D005       966            pop     ar5
0279 D004       967            pop     ar4
027B D003       968            pop     ar3
027D D002       969            pop     ar2
027F            970   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:259: for (i = 0; i < time; ++i){
027F 0C         971            inc     r4
0280 BC0030     972            cjne    r4,#0x00,L016001?
0283 0D         973            inc     r5
0284 8001       974            sjmp    L016001?
0286            975   L016005?:
0286 22         976            ret
0287            977   ;------------------------------------------------------------
0287            978   ;Allocation info for local variables in function 'Wait_1ms'
0287            979   ;------------------------------------------------------------
0287            980   ;------------------------------------------------------------
0287            981   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:264: void Wait_1ms(void){
0287            982   ;        -----------------------------------------
0287            983   ;         function Wait_1ms
0287            984   ;        -----------------------------------------
0287            985   _Wait_1ms:
0287            986   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:275: _endasm;
0287            987            
0287            988      ;For a 22.1184MHz crystal one machine cycle
0287            989      ;takes 12/22.1184MHz=0.5425347us
0287 7A02       990                  mov R2, #2
0289            991             Lz3:
0289 7905       992            mov R1, #5
028B            993             Lz2:
028B 785C       994            mov R0, #92
028D            995             Lz1:
028D D870       996            djnz R0, Lz1 ; 2 machine cycles-> 2*0.5425347us*184=200us
028F D930       997                  djnz R1, Lz2 ; 200us*250=0.05s
0291 DAF0       998                  djnz R2, Lz3 ; 0.05s*20=50ms
0293 22         999                  ret
0294           1000                
0294 22        1001            ret
0295           1002   ;------------------------------------------------------------
0295           1003   ;Allocation info for local variables in function 'Parallel_Park_Wait_1'
0295           1004   ;------------------------------------------------------------
0295           1005   ;------------------------------------------------------------
0295           1006   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:279: void Parallel_Park_Wait_1(void){
0295           1007   ;        -----------------------------------------
0295           1008   ;         function Parallel_Park_Wait_1
0295           1009   ;        -----------------------------------------
0295           1010   _Parallel_Park_Wait_1:
0295           1011   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:290: _endasm;
0295           1012            
0295           1013      ;For a 22.1184MHz crystal one machine cycle
0295           1014      ;takes 12/22.1184MHz=0.5425347us
0295 7A14      1015                  mov R2, #20 ;25
0297           1016             La3:
0297 79F8      1017            mov R1, #248
0299           1018             La2:
0299 78B8      1019            mov R0, #184
029B           1020             La1:
029B D830      1021            djnz R0, La1 ; 2 machine cycles-> 2*0.5425347us*184=200us
029D D9F0      1022                  djnz R1, La2 ; 200us*250=0.05s
029F DAB0      1023                  djnz R2, La3 ; 0.05s*20=50ms
02A1 22        1024                  ret
02A2           1025                
02A2 22        1026            ret
02A3           1027   ;------------------------------------------------------------
02A3           1028   ;Allocation info for local variables in function 'Parallel_Park_Wait_2'
02A3           1029   ;------------------------------------------------------------
02A3           1030   ;------------------------------------------------------------
02A3           1031   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:294: void Parallel_Park_Wait_2(void){
02A3           1032   ;        -----------------------------------------
02A3           1033   ;         function Parallel_Park_Wait_2
02A3           1034   ;        -----------------------------------------
02A3           1035   _Parallel_Park_Wait_2:
02A3           1036   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:305: _endasm;
02A3           1037            
02A3           1038      ;For a 22.1184MHz crystal one machine cycle
02A3           1039      ;takes 12/22.1184MHz=0.5425347us
02A3 7A01      1040                  mov R2, #1
02A5           1041             Lb3:
02A5 79F8      1042            mov R1, #248
02A7           1043             Lb2:
02A7 78B8      1044            mov R0, #184
02A9           1045             Lb1:
02A9 D8F0      1046            djnz R0, Lb1 ; 2 machine cycles-> 2*0.5425347us*184=200us
02AB D9B0      1047                  djnz R1, Lb2 ; 200us*250=0.05s
02AD DA70      1048                  djnz R2, Lb3 ; 0.05s*20=50ms
02AF 22        1049                  ret
02B0           1050                
02B0 22        1051            ret
02B1           1052   ;------------------------------------------------------------
02B1           1053   ;Allocation info for local variables in function 'Parallel_Park_Wait_3'
02B1           1054   ;------------------------------------------------------------
02B1           1055   ;------------------------------------------------------------
02B1           1056   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:309: void Parallel_Park_Wait_3(void){
02B1           1057   ;        -----------------------------------------
02B1           1058   ;         function Parallel_Park_Wait_3
02B1           1059   ;        -----------------------------------------
02B1           1060   _Parallel_Park_Wait_3:
02B1           1061   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:320: _endasm;
02B1           1062            
02B1           1063      ;For a 22.1184MHz crystal one machine cycle
02B1           1064      ;takes 12/22.1184MHz=0.5425347us
02B1 7A0C      1065                  mov R2, #12
02B3           1066             Lc3:
02B3 79F8      1067            mov R1, #248
02B5           1068             Lc2:
02B5 78B8      1069            mov R0, #184
02B7           1070             Lc1:
02B7 D8B0      1071            djnz R0, Lc1 ; 2 machine cycles-> 2*0.5425347us*184=200us
02B9 D970      1072                  djnz R1, Lc2 ; 200us*250=0.05s
02BB DA30      1073                  djnz R2, Lc3 ; 0.05s*20=50ms
02BD 22        1074                  ret
02BE           1075                
02BE 22        1076            ret
02BF           1077   ;------------------------------------------------------------
02BF           1078   ;Allocation info for local variables in function 'Parallel_Park_Wait_4'
02BF           1079   ;------------------------------------------------------------
02BF           1080   ;------------------------------------------------------------
02BF           1081   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:324: void Parallel_Park_Wait_4(void){
02BF           1082   ;        -----------------------------------------
02BF           1083   ;         function Parallel_Park_Wait_4
02BF           1084   ;        -----------------------------------------
02BF           1085   _Parallel_Park_Wait_4:
02BF           1086   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:335: _endasm;
02BF           1087            
02BF           1088      ;For a 22.1184MHz crystal one machine cycle
02BF           1089      ;takes 12/22.1184MHz=0.5425347us
02BF 7A15      1090                  mov R2, #21
02C1           1091             Ld3:
02C1 79F8      1092            mov R1, #248
02C3           1093             Ld2:
02C3 78B8      1094            mov R0, #184
02C5           1095             Ld1:
02C5 D870      1096            djnz R0, Ld1 ; 2 machine cycles-> 2*0.5425347us*184=200us
02C7 D930      1097                  djnz R1, Ld2 ; 200us*250=0.05s
02C9 DAF0      1098                  djnz R2, Ld3 ; 0.05s*20=50ms
02CB 22        1099                  ret
02CC           1100                
02CC 22        1101            ret
02CD           1102   ;------------------------------------------------------------
02CD           1103   ;Allocation info for local variables in function 'Parallel_Park_Wait_5'
02CD           1104   ;------------------------------------------------------------
02CD           1105   ;------------------------------------------------------------
02CD           1106   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:339: void Parallel_Park_Wait_5(void){
02CD           1107   ;        -----------------------------------------
02CD           1108   ;         function Parallel_Park_Wait_5
02CD           1109   ;        -----------------------------------------
02CD           1110   _Parallel_Park_Wait_5:
02CD           1111   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:350: _endasm;
02CD           1112            
02CD           1113      ;For a 22.1184MHz crystal one machine cycle
02CD           1114      ;takes 12/22.1184MHz=0.5425347us
02CD 7A0D      1115                  mov R2, #13
02CF           1116             Le3:
02CF 79F8      1117            mov R1, #248
02D1           1118             Le2:
02D1 78B8      1119            mov R0, #184
02D3           1120             Le1:
02D3 D830      1121            djnz R0, Le1 ; 2 machine cycles-> 2*0.5425347us*184=200us
02D5 D9F0      1122                  djnz R1, Le2 ; 200us*250=0.05s
02D7 DAB0      1123                  djnz R2, Le3 ; 0.05s*20=50ms
02D9 22        1124                  ret
02DA           1125                
02DA 22        1126            ret
02DB           1127   ;------------------------------------------------------------
02DB           1128   ;Allocation info for local variables in function 'Parallel_Park_Wait_6'
02DB           1129   ;------------------------------------------------------------
02DB           1130   ;------------------------------------------------------------
02DB           1131   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:354: void Parallel_Park_Wait_6(void){
02DB           1132   ;        -----------------------------------------
02DB           1133   ;         function Parallel_Park_Wait_6
02DB           1134   ;        -----------------------------------------
02DB           1135   _Parallel_Park_Wait_6:
02DB           1136   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:365: _endasm;
02DB           1137            
02DB           1138      ;For a 22.1184MHz crystal one machine cycle
02DB           1139      ;takes 12/22.1184MHz=0.5425347us
02DB 7A01      1140                  mov R2, #1
02DD           1141             Lf3:
02DD 79F8      1142            mov R1, #248
02DF           1143             Lf2:
02DF 78B8      1144            mov R0, #184
02E1           1145             Lf1:
02E1 D8F0      1146            djnz R0, Lf1 ; 2 machine cycles-> 2*0.5425347us*184=200us
02E3 D9B0      1147                  djnz R1, Lf2 ; 200us*250=0.05s
02E5 DA70      1148                  djnz R2, Lf3 ; 0.05s*20=50ms
02E7 22        1149                  ret
02E8           1150                
02E8 22        1151            ret
02E9           1152   ;------------------------------------------------------------
02E9           1153   ;Allocation info for local variables in function 'Move_Forwards'
02E9           1154   ;------------------------------------------------------------
02E9           1155   ;------------------------------------------------------------
02E9           1156   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:370: void Move_Forwards(void){
02E9           1157   ;        -----------------------------------------
02E9           1158   ;         function Move_Forwards
02E9           1159   ;        -----------------------------------------
02E9           1160   _Move_Forwards:
02E9           1161   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:371: Move_Right_Motor_Forwards();
02E9 120100    1162            lcall   _Move_Right_Motor_Forwards
02EC           1163   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:372: Move_Left_Motor_Forwards();
02EC 020100    1164            ljmp    _Move_Left_Motor_Forwards
02EF           1165   ;------------------------------------------------------------
02EF           1166   ;Allocation info for local variables in function 'Parallel_Park'
02EF           1167   ;------------------------------------------------------------
02EF           1168   ;------------------------------------------------------------
02EF           1169   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:376: void Parallel_Park(void){
02EF           1170   ;        -----------------------------------------
02EF           1171   ;         function Parallel_Park
02EF           1172   ;        -----------------------------------------
02EF           1173   _Parallel_Park:
02EF           1174   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:377: return;
02EF           1175   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:395: Parallel_Park_Wait_6();
02EF 22        1176            ret
02F0           1177   ;------------------------------------------------------------
02F0           1178   ;Allocation info for local variables in function 'Undo_Parallel_Park'
02F0           1179   ;------------------------------------------------------------
02F0           1180   ;------------------------------------------------------------
02F0           1181   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:399: void Undo_Parallel_Park (void){
02F0           1182   ;        -----------------------------------------
02F0           1183   ;         function Undo_Parallel_Park
02F0           1184   ;        -----------------------------------------
02F0           1185   _Undo_Parallel_Park:
02F0           1186   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:400: Turn_Car_Left();
02F0 120100    1187            lcall   _Turn_Car_Left
02F3           1188   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:401: Parallel_Park_Wait_3();
02F3 120100    1189            lcall   _Parallel_Park_Wait_3
02F6           1190   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:403: Move_Backwards();
02F6 120100    1191            lcall   _Move_Backwards
02F9           1192   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:404: Parallel_Park_Wait_4();
02F9 120100    1193            lcall   _Parallel_Park_Wait_4
02FC           1194   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:406: Stop_Car();
02FC 120100    1195            lcall   _Stop_Car
02FF           1196   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:407: Turn_Car_Right();
02FF 120100    1197            lcall   _Turn_Car_Right
0302           1198   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:408: Parallel_Park_Wait_3();
0302 120100    1199            lcall   _Parallel_Park_Wait_3
0305           1200   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:410: Move_Backwards();
0305 120100    1201            lcall   _Move_Backwards
0308           1202   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:411: Parallel_Park_Wait_1();
0308 120100    1203            lcall   _Parallel_Park_Wait_1
030B           1204   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:413: Stop_Car();
030B 120100    1205            lcall   _Stop_Car
030E           1206   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:414: Parallel_Park_Wait_5();
030E 120100    1207            lcall   _Parallel_Park_Wait_5
0311           1208   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:416: Stop_Car();
0311 120100    1209            lcall   _Stop_Car
0314           1210   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:417: Parallel_Park_Wait_6();
0314 020100    1211            ljmp    _Parallel_Park_Wait_6
0317           1212   ;------------------------------------------------------------
0317           1213   ;Allocation info for local variables in function 'Turn_Car_Left'
0317           1214   ;------------------------------------------------------------
0317           1215   ;------------------------------------------------------------
0317           1216   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:423: void Turn_Car_Left(void){
0317           1217   ;        -----------------------------------------
0317           1218   ;         function Turn_Car_Left
0317           1219   ;        -----------------------------------------
0317           1220   _Turn_Car_Left:
0317           1221   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:424: Move_Right_Motor_Backwards();
0317 020100    1222            ljmp    _Move_Right_Motor_Backwards
031A           1223   ;------------------------------------------------------------
031A           1224   ;Allocation info for local variables in function 'Turn_Car_Right'
031A           1225   ;------------------------------------------------------------
031A           1226   ;------------------------------------------------------------
031A           1227   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:430: void Turn_Car_Right(void){
031A           1228   ;        -----------------------------------------
031A           1229   ;         function Turn_Car_Right
031A           1230   ;        -----------------------------------------
031A           1231   _Turn_Car_Right:
031A           1232   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:431: Move_Left_Motor_Backwards(); //Same thoughts as above, (in Turn_Car_Left)
031A 020100    1233            ljmp    _Move_Left_Motor_Backwards
031D           1234   ;------------------------------------------------------------
031D           1235   ;Allocation info for local variables in function 'Move_Backwards'
031D           1236   ;------------------------------------------------------------
031D           1237   ;------------------------------------------------------------
031D           1238   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:436: void Move_Backwards(void){
031D           1239   ;        -----------------------------------------
031D           1240   ;         function Move_Backwards
031D           1241   ;        -----------------------------------------
031D           1242   _Move_Backwards:
031D           1243   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:437: Move_Right_Motor_Backwards();
031D 120100    1244            lcall   _Move_Right_Motor_Backwards
0320           1245   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:438: Move_Left_Motor_Backwards();
0320 020100    1246            ljmp    _Move_Left_Motor_Backwards
0323           1247   ;------------------------------------------------------------
0323           1248   ;Allocation info for local variables in function 'Move_Car_Closer'
0323           1249   ;------------------------------------------------------------
0323           1250   ;------------------------------------------------------------
0323           1251   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:444: void Move_Car_Closer(void){
0323           1252   ;        -----------------------------------------
0323           1253   ;         function Move_Car_Closer
0323           1254   ;        -----------------------------------------
0323           1255   _Move_Car_Closer:
0323           1256   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:447: if(dist_index > 0) dist_index--;
0323 C3        1257            clr     c
0324 E4        1258            clr     a
0325 9500      1259            subb    a,_dist_index
0327 E4        1260            clr     a
0328 6480      1261            xrl     a,#0x80
032A 8501F0    1262            mov     b,(_dist_index + 1)
032D 63F080    1263            xrl     b,#0x80
0330 95F0      1264            subb    a,b
0332 5001      1265            jnc     L030003?
0334 1500      1266            dec     _dist_index
0336 74FF      1267            mov     a,#0xff
0338 B50070    1268            cjne    a,_dist_index,L030007?
033B 1501      1269            dec     (_dist_index + 1)
033D           1270   L030007?:
033D           1271   L030003?:
033D 22        1272            ret
033E           1273   ;------------------------------------------------------------
033E           1274   ;Allocation info for local variables in function 'Move_Car_Further'
033E           1275   ;------------------------------------------------------------
033E           1276   ;------------------------------------------------------------
033E           1277   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:453: void Move_Car_Further(void){
033E           1278   ;        -----------------------------------------
033E           1279   ;         function Move_Car_Further
033E           1280   ;        -----------------------------------------
033E           1281   _Move_Car_Further:
033E           1282   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:456: if(dist_index < 3) dist_index++;
033E C3        1283            clr     c
033F E500      1284            mov     a,_dist_index
0341 9403      1285            subb    a,#0x03
0343 E501      1286            mov     a,(_dist_index + 1)
0345 6480      1287            xrl     a,#0x80
0347 9480      1288            subb    a,#0x80
0349 5001      1289            jnc     L031003?
034B 0500      1290            inc     _dist_index
034D E4        1291            clr     a
034E B500F0    1292            cjne    a,_dist_index,L031007?
0351 0501      1293            inc     (_dist_index + 1)
0353           1294   L031007?:
0353           1295   L031003?:
0353 22        1296            ret
0354           1297   ;------------------------------------------------------------
0354           1298   ;Allocation info for local variables in function 'Rotate_Car_180_CW'
0354           1299   ;------------------------------------------------------------
0354           1300   ;------------------------------------------------------------
0354           1301   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:460: void Rotate_Car_180_CW(void){
0354           1302   ;        -----------------------------------------
0354           1303   ;         function Rotate_Car_180_CW
0354           1304   ;        -----------------------------------------
0354           1305   _Rotate_Car_180_CW:
0354           1306   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:461: Turn_Car_Right();
0354 120100    1307            lcall   _Turn_Car_Right
0357           1308   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:462: Wait_X_Time(2000); //wait 2000 ms
0357 9007D0    1309            mov     dptr,#0x07D0
035A 120100    1310            lcall   _Wait_X_Time
035D           1311   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:463: Stop_Car();
035D 120100    1312            lcall   _Stop_Car
0360           1313   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:465: if(reverse == 0){
0360 E5C0      1314            mov     a,_reverse
0362 7001      1315            jnz     L032002?
0364           1316   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:466: reverse = 1;
0364 75C001    1317            mov     _reverse,#0x01
0367           1318   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:468: reverse = 0;
0367 22        1319            ret
0368           1320   L032002?:
0368 75C000    1321            mov     _reverse,#0x00
036B 22        1322            ret
036C           1323   ;------------------------------------------------------------
036C           1324   ;Allocation info for local variables in function 'Rotate_Car_180_CCW'
036C           1325   ;------------------------------------------------------------
036C           1326   ;------------------------------------------------------------
036C           1327   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:475: void Rotate_Car_180_CCW(void){
036C           1328   ;        -----------------------------------------
036C           1329   ;         function Rotate_Car_180_CCW
036C           1330   ;        -----------------------------------------
036C           1331   _Rotate_Car_180_CCW:
036C           1332   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:476: Turn_Car_Left(); // changed turn left logic make rotate car easily reverseable
036C 120100    1333            lcall   _Turn_Car_Left
036F           1334   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:477: Wait_X_Time(2000); //wait 2000 ms
036F 9007D0    1335            mov     dptr,#0x07D0
0372 120100    1336            lcall   _Wait_X_Time
0375           1337   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:478: Stop_Car();
0375 120100    1338            lcall   _Stop_Car
0378           1339   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:480: if(reverse == 0){
0378 E5C0      1340            mov     a,_reverse
037A 7001      1341            jnz     L033002?
037C           1342   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:481: reverse = 1;
037C 75C001    1343            mov     _reverse,#0x01
037F           1344   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:483: reverse = 0;
037F 22        1345            ret
0380           1346   L033002?:
0380 75C000    1347            mov     _reverse,#0x00
0383 22        1348            ret
0384           1349   ;------------------------------------------------------------
0384           1350   ;Allocation info for local variables in function 'rx_byte'
0384           1351   ;------------------------------------------------------------
0384           1352   ;min                       Allocated to registers r2 r3 
0384           1353   ;j                         Allocated to registers r5 
0384           1354   ;val                       Allocated to registers r4 
0384           1355   ;v                         Allocated to registers r6 r7 
0384           1356   ;------------------------------------------------------------
0384           1357   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:491: unsigned char rx_byte (int min){
0384           1358   ;        -----------------------------------------
0384           1359   ;         function rx_byte
0384           1360   ;        -----------------------------------------
0384           1361   _rx_byte:
0384 AA82      1362            mov     r2,dpl
0386 AB83      1363            mov     r3,dph
0388           1364   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:496: EA = 0;
0388 C2AF      1365            clr     _EA
038A           1366   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:497: P1_0 = 0;
038A C290      1367            clr     _P1_0
038C           1368   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:498: P1_1 = 0;
038C C291      1369            clr     _P1_1
038E           1370   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:499: P1_2 = 0;
038E C292      1371            clr     _P1_2
0390           1372   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:500: P1_4 = 0;
0390 C294      1373            clr     _P1_4
0392           1374   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:503: val=0;
0392 7C00      1375            mov     r4,#0x00
0394           1376   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:504: wait_one_and_half_bit_time();
0394 C002      1377            push    ar2
0396 C003      1378            push    ar3
0398 C004      1379            push    ar4
039A 120100    1380            lcall   _wait_one_and_half_bit_time
039D D004      1381            pop     ar4
039F D003      1382            pop     ar3
03A1 D002      1383            pop     ar2
03A3           1384   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:505: for(j=0; j<8; j++)
03A3 7D00      1385            mov     r5,#0x00
03A5           1386   L034001?:
03A5 BD08F0    1387            cjne    r5,#0x08,L034013?
03A8           1388   L034013?:
03A8 5001      1389            jnc     L034004?
03AA           1390   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:507: v=GetADC(2);
03AA 758202    1391            mov     dpl,#0x02
03AD C002      1392            push    ar2
03AF C003      1393            push    ar3
03B1 C004      1394            push    ar4
03B3 C005      1395            push    ar5
03B5 120100    1396            lcall   _GetADC
03B8 AE82      1397            mov     r6,dpl
03BA AF83      1398            mov     r7,dph
03BC D005      1399            pop     ar5
03BE D004      1400            pop     ar4
03C0 D003      1401            pop     ar3
03C2 D002      1402            pop     ar2
03C4           1403   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:508: val|=(v>min)?(0x01<<j):0x00; // min is threshold voltage but in our case it is 1023
03C4 C3        1404            clr     c
03C5 EA        1405            mov     a,r2
03C6 9E        1406            subb    a,r6
03C7 EB        1407            mov     a,r3
03C8 6480      1408            xrl     a,#0x80
03CA 8FF0      1409            mov     b,r7
03CC 63F080    1410            xrl     b,#0x80
03CF 95F0      1411            subb    a,b
03D1 5001      1412            jnc     L034007?
03D3 8DF0      1413            mov     b,r5
03D5 05F0      1414            inc     b
03D7 7401      1415            mov     a,#0x01
03D9 8001      1416            sjmp    L034018?
03DB           1417   L034016?:
03DB 25E0      1418            add     a,acc
03DD           1419   L034018?:
03DD D5F0F0    1420            djnz    b,L034016?
03E0 FE        1421            mov     r6,a
03E1 8001      1422            sjmp    L034008?
03E3           1423   L034007?:
03E3 7E00      1424            mov     r6,#0x00
03E5           1425   L034008?:
03E5 EE        1426            mov     a,r6
03E6 4204      1427            orl     ar4,a
03E8           1428   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:509: wait_bit_time();
03E8 C002      1429            push    ar2
03EA C003      1430            push    ar3
03EC C004      1431            push    ar4
03EE C005      1432            push    ar5
03F0 120100    1433            lcall   _wait_bit_time
03F3 D005      1434            pop     ar5
03F5 D004      1435            pop     ar4
03F7 D003      1436            pop     ar3
03F9 D002      1437            pop     ar2
03FB           1438   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:505: for(j=0; j<8; j++)
03FB 0D        1439            inc     r5
03FC 8001      1440            sjmp    L034001?
03FE           1441   L034004?:
03FE           1442   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:512: wait_one_and_half_bit_time();
03FE C004      1443            push    ar4
0400 120100    1444            lcall   _wait_one_and_half_bit_time
0403 D004      1445            pop     ar4
0405           1446   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:513: EA = 1;
0405 D2AF      1447            setb    _EA
0407           1448   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:514: return val;
0407 8C82      1449            mov     dpl,r4
0409 22        1450            ret
040A           1451   ;------------------------------------------------------------
040A           1452   ;Allocation info for local variables in function 'wait_bit_time'
040A           1453   ;------------------------------------------------------------
040A           1454   ;------------------------------------------------------------
040A           1455   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:519: void wait_bit_time(void){
040A           1456   ;        -----------------------------------------
040A           1457   ;         function wait_bit_time
040A           1458   ;        -----------------------------------------
040A           1459   _wait_bit_time:
040A           1460   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:530: _endasm;
040A           1461            
040A           1462     ;For a 22.1184MHz crystal one machine cycle
040A           1463     ;takes 12/22.1184MHz=0.5425347us
040A 7A02      1464                 mov R2, #2
040C           1465             L3:
040C 797C      1466            mov R1, #124
040E           1467             L2:
040E 78B8      1468            mov R0, #184
0410           1469             L1:
0410 D8F0      1470            djnz R0, L1 ; 2 machine cycles-> 2*0.5425347us*184=200us
0412 D9B0      1471                 djnz R1, L2 ; 200us*250=0.05s
0414 DA70      1472                 djnz R2, L3 ; 0.05s*2=100ms
0416 22        1473                 ret
0417           1474                
0417 22        1475            ret
0418           1476   ;------------------------------------------------------------
0418           1477   ;Allocation info for local variables in function 'wait_one_and_half_bit_time'
0418           1478   ;------------------------------------------------------------
0418           1479   ;------------------------------------------------------------
0418           1480   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:534: void wait_one_and_half_bit_time(void){
0418           1481   ;        -----------------------------------------
0418           1482   ;         function wait_one_and_half_bit_time
0418           1483   ;        -----------------------------------------
0418           1484   _wait_one_and_half_bit_time:
0418           1485   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:545: _endasm;
0418           1486            
0418           1487     ;For a 22.1184MHz crystal one machine cycle
0418           1488     ;takes 12/22.1184MHz=0.5425347us
0418 7A03      1489                 mov R2, #3
041A           1490             L6:
041A 797C      1491            mov R1, #124
041C           1492             L5:
041C 78B8      1493            mov R0, #184
041E           1494             L4:
041E D8B0      1495            djnz R0, L4 ; 2 machine cycles-> 2*0.5425347us*184=200us
0420 D970      1496                 djnz R1, L5 ; 200us*250=0.05s
0422 DA30      1497                 djnz R2, L6 ; 0.05s*3=150ms
0424 22        1498                 ret
0425           1499                
0425 22        1500            ret
0426           1501   ;------------------------------------------------------------
0426           1502   ;Allocation info for local variables in function 'SPIWrite'
0426           1503   ;------------------------------------------------------------
0426           1504   ;value                     Allocated to registers r2 
0426           1505   ;------------------------------------------------------------
0426           1506   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:549: void SPIWrite(unsigned char value){
0426           1507   ;        -----------------------------------------
0426           1508   ;         function SPIWrite
0426           1509   ;        -----------------------------------------
0426           1510   _SPIWrite:
0426 AA82      1511            mov     r2,dpl
0428           1512   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:550: SPSTA&=(~SPIF); // Clear the SPIF flag in SPSTA
0428 53C47F    1513            anl     _SPSTA,#0x7F
042B           1514   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:551: SPDAT=value;
042B 8AC5      1515            mov     _SPDAT,r2
042D           1516   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:552: while((SPSTA & SPIF)!=SPIF); //Wait for transmission to end
042D           1517   L037001?:
042D 7480      1518            mov     a,#0x80
042F 55C4      1519            anl     a,_SPSTA
0431 FA        1520            mov     r2,a
0432 BA80F0    1521            cjne    r2,#0x80,L037001?
0435 22        1522            ret
0436           1523   ;------------------------------------------------------------
0436           1524   ;Allocation info for local variables in function 'GetADC'
0436           1525   ;------------------------------------------------------------
0436           1526   ;channel                   Allocated to registers r2 
0436           1527   ;adc                       Allocated to registers r2 r3 
0436           1528   ;------------------------------------------------------------
0436           1529   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:556: unsigned int GetADC(unsigned char channel){
0436           1530   ;        -----------------------------------------
0436           1531   ;         function GetADC
0436           1532   ;        -----------------------------------------
0436           1533   _GetADC:
0436 AA82      1534            mov     r2,dpl
0438           1535   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:560: SPCON&=(~SPEN); // Disable SPI
0438 53C3BF    1536            anl     _SPCON,#0xBF
043B           1537   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:561: SPCON=MSTR|CPOL|CPHA|SPR1|SPR0|SSDIS;
043B 75C33F    1538            mov     _SPCON,#0x3F
043E           1539   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:562: SPCON|=SPEN; // Enable SPI
043E 43C340    1540            orl     _SPCON,#0x40
0441           1541   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:564: P4_1=0; // Activate the MCP3004 ADC.
0441 C2C1      1542            clr     _P4_1
0443           1543   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:565: SPIWrite(channel|0x18);         // Send start bit, single/diff* bit, D2, D1, and D0 bits.
0443 7418      1544            mov     a,#0x18
0445 4A        1545            orl     a,r2
0446 F582      1546            mov     dpl,a
0448 120100    1547            lcall   _SPIWrite
044B           1548   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:566: for(adc=0; adc<10; adc++); // Wait for S/H to setup
044B 7A0A      1549            mov     r2,#0x0A
044D 7B00      1550            mov     r3,#0x00
044F           1551   L038003?:
044F 1A        1552            dec     r2
0450 BAFF70    1553            cjne    r2,#0xff,L038009?
0453 1B        1554            dec     r3
0454           1555   L038009?:
0454 EA        1556            mov     a,r2
0455 4B        1557            orl     a,r3
0456 7001      1558            jnz     L038003?
0458           1559   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:567: SPIWrite(0x55); // Read bits 9 down to 4
0458 758255    1560            mov     dpl,#0x55
045B 120100    1561            lcall   _SPIWrite
045E           1562   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:568: adc=((SPDAT&0x3f)*0x100);
045E 743F      1563            mov     a,#0x3F
0460 55C5      1564            anl     a,_SPDAT
0462 FB        1565            mov     r3,a
0463 7A00      1566            mov     r2,#0x00
0465           1567   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:569: SPIWrite(0x55);// Read bits 3 down to 0
0465 758255    1568            mov     dpl,#0x55
0468 C002      1569            push    ar2
046A C003      1570            push    ar3
046C 120100    1571            lcall   _SPIWrite
046F D003      1572            pop     ar3
0471 D002      1573            pop     ar2
0473           1574   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:570: P4_1=1; // Deactivate the MCP3004 ADC.
0473 D2C1      1575            setb    _P4_1
0475           1576   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:571: adc+=(SPDAT&0xf0); // SPDR contains the low part of the result. 
0475 74F0      1577            mov     a,#0xF0
0477 55C5      1578            anl     a,_SPDAT
0479 FC        1579            mov     r4,a
047A 7D00      1580            mov     r5,#0x00
047C EC        1581            mov     a,r4
047D 2A        1582            add     a,r2
047E FA        1583            mov     r2,a
047F ED        1584            mov     a,r5
0480 3B        1585            addc    a,r3
0481           1586   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:572: adc>>=4;
0481 C4        1587            swap    a
0482 CA        1588            xch     a,r2
0483 C4        1589            swap    a
0484 540F      1590            anl     a,#0x0f
0486 6A        1591            xrl     a,r2
0487 CA        1592            xch     a,r2
0488 540F      1593            anl     a,#0x0f
048A CA        1594            xch     a,r2
048B 6A        1595            xrl     a,r2
048C CA        1596            xch     a,r2
048D           1597   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:574: return adc;
048D 8A82      1598            mov     dpl,r2
048F F583      1599            mov     dph,a
0491 22        1600            ret
0492           1601   ;------------------------------------------------------------
0492           1602   ;Allocation info for local variables in function 'Testing_Code'
0492           1603   ;------------------------------------------------------------
0492           1604   ;right                     Allocated to registers r3 r4 
0492           1605   ;left                      Allocated to registers r5 r6 
0492           1606   ;cmd                       Allocated to registers r2 
0492           1607   ;------------------------------------------------------------
0492           1608   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:595: void Testing_Code(void){
0492           1609   ;        -----------------------------------------
0492           1610   ;         function Testing_Code
0492           1611   ;        -----------------------------------------
0492           1612   _Testing_Code:
0492           1613   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:598: unsigned char cmd = 0;
0492 7A00      1614            mov     r2,#0x00
0494           1615   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:600: while(1){
0494           1616   L039012?:
0494           1617   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:614: run();
0494 C002      1618            push    ar2
0496 120100    1619            lcall   _run
0499           1620   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:615: right = Get_Right_Distance();
0499 120100    1621            lcall   _Get_Right_Distance
049C AB82      1622            mov     r3,dpl
049E AC83      1623            mov     r4,dph
04A0           1624   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:616: left = Get_Left_Distance();
04A0 C003      1625            push    ar3
04A2 C004      1626            push    ar4
04A4 120100    1627            lcall   _Get_Left_Distance
04A7 AD82      1628            mov     r5,dpl
04A9 AE83      1629            mov     r6,dph
04AB D004      1630            pop     ar4
04AD D003      1631            pop     ar3
04AF D002      1632            pop     ar2
04B1           1633   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:618: if(left < 20){
04B1 C3        1634            clr     c
04B2 ED        1635            mov     a,r5
04B3 9414      1636            subb    a,#0x14
04B5 EE        1637            mov     a,r6
04B6 9400      1638            subb    a,#0x00
04B8 4001      1639            jc      L039022?
04BA 020100    1640            ljmp    L039010?
04BD           1641   L039022?:
04BD           1642   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:619: cmd = rx_byte (20);             
04BD 900014    1643            mov     dptr,#0x0014
04C0 C003      1644            push    ar3
04C2 C004      1645            push    ar4
04C4 C005      1646            push    ar5
04C6 C006      1647            push    ar6
04C8 120100    1648            lcall   _rx_byte
04CB AA82      1649            mov     r2,dpl
04CD D006      1650            pop     ar6
04CF D005      1651            pop     ar5
04D1 D004      1652            pop     ar4
04D3 D003      1653            pop     ar3
04D5           1654   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:620: if(cmd == MOVE_FURTHER) Move_Car_Further();
04D5 BAFD70    1655            cjne    r2,#0xFD,L039002?
04D8 C002      1656            push    ar2
04DA C003      1657            push    ar3
04DC C004      1658            push    ar4
04DE C005      1659            push    ar5
04E0 C006      1660            push    ar6
04E2 120100    1661            lcall   _Move_Car_Further
04E5 D006      1662            pop     ar6
04E7 D005      1663            pop     ar5
04E9 D004      1664            pop     ar4
04EB D003      1665            pop     ar3
04ED D002      1666            pop     ar2
04EF           1667   L039002?:
04EF           1668   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:621: if(cmd == MOVE_CLOSER) Move_Car_Closer();
04EF BAF5B0    1669            cjne    r2,#0xF5,L039004?
04F2 C002      1670            push    ar2
04F4 C003      1671            push    ar3
04F6 C004      1672            push    ar4
04F8 C005      1673            push    ar5
04FA C006      1674            push    ar6
04FC 120100    1675            lcall   _Move_Car_Closer
04FF D006      1676            pop     ar6
0501 D005      1677            pop     ar5
0503 D004      1678            pop     ar4
0505 D003      1679            pop     ar3
0507 D002      1680            pop     ar2
0509           1681   L039004?:
0509           1682   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:622: if(cmd == ROTATE_180) Rotate_Car_180_CW();
0509 BAD5F0    1683            cjne    r2,#0xD5,L039006?
050C C002      1684            push    ar2
050E C003      1685            push    ar3
0510 C004      1686            push    ar4
0512 C005      1687            push    ar5
0514 C006      1688            push    ar6
0516 120100    1689            lcall   _Rotate_Car_180_CW
0519 D006      1690            pop     ar6
051B D005      1691            pop     ar5
051D D004      1692            pop     ar4
051F D003      1693            pop     ar3
0521 D002      1694            pop     ar2
0523           1695   L039006?:
0523           1696   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:623: if(cmd == PRL_PARK) Parallel_Park();
0523 BA8030    1697            cjne    r2,#0x80,L039010?
0526 C002      1698            push    ar2
0528 C003      1699            push    ar3
052A C004      1700            push    ar4
052C C005      1701            push    ar5
052E C006      1702            push    ar6
0530 120100    1703            lcall   _Parallel_Park
0533 D006      1704            pop     ar6
0535 D005      1705            pop     ar5
0537 D004      1706            pop     ar4
0539 D003      1707            pop     ar3
053B D002      1708            pop     ar2
053D           1709   L039010?:
053D           1710   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:626: printf("right = %u, left = %u, cmd = %u \n", right, left, cmd);         
053D 8A07      1711            mov     ar7,r2
053F 7800      1712            mov     r0,#0x00
0541 C002      1713            push    ar2
0543 C007      1714            push    ar7
0545 C000      1715            push    ar0
0547 C005      1716            push    ar5
0549 C006      1717            push    ar6
054B C003      1718            push    ar3
054D C004      1719            push    ar4
054F 7430      1720            mov     a,#__str_5
0551 C0E0      1721            push    acc
0553 74A1      1722            mov     a,#(__str_5 >> 8)
0555 C0E0      1723            push    acc
0557 7480      1724            mov     a,#0x80
0559 C0E0      1725            push    acc
055B 120100    1726            lcall   _printf
055E E581      1727            mov     a,sp
0560 24F7      1728            add     a,#0xf7
0562 F581      1729            mov     sp,a
0564 D002      1730            pop     ar2
0566 020100    1731            ljmp    L039012?
0569           1732   ;------------------------------------------------------------
0569           1733   ;Allocation info for local variables in function 'run'
0569           1734   ;------------------------------------------------------------
0569           1735   ;right_distance            Allocated to registers r2 r3 
0569           1736   ;left_distance             Allocated to registers r4 r5 
0569           1737   ;------------------------------------------------------------
0569           1738   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:630: void run(void){
0569           1739   ;        -----------------------------------------
0569           1740   ;         function run
0569           1741   ;        -----------------------------------------
0569           1742   _run:
0569           1743   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:631: unsigned int right_distance = Get_Right_Distance();
0569 120100    1744            lcall   _Get_Right_Distance
056C AA82      1745            mov     r2,dpl
056E AB83      1746            mov     r3,dph
0570           1747   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:632: unsigned int left_distance = Get_Left_Distance();
0570 C002      1748            push    ar2
0572 C003      1749            push    ar3
0574 120100    1750            lcall   _Get_Left_Distance
0577 AC82      1751            mov     r4,dpl
0579 AD83      1752            mov     r5,dph
057B D003      1753            pop     ar3
057D D002      1754            pop     ar2
057F           1755   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:634: if(!reverse) {
057F E5C0      1756            mov     a,_reverse
0581 6001      1757            jz      L040047?
0583 020100    1758            ljmp    L040030?
0586           1759   L040047?:
0586           1760   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:635: if (abs(right_distance - dist_table[dist_index]) >= ERROR_BOUND){
0586 E500      1761            mov     a,_dist_index
0588 2500      1762            add     a,_dist_index
058A FE        1763            mov     r6,a
058B E501      1764            mov     a,(_dist_index + 1)
058D 33        1765            rlc     a
058E EE        1766            mov     a,r6
058F 2440      1767            add     a,#_dist_table
0591 F8        1768            mov     r0,a
0592 8606      1769            mov     ar6,@r0
0594 08        1770            inc     r0
0595 8607      1771            mov     ar7,@r0
0597 EA        1772            mov     a,r2
0598 C3        1773            clr     c
0599 9E        1774            subb    a,r6
059A F582      1775            mov     dpl,a
059C EB        1776            mov     a,r3
059D 9F        1777            subb    a,r7
059E F583      1778            mov     dph,a
05A0 C002      1779            push    ar2
05A2 C003      1780            push    ar3
05A4 C004      1781            push    ar4
05A6 C005      1782            push    ar5
05A8 120100    1783            lcall   _abs
05AB AE82      1784            mov     r6,dpl
05AD AF83      1785            mov     r7,dph
05AF D005      1786            pop     ar5
05B1 D004      1787            pop     ar4
05B3 D003      1788            pop     ar3
05B5 D002      1789            pop     ar2
05B7 C3        1790            clr     c
05B8 EE        1791            mov     a,r6
05B9 9414      1792            subb    a,#0x14
05BB EF        1793            mov     a,r7
05BC 6480      1794            xrl     a,#0x80
05BE 9480      1795            subb    a,#0x80
05C0 4001      1796            jc      L040006?
05C2           1797   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:636: if (right_distance > dist_table[dist_index]){
05C2 E500      1798            mov     a,_dist_index
05C4 2500      1799            add     a,_dist_index
05C6 FE        1800            mov     r6,a
05C7 E501      1801            mov     a,(_dist_index + 1)
05C9 33        1802            rlc     a
05CA EE        1803            mov     a,r6
05CB 2440      1804            add     a,#_dist_table
05CD F8        1805            mov     r0,a
05CE 8606      1806            mov     ar6,@r0
05D0 08        1807            inc     r0
05D1 8607      1808            mov     ar7,@r0
05D3 C3        1809            clr     c
05D4 EE        1810            mov     a,r6
05D5 9A        1811            subb    a,r2
05D6 EF        1812            mov     a,r7
05D7 9B        1813            subb    a,r3
05D8 5001      1814            jnc     L040002?
05DA           1815   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:637: Move_Right_Motor_Forwards();
05DA C002      1816            push    ar2
05DC C003      1817            push    ar3
05DE C004      1818            push    ar4
05E0 C005      1819            push    ar5
05E2 120100    1820            lcall   _Move_Right_Motor_Forwards
05E5 D005      1821            pop     ar5
05E7 D004      1822            pop     ar4
05E9 D003      1823            pop     ar3
05EB D002      1824            pop     ar2
05ED           1825   L040002?:
05ED           1826   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:639: if (right_distance < dist_table[dist_index]){
05ED E500      1827            mov     a,_dist_index
05EF 2500      1828            add     a,_dist_index
05F1 FE        1829            mov     r6,a
05F2 E501      1830            mov     a,(_dist_index + 1)
05F4 33        1831            rlc     a
05F5 EE        1832            mov     a,r6
05F6 2440      1833            add     a,#_dist_table
05F8 F8        1834            mov     r0,a
05F9 8606      1835            mov     ar6,@r0
05FB 08        1836            inc     r0
05FC 8607      1837            mov     ar7,@r0
05FE C3        1838            clr     c
05FF EA        1839            mov     a,r2
0600 9E        1840            subb    a,r6
0601 EB        1841            mov     a,r3
0602 9F        1842            subb    a,r7
0603 5001      1843            jnc     L040007?
0605           1844   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:640: Move_Right_Motor_Backwards();
0605 C004      1845            push    ar4
0607 C005      1846            push    ar5
0609 120100    1847            lcall   _Move_Right_Motor_Backwards
060C D005      1848            pop     ar5
060E D004      1849            pop     ar4
0610 8001      1850            sjmp    L040007?
0612           1851   L040006?:
0612           1852   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:644: Stop_Car();
0612 C004      1853            push    ar4
0614 C005      1854            push    ar5
0616 120100    1855            lcall   _Stop_Car
0619 D005      1856            pop     ar5
061B D004      1857            pop     ar4
061D           1858   L040007?:
061D           1859   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:646: if (abs(left_distance - dist_table[dist_index]) >= ERROR_BOUND){
061D E500      1860            mov     a,_dist_index
061F 2500      1861            add     a,_dist_index
0621 FE        1862            mov     r6,a
0622 E501      1863            mov     a,(_dist_index + 1)
0624 33        1864            rlc     a
0625 EE        1865            mov     a,r6
0626 2440      1866            add     a,#_dist_table
0628 F8        1867            mov     r0,a
0629 8606      1868            mov     ar6,@r0
062B 08        1869            inc     r0
062C 8607      1870            mov     ar7,@r0
062E EC        1871            mov     a,r4
062F C3        1872            clr     c
0630 9E        1873            subb    a,r6
0631 F582      1874            mov     dpl,a
0633 ED        1875            mov     a,r5
0634 9F        1876            subb    a,r7
0635 F583      1877            mov     dph,a
0637 C004      1878            push    ar4
0639 C005      1879            push    ar5
063B 120100    1880            lcall   _abs
063E AE82      1881            mov     r6,dpl
0640 AF83      1882            mov     r7,dph
0642 D005      1883            pop     ar5
0644 D004      1884            pop     ar4
0646 C3        1885            clr     c
0647 EE        1886            mov     a,r6
0648 9414      1887            subb    a,#0x14
064A EF        1888            mov     a,r7
064B 6480      1889            xrl     a,#0x80
064D 9480      1890            subb    a,#0x80
064F 4001      1891            jc      L040013?
0651           1892   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:647: if (left_distance > dist_table[dist_index]){
0651 E500      1893            mov     a,_dist_index
0653 2500      1894            add     a,_dist_index
0655 FE        1895            mov     r6,a
0656 E501      1896            mov     a,(_dist_index + 1)
0658 33        1897            rlc     a
0659 EE        1898            mov     a,r6
065A 2440      1899            add     a,#_dist_table
065C F8        1900            mov     r0,a
065D 8606      1901            mov     ar6,@r0
065F 08        1902            inc     r0
0660 8607      1903            mov     ar7,@r0
0662 C3        1904            clr     c
0663 EE        1905            mov     a,r6
0664 9C        1906            subb    a,r4
0665 EF        1907            mov     a,r7
0666 9D        1908            subb    a,r5
0667 5001      1909            jnc     L040009?
0669           1910   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:648: Move_Left_Motor_Forwards();
0669 C004      1911            push    ar4
066B C005      1912            push    ar5
066D 120100    1913            lcall   _Move_Left_Motor_Forwards
0670 D005      1914            pop     ar5
0672 D004      1915            pop     ar4
0674           1916   L040009?:
0674           1917   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:650: if (left_distance < dist_table[dist_index]){
0674 E500      1918            mov     a,_dist_index
0676 2500      1919            add     a,_dist_index
0678 FE        1920            mov     r6,a
0679 E501      1921            mov     a,(_dist_index + 1)
067B 33        1922            rlc     a
067C EE        1923            mov     a,r6
067D 2440      1924            add     a,#_dist_table
067F F8        1925            mov     r0,a
0680 8606      1926            mov     ar6,@r0
0682 08        1927            inc     r0
0683 8607      1928            mov     ar7,@r0
0685 C3        1929            clr     c
0686 EC        1930            mov     a,r4
0687 9E        1931            subb    a,r6
0688 ED        1932            mov     a,r5
0689 9F        1933            subb    a,r7
068A 4001      1934            jc      L040053?
068C 22        1935            ret
068D           1936   L040053?:
068D           1937   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:651: Move_Left_Motor_Backwards();
068D 020100    1938            ljmp    _Move_Left_Motor_Backwards
0690           1939   L040013?:
0690           1940   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:655: Stop_Car();
0690 020100    1941            ljmp    _Stop_Car
0693           1942   L040030?:
0693           1943   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:658: if (abs(right_distance - dist_table[dist_index]) >= ERROR_BOUND){
0693 E500      1944            mov     a,_dist_index
0695 2500      1945            add     a,_dist_index
0697 FE        1946            mov     r6,a
0698 E501      1947            mov     a,(_dist_index + 1)
069A 33        1948            rlc     a
069B EE        1949            mov     a,r6
069C 2440      1950            add     a,#_dist_table
069E F8        1951            mov     r0,a
069F 8606      1952            mov     ar6,@r0
06A1 08        1953            inc     r0
06A2 8607      1954            mov     ar7,@r0
06A4 EA        1955            mov     a,r2
06A5 C3        1956            clr     c
06A6 9E        1957            subb    a,r6
06A7 F582      1958            mov     dpl,a
06A9 EB        1959            mov     a,r3
06AA 9F        1960            subb    a,r7
06AB F583      1961            mov     dph,a
06AD C002      1962            push    ar2
06AF C003      1963            push    ar3
06B1 C004      1964            push    ar4
06B3 C005      1965            push    ar5
06B5 120100    1966            lcall   _abs
06B8 AE82      1967            mov     r6,dpl
06BA AF83      1968            mov     r7,dph
06BC D005      1969            pop     ar5
06BE D004      1970            pop     ar4
06C0 D003      1971            pop     ar3
06C2 D002      1972            pop     ar2
06C4 C3        1973            clr     c
06C5 EE        1974            mov     a,r6
06C6 9414      1975            subb    a,#0x14
06C8 EF        1976            mov     a,r7
06C9 6480      1977            xrl     a,#0x80
06CB 9480      1978            subb    a,#0x80
06CD 4001      1979            jc      L040020?
06CF           1980   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:659: if (right_distance < dist_table[dist_index]){
06CF E500      1981            mov     a,_dist_index
06D1 2500      1982            add     a,_dist_index
06D3 FE        1983            mov     r6,a
06D4 E501      1984            mov     a,(_dist_index + 1)
06D6 33        1985            rlc     a
06D7 EE        1986            mov     a,r6
06D8 2440      1987            add     a,#_dist_table
06DA F8        1988            mov     r0,a
06DB 8606      1989            mov     ar6,@r0
06DD 08        1990            inc     r0
06DE 8607      1991            mov     ar7,@r0
06E0 C3        1992            clr     c
06E1 EA        1993            mov     a,r2
06E2 9E        1994            subb    a,r6
06E3 EB        1995            mov     a,r3
06E4 9F        1996            subb    a,r7
06E5 5001      1997            jnc     L040016?
06E7           1998   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:660: Move_Right_Motor_Forwards();
06E7 C002      1999            push    ar2
06E9 C003      2000            push    ar3
06EB C004      2001            push    ar4
06ED C005      2002            push    ar5
06EF 120100    2003            lcall   _Move_Right_Motor_Forwards
06F2 D005      2004            pop     ar5
06F4 D004      2005            pop     ar4
06F6 D003      2006            pop     ar3
06F8 D002      2007            pop     ar2
06FA           2008   L040016?:
06FA           2009   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:662: if (right_distance > dist_table[dist_index]){
06FA E500      2010            mov     a,_dist_index
06FC 2500      2011            add     a,_dist_index
06FE FE        2012            mov     r6,a
06FF E501      2013            mov     a,(_dist_index + 1)
0701 33        2014            rlc     a
0702 EE        2015            mov     a,r6
0703 2440      2016            add     a,#_dist_table
0705 F8        2017            mov     r0,a
0706 8606      2018            mov     ar6,@r0
0708 08        2019            inc     r0
0709 8607      2020            mov     ar7,@r0
070B C3        2021            clr     c
070C EE        2022            mov     a,r6
070D 9A        2023            subb    a,r2
070E EF        2024            mov     a,r7
070F 9B        2025            subb    a,r3
0710 5001      2026            jnc     L040021?
0712           2027   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:663: Move_Right_Motor_Backwards();
0712 C004      2028            push    ar4
0714 C005      2029            push    ar5
0716 120100    2030            lcall   _Move_Right_Motor_Backwards
0719 D005      2031            pop     ar5
071B D004      2032            pop     ar4
071D 8001      2033            sjmp    L040021?
071F           2034   L040020?:
071F           2035   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:667: Stop_Car();
071F C004      2036            push    ar4
0721 C005      2037            push    ar5
0723 120100    2038            lcall   _Stop_Car
0726 D005      2039            pop     ar5
0728 D004      2040            pop     ar4
072A           2041   L040021?:
072A           2042   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:669: if (abs(left_distance - dist_table[dist_index]) >= ERROR_BOUND){
072A E500      2043            mov     a,_dist_index
072C 2500      2044            add     a,_dist_index
072E FA        2045            mov     r2,a
072F E501      2046            mov     a,(_dist_index + 1)
0731 33        2047            rlc     a
0732 EA        2048            mov     a,r2
0733 2440      2049            add     a,#_dist_table
0735 F8        2050            mov     r0,a
0736 8602      2051            mov     ar2,@r0
0738 08        2052            inc     r0
0739 8603      2053            mov     ar3,@r0
073B EC        2054            mov     a,r4
073C C3        2055            clr     c
073D 9A        2056            subb    a,r2
073E F582      2057            mov     dpl,a
0740 ED        2058            mov     a,r5
0741 9B        2059            subb    a,r3
0742 F583      2060            mov     dph,a
0744 C004      2061            push    ar4
0746 C005      2062            push    ar5
0748 120100    2063            lcall   _abs
074B AA82      2064            mov     r2,dpl
074D AB83      2065            mov     r3,dph
074F D005      2066            pop     ar5
0751 D004      2067            pop     ar4
0753 C3        2068            clr     c
0754 EA        2069            mov     a,r2
0755 9414      2070            subb    a,#0x14
0757 EB        2071            mov     a,r3
0758 6480      2072            xrl     a,#0x80
075A 9480      2073            subb    a,#0x80
075C 4001      2074            jc      L040027?
075E           2075   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:670: if (left_distance < dist_table[dist_index]){
075E E500      2076            mov     a,_dist_index
0760 2500      2077            add     a,_dist_index
0762 FA        2078            mov     r2,a
0763 E501      2079            mov     a,(_dist_index + 1)
0765 33        2080            rlc     a
0766 EA        2081            mov     a,r2
0767 2440      2082            add     a,#_dist_table
0769 F8        2083            mov     r0,a
076A 8602      2084            mov     ar2,@r0
076C 08        2085            inc     r0
076D 8603      2086            mov     ar3,@r0
076F C3        2087            clr     c
0770 EC        2088            mov     a,r4
0771 9A        2089            subb    a,r2
0772 ED        2090            mov     a,r5
0773 9B        2091            subb    a,r3
0774 5001      2092            jnc     L040023?
0776           2093   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:671: Move_Left_Motor_Forwards();
0776 C004      2094            push    ar4
0778 C005      2095            push    ar5
077A 120100    2096            lcall   _Move_Left_Motor_Forwards
077D D005      2097            pop     ar5
077F D004      2098            pop     ar4
0781           2099   L040023?:
0781           2100   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:673: if (left_distance > dist_table[dist_index]){
0781 E500      2101            mov     a,_dist_index
0783 2500      2102            add     a,_dist_index
0785 FA        2103            mov     r2,a
0786 E501      2104            mov     a,(_dist_index + 1)
0788 33        2105            rlc     a
0789 EA        2106            mov     a,r2
078A 2440      2107            add     a,#_dist_table
078C F8        2108            mov     r0,a
078D 8602      2109            mov     ar2,@r0
078F 08        2110            inc     r0
0790 8603      2111            mov     ar3,@r0
0792 C3        2112            clr     c
0793 EA        2113            mov     a,r2
0794 9C        2114            subb    a,r4
0795 EB        2115            mov     a,r3
0796 9D        2116            subb    a,r5
0797 5001      2117            jnc     L040032?
0799           2118   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:674: Move_Left_Motor_Backwards();
0799 020100    2119            ljmp    _Move_Left_Motor_Backwards
079C           2120   L040027?:
079C           2121   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:678: Stop_Car();
079C 020100    2122            ljmp    _Stop_Car
079F           2123   L040032?:
079F 22        2124            ret
07A0           2125   ;------------------------------------------------------------
07A0           2126   ;Allocation info for local variables in function 'Fake_run'
07A0           2127   ;------------------------------------------------------------
07A0           2128   ;------------------------------------------------------------
07A0           2129   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:682: void Fake_run(void) {
07A0           2130   ;        -----------------------------------------
07A0           2131   ;         function Fake_run
07A0           2132   ;        -----------------------------------------
07A0           2133   _Fake_run:
07A0           2134   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:683: Rotate_Car_180_CW();
07A0 120100    2135            lcall   _Rotate_Car_180_CW
07A3           2136   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:684: wait1s();
07A3 120100    2137            lcall   _wait1s
07A6           2138   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:685: wait1s();
07A6 120100    2139            lcall   _wait1s
07A9           2140   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:686: wait1s();
07A9 120100    2141            lcall   _wait1s
07AC           2142   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:687: Rotate_Car_180_CCW();
07AC 120100    2143            lcall   _Rotate_Car_180_CCW
07AF           2144   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:688: wait1s();
07AF 120100    2145            lcall   _wait1s
07B2           2146   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:689: wait1s();
07B2 120100    2147            lcall   _wait1s
07B5           2148   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:690: wait1s();
07B5 020100    2149            ljmp    _wait1s
07B8           2150   ;------------------------------------------------------------
07B8           2151   ;Allocation info for local variables in function 'main'
07B8           2152   ;------------------------------------------------------------
07B8           2153   ;logic_0_thresh            Allocated to registers 
07B8           2154   ;cmd                       Allocated to registers r2 
07B8           2155   ;------------------------------------------------------------
07B8           2156   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:693: void main (void)
07B8           2157   ;        -----------------------------------------
07B8           2158   ;         function main
07B8           2159   ;        -----------------------------------------
07B8           2160   _main:
07B8           2161   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:697: dist_index = 1;
07B8 750001    2162            mov     _dist_index,#0x01
07BB E4        2163            clr     a
07BC F501      2164            mov     (_dist_index + 1),a
07BE           2165   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:698: reverse = 0;    
07BE 75C000    2166            mov     _reverse,#0x00
07C1           2167   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:700: printf("\n");
07C1 7430      2168            mov     a,#__str_6
07C3 C0E0      2169            push    acc
07C5 74A5      2170            mov     a,#(__str_6 >> 8)
07C7 C0E0      2171            push    acc
07C9 7480      2172            mov     a,#0x80
07CB C0E0      2173            push    acc
07CD 120100    2174            lcall   _printf
07D0 1581      2175            dec     sp
07D2 1581      2176            dec     sp
07D4 1581      2177            dec     sp
07D6           2178   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:701: Testing_Code();
07D6 120100    2179            lcall   _Testing_Code
07D9           2180   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:702: while(1){
07D9           2181   L042012?:
07D9           2182   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:704: run();
07D9 120100    2183            lcall   _run
07DC           2184   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:707: if(Get_Right_Distance() < logic_0_thresh){
07DC 120100    2185            lcall   _Get_Right_Distance
07DF AA82      2186            mov     r2,dpl
07E1 AB83      2187            mov     r3,dph
07E3 C3        2188            clr     c
07E4 EA        2189            mov     a,r2
07E5 940A      2190            subb    a,#0x0A
07E7 EB        2191            mov     a,r3
07E8 9400      2192            subb    a,#0x00
07EA 5001      2193            jnc     L042012?
07EC           2194   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:708: Stop_Car();
07EC 120100    2195            lcall   _Stop_Car
07EF           2196   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:709: cmd = rx_byte (logic_0_thresh);         
07EF 90000A    2197            mov     dptr,#0x000A
07F2 120100    2198            lcall   _rx_byte
07F5 AA82      2199            mov     r2,dpl
07F7           2200   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:710: if(cmd == MOVE_FURTHER) Move_Car_Further();
07F7 BAFDB0    2201            cjne    r2,#0xFD,L042002?
07FA C002      2202            push    ar2
07FC 120100    2203            lcall   _Move_Car_Further
07FF D002      2204            pop     ar2
0801           2205   L042002?:
0801           2206   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:711: if(cmd == MOVE_CLOSER) Move_Car_Closer();
0801 BAF5F0    2207            cjne    r2,#0xF5,L042004?
0804 C002      2208            push    ar2
0806 120100    2209            lcall   _Move_Car_Closer
0809 D002      2210            pop     ar2
080B           2211   L042004?:
080B           2212   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:712: if(cmd == ROTATE_180) Rotate_Car_180_CW();
080B BAD530    2213            cjne    r2,#0xD5,L042006?
080E C002      2214            push    ar2
0810 120100    2215            lcall   _Rotate_Car_180_CW
0813 D002      2216            pop     ar2
0815           2217   L042006?:
0815           2218   ;        C:\Users\Travis\Documents\GitHub\eeceProject2\eeceProject2\Car_Project_2.c:713: if(cmd == PRL_PARK) Parallel_Park();
0815 BA8070    2219            cjne    r2,#0x80,L042012?
0818 120100    2220            lcall   _Parallel_Park
081B 8001      2221            sjmp    L042012?
081D           2222            rseg R_CSEG
081D           2223   
0000           2224            rseg R_XINIT
0000           2225   
0000           2226            rseg R_CONST
0000           2227   __str_0:
0000 20        2228            db ' '
0001 0A        2229            db 0x0A
0002 20426566  2230            db ' Before Turning!!!!!!!!! Right Voltage Reading: %u, Left V'
     6F726520
     5475726E
     696E6721
     21212121
     21212121
     20526967
     68742056
     6F6C7461
     67652052
     65616469
     6E673A20
     25752C20
     4C656674
     2056
003C 6F6C7461  2231            db 'oltage Reading: %u'
     67652052
     65616469
     6E673A20
     2575
004E 00        2232            db 0x00
004F           2233   __str_1:
004F 20        2234            db ' '
0050 0A        2235            db 0x0A
0051 20466972  2236            db ' First Loop Right Voltage Reading: %u, Left Voltage Readin'
     7374204C
     6F6F7020
     52696768
     7420566F
     6C746167
     65205265
     6164696E
     673A2025
     752C204C
     65667420
     566F6C74
     61676520
     52656164
     696E
008B 673A2025  2237            db 'g: %u'
     75
0090 00        2238            db 0x00
0091           2239   __str_2:
0091 0D        2240            db 0x0D
0092 00        2241            db 0x00
0093           2242   __str_3:
0093 20        2243            db ' '
0094 0A        2244            db 0x0A
0095 20536563  2245            db ' Second Loop Right Voltage Reading: %u, Left Voltage Readi'
     6F6E6420
     4C6F6F70
     20526967
     68742056
     6F6C7461
     67652052
     65616469
     6E673A20
     25752C20
     4C656674
     20566F6C
     74616765
     20526561
     6469
00CF 6E673A20  2246            db 'ng: %u'
     2575
00D5 00        2247            db 0x00
00D6           2248   __str_4:
00D6 6D616465  2249            db 'made through both loops'
     20746872
     6F756768
     20626F74
     68206C6F
     6F7073
00ED 00        2250            db 0x00
00EE           2251   __str_5:
00EE 72696768  2252            db 'right = %u, left = %u, cmd = %u '
     74203D20
     25752C20
     6C656674
     203D2025
     752C2063
     6D64203D
     20257520
010E 0A        2253            db 0x0A
010F 00        2254            db 0x00
0110           2255   __str_6:
0110 0A        2256            db 0x0A
0111 00        2257            db 0x00
0112           2258   
000E           2259            CSEG
000E           2260   
000E           2261   end
